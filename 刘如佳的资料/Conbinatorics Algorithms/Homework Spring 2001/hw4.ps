%!PS-Adobe-2.0
%%Creator: dvips(k) 5.78 Copyright 1998 Radical Eye Software (www.radicaleye.com)
%%Title: hw4.dvi
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%EndComments
%DVIPSCommandLine: dvips hw4.dvi -o
%DVIPSParameters: dpi=1200, compressed
%DVIPSSource:  TeX output 2001.03.20:1343
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR[matrix currentmatrix{dup dup round sub abs 0.00001 lt{round}if}
forall round exch round exch]setmatrix}N /@landscape{/isls true N}B
/@manualfeed{statusdict /manualfeed true put}B /@copies{/#copies X}B
/FMat[1 0 0 -1 0 0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{
/nn 8 dict N nn begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N
string /base X array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N
end dup{/foo setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{
/sf 1 N /fntrx FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]
N df-tail}B /E{pop nn dup definefont setfont}B /ch-width{ch-data dup
length 5 sub get}B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{
128 ch-data dup length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub
get 127 sub}B /ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data
dup type /stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N
/rc 0 N /gp 0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup
/base get 2 index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx
0 ch-xoff ch-yoff ch-height sub ch-xoff ch-width add ch-yoff
setcachedevice ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff
.1 sub]/id ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N
/cp 0 N{rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id
gp get /gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp
add /cp X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add
/gp X adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{
dup 255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1
adv}B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2
idiv S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore userdict
/eop-hook known{eop-hook}if showpage}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 2 string 0 1 255{IE S dup 360 add 36 4 index cvrs cvn
put}for pop 65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N
/RMat[1 0 0 -1 0 0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley
X /rulex X V}B /V{}B /RV statusdict begin /product where{pop false[
(Display)(NeXT)(LaserWriter 16/600)]{dup length product length le{dup
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale rulex ruley false
RMat{BDot}imagemask grestore}}{{gsave TR -.1 .1 TR rulex ruley scale 1 1
false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave newpath transform
round exch round exch itransform moveto rulex 0 rlineto 0 ruley neg
rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta 0 N /tail
{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}B /c{-4 M}
B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{3 M}B /k{
4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p -1 w}B /q{
p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{3 2 roll p
a}B /bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258431 52099146 1000 1200 1200 (hw4.dvi)
@start
%DVIPSBitmapFont: Fa msam8 8 1
/Fa 1 71 df<4E7E4E7EA34E7EA34E7EA34E7EA34E7EA34E7EA395B5FCA34D80A34D80A3
4D80A34D80A34D80A34D80A2003FBF12FCC1FCA3003F1EFC6C1EF800071EE06C1EC06C1E
806C6CF4FE006D646D6401071CE06D64010099C7FC6E626E62020F1AF06E626E62020097
C8FC6F60031F18F86F606F60030118806F95C9FC705EA293B9FCA34B84A34B84A34B84A3
4B84A34E7E4B4A6C80F0F00F4E7E4B4A6C8095C7FC4D804B01F8021F7F4D804D8092B500
8002017F94C9FC4C824A01F8041F7F4C8204C016034A49707F93CBFC03FC183F4A48727E
4B180F03C018034B18010202CD1240706B79DB7E>70 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmsl10 10.95 31
/Fb 31 122 df<E07FFEED0FFC070FB500E091B51280077F02F8010714C00603B600FE01
1F14F0060F903DE003FF803FF807F8DE3FFEC73B3FC0FFC001FCDEFFF0DA07E190380007
FE050301C0912603F7FE131F4D90C8261FFFFCEB3FFFDD1FFC4B5B4D4892B5485B4D484A
5CDDFFC04D90B5FC4C494A5C4C90C8FC4C96C713FE4C481A7F4C484D15FC4DF23FF8043F
4EEC1FF04C486FEE07C0754991C7FC4C48167F1C3F525A4B5BA44B494C5AA64B90C9485B
A64B484C5BA64B484C90CAFCA3010FBE12FCA34965A390C7D83FFCC9000F90CAFCA34B48
4C5AA64B484C5AA64A494C5AA64A494C5AA64A494B5BA64A90C9485BA64A484C5BA64A48
4C90CBFCA64A484C5AA64A484C5AA549187FA2496D4C7E011F01FE0307EBFFC0007FB7D8
801FB712FCA3B8485AA202C317F080807BFF6A>11 D<F23FFE0707B512C0077F14F80603
B67E060F9038E003FFDE3FFEC7EA3F80DEFFF0EC0FC04D01C0EC07E0050790C8EA03F0DD
0FFCED01F8DD3FF8150F4D48ED3FFC4D48157F4C4915FF4C495C4C90C85A4C5A4C485D5F
163F4C5A1DF84C48811DF07513E04B496F1380F43E0099C7FCA24B5BA64B90CCFCA64B5A
A64B5AF41F800803B5FC010FBCFCA3491B00A390C7D83FFCC81203F2007F874B48705AA6
4B484C5AA64A494C5AA64A494C5AA64A494B5BA64A90C9485BA64A484C5BA64A484C90C7
FCA64A484C5AA64A484C5AA549187FA2496D4C7E011F01FE03076D7E007FB7D8801FB712
E0A3B8484816C0A202C317F05E807BFF65>I[<ED1F80ED7FC0913801FFF04A13F85C16FC
5CA25CA416F8A416F05CA316E0A416C0A416805CA31600A45DA45D14FFA35DA45DA45D5B
A35DA45DA492C7FC5BA35CA45CA45C1307A35CA45CA45C130FA35CA26DC8FC90C9FCB013
7C48B4FC00077F487F487F5AA2487FA3B55A7E5CA26C5B91C8FC6C5AEA07FCEA03F0>38
130 111 257 51 33 D<EB0FC0EB3FF0497E497E487F5A805AA35A15807EA36C14006C13
EF6C13CFEB3F0F1300A2141EA45CA35CA35CA2495AA2495A13075C49C7FC5B131E5B137C
5B485A485A485A485A48C8FC123E5A5A5A12601936739233>44 D<137C48B4FC00071380
4813C04813E05AA24813F0A3B512E07E14C0A26C138014006C5AEA07FCEA03F014136F92
33>46 D<143FECFF804913E04913F05B4913F8A25B15FC4913F8A36D13F0A215E06D13C0
6D1380903803FE00EB00F891C7FCB3B3A4137C48B4FC00077F487F487F5AA2487FA3B55A
7E5CA26C5B91C7FC6C5AEA07FCEA03F01E4E6FCD33>58 D<020FB5D8F07FB56C017FB500
83B512FC94B794B6FCA298C718F8A24A97B9FC91C703E0C9000792C7FC041F91CB14F870
01FC7213E070864E62A34C494E5BA64C4995B5C8FCA64C494D5BA64C494D5BA693B5CB48
5BA64B494E5BA64B494E5BA64B494E5BA294BCFCA44B64A205F0CB7EA44B4995B5C9FCA6
4B494D5BA64B494D5BA692B5CB485BA64A494E5BA64A494E5BA64A494E5BA64A494E5BA5
4A97B5FC4A614A6D4D800103B66C041F14FC007FB800F80103B912C0B95CA4DAFE074ADC
F03F5C8E7C79FB88>72 D<020FB600FE0A7FB612E07299B7FC6AA24A705016C0A291C7E4
07BF01F8C7FC041F9BB512C0DC0FEF6D506C90C8FC04071D1EA15A223CA2DC0FC76D5048
5AA26AA2575A05C36D4F5ADC1F830AC15BF90781A205816DF10F01A2211EDC3F01525B21
3C717F217821F0A2047E5148485B727EF803C0A2F80780727E4C5148485BA2201E68727F
684B48535B68727F555AA2555A4B4850484990C9FC727F55C7FCA21F1EA24B486D6D4C4A
5AA267A2726D5E545A4B48535A545AA2726D4B5AA254C8FC4B48525B1E1E736C5DA266A2
4BC86C6C4B4A5BA2535AA2535A737F037E4F484A5B53C8FCA2736D131EA2654B535B6573
7F65525AA24A484E484B5B7313F0525AA252C9FC7313F84A48061E4C90CAFCA264647313
FC644A48535AF3FDE0A274B45AA2020F6199CA485A86021F604A7E027F604A6C64010301
FE70485E010F6D6C517F90B600F04C043FEBFFE0B800E0060FB812FE745A63A26302E171
C815E0AB7C78FBA7>77 D<017FC01280A490C1FCA203FCC7000302E0C7123F03C06E0280
14014849C991C97E02F81C1F02E01C07028076130091C9484982485A4989A2498A485A4E
5B5BA248481E7EA2203E494C5B121FA290CAFCA25A003E4D49177EA2207C127E127CA24E
5BA25AA3CB97C7FC4E5BA64E5BA695B5CDFCA64D5BA64D5BA64D5BA64D5BA64D5BA64D5B
A64D5BA694B5CEFCA64C5BA45EA24C7F041F800303B612FC010FBBFCA25BA263EFC07F79
7B6CFA83>84 D[<0303B612804B1500A64B5C04F0C8FCA54B5AA64B5AA64B5AA64BC9FC
A64A5AA64A5AA64A5AA64A5AA64A5AA64A5AA64A5AA64ACAFCA6495AA6495AA6495AA649
5AA6495AA6495AA6495AA649CBFCA6485AA6485AA6485AA6485AA6485AA6485AA6485AA4
90B512F0A2B65AA6>57 181 115 263 51 91 D[<0303B612804B1500A64B5C92C71201
A54D5AA64D5AA64D5AA64D5AA64D5AA64D5AA64DC7FCA64C5AA64C5AA64C5AA64C5AA64C
5AA64C5AA64C5AA64CC8FCA64B5AA64B5AA64B5AA64B5AA64B5AA64B5AA64B5AA64BC9FC
A64A5AA64A5AA64A5AA64A5AA4007FB5FCA2B65AA6>57 181 132
263 51 93 D<93380FFF804BB512FC030F14FF033F15C09226FFF80113F0020390C7EA3F
FCDA07F8EC0FFEDA1FE06E7EDA3F806E7F027EC86C7F02FF6F7F4901C08203F0157F4984
6F6F7E5BA26F82495B191FA26D5BA24B153F6D5B010090C9FC147E91CAFCA34F5AA3F07F
FF057FB5FC041FB6FC4BB75A030F14F0037FEBF8004AB5C7FC020F13F8023F13C04A90C7
485B903801FFFC010713F04913C0495B4948C8FCD9FFFC4B5B485B5C5A485B485B4A4B5B
48F203E04890C9FCA2485A6097388007C0485A60A3604E9038000F80A218F71701007FDC
03E7EC1F006DED07C7003FDC0F87EB803E6DED1F036C043E5D6C6D02FCECC1F86C6D9026
03F801EBFFF06C01F090260FE0005CC601FED9FFC05D013FB6C76C5B010F02FCDA1FFEC7
FC010102F0EC07F0D9000F90CCFC535376D05B>97 D<ED3F800107B5FC48B6FC4892CCFC
A5EA00039038007FFE143FA55DA64A5AA64A5AA6495BA6495BA6495BEF0FFE94B512E004
0714FC041F14FF93267FF0077F49D901FFC7EA7FE0DB03F8EC1FF8DB0FE06E7EDB1F806E
7E4BC86C7E037E6F7F90261FFEF86F7F6E48834B707E5D747E5D4990CA7F4A171F87A287
A24948831C80A41CC0495AA462A2485BA648494D1380A41C0062485BA2631AFF63A24849
4C5BA2636163614890CA5C4F5BA24F90C7FC624F5A486D4C5A4F5A626E4B5B01FB4C5BD9
F3E04B90C8FC267FF1F0ED1FFED9E1F8ED3FF8D9C0FC4B5AD9807E913801FFC06E02075B
9026001FC0D91FFEC9FC00FE903A07F801FFF8486DB612E048010092CAFCC8003F13F803
0790CBFC52806DFD65>I<EFFFFC040FEBFFE0047F14FC0303B7FC030F16C04BD9800313
E0DB7FFCC7EA1FF0912601FFF0EC03F84A01C015FC020F90C8EA0FFE4A48153F4A48157F
4A4892B5FC4A5A49495C495B495B5B4990C814FE495A1AFC49486F13F84948EE7FF0F13F
E048F00F80484993C7FCA2485BA25A5CA25A5C5AA34890CCFCA5485AAD127FA3F1018000
3FF003C019077F6CF00F80A26CF01F006E5E6C183E6E5E6C18FC6E4B5A6C4D5A6C6D4B5A
6D6C4B5A6D6CED3F806D6C4BC7FC6D6C6CEB01FE6D01E0EB0FF8010101FCEBFFF06D6CB6
12C06E92C8FC020F14FC020114E09126001FFEC9FC485374D051>I<F41FC00803B5FC97
B6FC4F1580A5F10001E0003F130087A564A6515AA6515AA6515AA6505BA6505BEF3FF804
07B5FC043F14E04BB612F003079038E007FCDB1FFEC76C485BDB7FF8143FDBFFE0EC0F87
02030180EC07C74A90C8EA03E7DA1FFEED01F7DA3FF893B5C7FC4A48814A4882495B4984
495B4990CA5B495A133F495AA2495A484F5A5C5A5C5AA248494D5AA25A5C5AA24F5B91CA
FC5AA448484D5BA64F5BA25BA44F5B127FA4123F6D4D90C8FCA2121FA2000F606D5F6C61
19FF6C6D5D606C6D5D6C5F6D6C4B7F6D6C4B6C7F6D6C03FC14F06D6CDA03F8ECFFF06D6C
EC0FF0902601FF80EB3FC09029007FF803FF80B65A6EB5485A020F14F8020102C003F0C7
FC9126001FFCC700FCC9FC5A8074FD65>I<933801FFE0041F13FE93B67E030715E0031F
9038007FF8DB3FF8EB0FFCDBFFE0EB03FF4A01806D1380020790C813C0DA0FFCED7FE0EC
3FF84A48ED3FF04A4816F84949151F4918FC495B4990C9120F494817FEA2495A017F18FF
5C13FF485B855A4A5E5AA2485BA25A5CA25A91BAFC1AFE5A1AFC91CCFCA3485AAA5BA212
7F7FA3003F19C0F101E01903121F6DEF07C0A26CF00F80191F6C6DEE3F006C183E6E5E6C
6D16FC6C4D5A6D6C4B5A6EED0FE06D6C4B5AD90FFE037FC7FC6D6C6CEB01FE6D01E0EB0F
FC010001FEEB7FF06EB612C0021F5D020702FCC8FC020014F0030F90C9FC485375D051>
I<F13FF0953803FFFE061F7F067F14C09539FFE01FE0050390380007F0DD07FCEB1FF8DD
1FF8137F4D48EBFFFC4D5A4D485A4C13804C495A4C5A160F4D15F8041F804D15F0043F6E
13E04DEC7FC0047FED1F004D91C7FC16FFA24B5BA54B5BA64B90CAFCA64B5AA64B5AA301
0FB812F0A3495FA390C7D83FFCCAFCA34B5AA64B5AA64A5BA64A5BA64A5BA64A90CBFCA6
4A5AA64A5AA64A5AA64A5AA55BA2497F011F13FF007FB712F0A3B8FCA214C34E807AFF38
>I<F407F8F47FFCDD07FF4AB5FC057F01F0010714804CB500FC90381FF81F040F02FF90
397F807FC04C9239C0FE00FF93267FFE01EBE3F8933CFFE0003FFFE001030301806D1380
4B90C76C13004B486E6E13804B486E16004B4870137E4B486E15184B487090C7FC5C4A49
82854A4982A25C93C9FC5C615D143FA4634B5DA3636163A2021F4C90C9FC626F151F020F
5F4F5A02074C5A6E6C4B5A70495B6E6D495B4A6D010F90CAFC4A6DEB3FFC923ABFFE01FF
F8DA0F8FB612E0DA1F071580DA1E014ACBFC91263E003F13F04A010790CCFC93CEFC14FC
5CA21301A4801303A26D7EA28015E092B7FC6D17FCF1FFC06E17F01AFC6E17FF6E846E18
E04A8491BA7E1303010F0180C7000180D91FFCC9000F7FD97FF01601D9FFC09338003FFF
4849834890CB7E4848844848727F5B121F484884A2485AA448484E90C8FCA36C6C4E5AA2
505A1A1F6C6C4E5A505A6C6C4E5A6C6C4D5B6C6C4D5B6C6C050F90C9FC6C01C0EE3FFC6C
01F0EEFFF8D97FFC030713E090261FFF80023F1380010701FC90260FFFFECAFC6D90B712
F8D9007F16C0021F4BCBFC020115E0DA000701FCCCFC62787ED15B>I<17FEED1FFF0207
B5FC4A5CA5EC000F03015B81A55FA64B5BA64B5BA64B5BA64B90CCFCA64B5AF10FFF077F
13F00603B512FE060F8095263FF00713C04B4890267F80007FDD01FCC76C7EDD03F06E7E
EF0FC04D4881053EC8121F4B4848825F5FEEF9E004FB83EEFFC09238FFF78004FFC9FCA2
5E5EA24A4E5A5EA25EA34A494C5AA64A494C5AA64A494B5BA64A90C9485BA64A484C5BA6
4A484C5BA64A484C90C7FCA54960A2496D4C7F011F01FF0303B512E0007FB7D8C00FB712
F8A3B8484816F0A202E1EFFC3F5D7E7BFD65>I<161FEE7FC0923801FFE04B13F04B13F8
5D17FC5DA417F8A217F06F13E0A26F138003011300ED00FC93C7FCB3A5167E91380FFFFE
0103B5FC5BA25EA3EB00071401806F5AA64B5AA64A5BA64A5BA64A5BA64A90C7FCA64A5A
A64A5AA64A5AA64A5AA55BA2497F011F13FE007FB7FC5EA2B7FCA214C32E7A7AF933>I<
17FEED1FFF0207B5FC4A14FCA5EC000F030113F881A517F0A64B13E0A64B13C0A64B1380
A64B1300A64B5AA64B5AA64B5AA64B5AA64A5BA64A5BA64A5BA64A90C7FCA64A5AA64A5A
A64A5AA64A5AA55BA2497F011F13FE007FB71280A3B81200A214C32F7E7AFD33>108
D<047EDA0FFF933803FFC091260FFFFE91B500F0033F13FC0107B5020302FC92B6FC060F
6E0203814993283FF007FF8090260FFC0113E04C9026FF00016D903A3FC0007FF0DD01FC
6D6D49C76C7EDD03F06E6C01FC6E7ED9000FDA0FC0EE03F002014A486F4848816E023EC8
003FD90F80140F6F48487048C87F4D173EDCF9F05F4DDCFE781780DCFBC05F04FF17FF92
26FFF7805F04FFC95CA24C604C95C9FCA24A494C484C1300A34C5FA34A494C484C5AA64A
494B494C5AA64A494B494C5AA64A90C948494B5BA64A484C494B5BA64A484C90C9485BA6
4A484C484C5BA549067F5FA2496D93B54C7F011F01FF030702C04AB512F0007FB7D8C01F
B7D8F007B712FCA2B8495FA2058005E017F802E1DDF87FEEFE1F8E507ACF98>I<047EEC
0FFF91260FFFFE027F13F00107B50203B512FE060F8095263FF00713C0494A90267F8000
7FDD01FCC76C7EDD03F06E7ED9000FEC0FC002014A48816E023EC8121F6F4848825F5FEE
F9E004FB83EEFFC09238FFF78004FFC9FCA25E5EA24A4E5A5EA25EA34A494C5AA64A494C
5AA64A494B5BA64A90C9485BA64A484C5BA64A484C5BA64A484C90C7FCA54960A2496D4C
7F011F01FF0303B512E0007FB7D8C00FB712F8A3B8484816F0A202E1EFFC3F5D507BCF65
>I<EF7FFC0407B512C0043F14F84BB612FE03079039C00FFF8092271FFC00017FDB7FF0
9038007FF0DBFFC0EC1FF8020390C86C7E4A486F7EDA1FFC6F7EDA3FF06F7F4A48834A48
8149727E4949834990CA123F494884131F4A84013F181F49488413FF5C48865C5A5A4A19
805AA3485BA25AA291CB5AA25AA448484E1300A5505AA25B63A26163A24F5B127F634F5B
A26C6C4D5BA24F90C7FC001F614F5A6C6C177F626C6D4C5A4E5B6C6D4B5B6C6D4B5B6C4D
90C8FC6D6CED1FFC6D6CED7FF8D91FFE4A485A6D6C4A13C06D01C0011F90C9FC6D9039FC
01FFFE010090B612F8023F15E0020F92CAFC020114F8DA001F90CBFC515375D05B>I<04
FC49B4FCDA1FFF020F13C00107B5023F13F095B57E943901FE03FC933AF807F00FFE4992
390FC01FFF4DC65AD9000F143E02014A4913806E5C6F484890B51200EEF1E016F34D6D5A
EEF78004FF6E5ADBFFEFC7EA1FF004FE6E5A96C8FC5EA25E5CA25EA35E5CA25EA44A5BA6
4A90CBFCA64A5AA64A5AA64A5AA64A5AA55BA2497F011F13FF007FB712F0A4B8FC02C35C
49507BCF47>114 D<DC1FFF14600303B538F001F0031FECFC03037FECFF07912701FFE0
00138FDA07FEC7EA1FFFDA0FF0020313E0DA3FC0804A48804AC9127F495A4A163F4948EE
1FC013075C130F190F131F4A1780133FA280A36EEE1F00017F836D6C160602FF93C7FC81
15F015FE6DEBFFF0EEFF806D15F817FF6D16C06D16F06D16FC6D826E81021F826E820203
82DA007F81150FDB007F801603DC001F7F170705017FEF007F0003173F486C161F7F000F
170FA21807A4001F60A27F61A24E5A487E61181F6D5F183F6D4C5A486C4CC7FC4D5A6D4B
5AD9EF804A5AD9C7E0EC1FE0D983F8ECFFC026FF01FF010F90C8FC486C6CB55A486D14F0
48010714800060010001F8C9FC44537AD048>I<ED03E04B5AA5150F5EA2151FA3153F93
C8FCA25DA25DA24A5AA214031407A2140F4A5AA2143F147F14FF5B01075B5B133F90B812
FE1207127FB912FCA3D8000101F0C8FCA3495BA6495BA6495BA64990C9FCA6495AA6495A
A64948EC07C0A64849EC0F80A64849EC1F00A4173EA35F7E5FA26C6D495A4C5A017F1407
6E495A6D6C495A6D6C49C7FC90390FFF80FE6DEBFFFC6D5C010014E0023F5BDA03FEC8FC
377271EF47>I<DA03F0177E90B593381FFFFE007F050FB5FCA3B6484A5CA3C6EF001F01
1F17036D836D496F5BA649494B5BA64990C9485BA649484C5BA649484C5BA649484C90C7
FCA648494C5AA648494C5AA319FFA348494B5BA260A260A24E5B606C171E60187C6C5FDD
01F17F6CDC03E17F6EDA07C1EBFF80017FDB1F81ECFF806D6CEC3F01D91FFCEB01FE9029
0FFFC00FF8031500010390B512E0010015C0023FD9FE001580020101F002F0C8FC51526F
CF65>I<B5260FFFFC91391FFFC7FF91B594B5FCA2615EA2C64AC8000714E0011F01F003
01EBFE006D496F13F84B705A636D198098C7FC811A7E6D187C1AFC626F15016D604F5A19
076F5E190F6D60191F6F93C8FC193E147F6119FC6F5D023F15016118036F5D4E5A6E150F
6170131F96C9FC6E5D183E60826E5D170160EEE003606E14076070485A171F6E92CAFC5F
173EEEF87E6E147C5F16F9EEFDF016FF6F5BA25F5F8194CBFCA25E151F5EA25E5E150F5E
A2ED0780585070CD60>I<2B7FFF0FFFFC07FFE1B53B8003FFFC3FF891B592B6000091B5
12F0A316F8B7495FC64AC7000F0280D9007FEBFE00011F01F0020149C8001F13F04B6E01
F8030713C06D49745B5094C7FC077F5F6D765A745E671E036F636D1C07674F6C150F674E
171F6F98C8FC6D4C5F74153EDE07DF167E1E7C6FDA0F9F5E6D178FDE1F0F4B5A86063E4C
5A814E6C4B5A027F15FC06F86E495A170106F04CC9FC6F1303023F4B6C153E0507177E06
C06E137C050F17FC6F02805E051F6D14016E03005E4DEDE003053E5F057E1607DC807C5F
6E02FC6D140F4D5FDC81F0EDF01F9ACAFCDCC3E05E087F133E6ED9C7C0167EF3F87CDCCF
805EA204FFC8EBF9F06E173F4CEEFFE0A24C5FA24C6F5B804C94CBFCA24C5E1A0F6E495E
A24C5EA293C95B6F1607037E5F033C705A7D5071CD83>I<91B5260FFFFC91391FFFC7FF
93B594B5FCA26360A202004AC8000714E0031F01F00301EBFE006F496F13F84D705A6F19
C0657194C7FC1C7EA26F187C1CFC715E515A6F170364711507646F170F64714BC8FC6304
7F163E1B7E71157C63163F505A711403637015076372495A1A1F7093C9FC621A3E72137E
1A7C705D190106E05B1903705D190706F05B4F5A70141F97CAFC725A193E70147E197C72
5A18FD057F5B18FF61A2715B61A296CBFC8360A26060170F60A260715AA24D5A171F95CC
FC5F173E5F17FC5F16015F16035F4C5AD803F8140FD80FFE5D001F151F486C92CDFC163E
48157E6E137CB5C75A15015E4B5A49495A49495A6C48131F4949CEFC018013FE393F0001
F890388007F0391FE03FE06CB512806C91CFFC000113F838003FC0687380CD60>121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmsy10 10.95 3
/Fc 3 113 df<003FBF12F0481EF8C012FCA46C1EF86C1EF06E0871B08D>0
D<1238127FEAFFC013F013FC13FF6C13C06C13F0000713FC000113FF6C6C13C0011F13F0
010713FC0101EBFF806D6C13E0021F13F8020713FE02016D7E6E6C13E0031F13F8030313
FE03006D7E043F13E0040F13F8040313FE0400EBFFC0053F13F0050F13FC050313FF0500
14C0063F13F0060F13FC060113FF726C13C0071F13F0070713FC070113FF736C13E0081F
13F8080713FE08016D7E746C13E0091F13F8090713FE09006D7E0A3F13E00A0F13F80A03
13FE0A00EBFF800B3F13E00B0F13F80B0313FC1D00A21D030B0F13F80B3F13F09AB51280
0A03EBFE000A0F13F80A3F13E099B51280090749C7FC091F13F8097F13E050B512800807
49C8FC081F13F8087F13E04FB5C9FC070713FC071F13F0077F13C04EB5CAFC060F13FC06
3F13F095B512C0050391CBFC050F13FC053F13F094B512C0040349CCFC040F13F8043F13
E093B51280030349CDFC031F13F8037F13E04AB51280020749CEFC021F13F8027F13E049
B51280010701FCCFFC011F13F0017F13C048B5D0FC000713FC001F13F04813C04890D1FC
EAFFFC13F013C06CD2FC123CD3FCB3AA001FBF12E0481EF0481EF8C012FCA36C1EF86C1E
F06E8E71F38D>21 D<231C233E237F23FFA26A23FE220323FC220723F8220F23F0221F23
E0223F23C0227F238022FF2300696A21036A21076A210F6A211F6A213F6A217F6A21FF9F
C7FC6869A2565AA2200769200F69201F69203F69207F6920FF9EC8FC67681F03681F0768
1F0F681F1F681F3F681F7F681FFF9DC9FC66671E0367A2545AA21E0F671E1F671E3F671E
7F671EFF9CCAFC65661D03DA0380624A6C1907021F63023F1A0F4A6C62D901FF1A1F496D
62491B3F011F6D62491B7F017D6D62D801F91BFFD803F199CBFCD807C06D60D81F806348
486C6C1803007C64486D6D17074864C76C7F525A6E7F1C1F656E6D173F656E6D177F656E
6D17FF9ACCFC6E6D5E646F6C1603641B076F6D5E1B0F6F6D5E1B1F6F6D5E1B3F6F6D5E1B
7F6F6D5E1BFF99CDFC6F6D5C636F6D140363706C140763706D130F63A2706D495AA2706D
133F63706D137F63706D13FF98CEFC706D5A6219037001FE5B1907DD7FFF5B190F71EB8F
F0199F71EBDFE019FF715CA2628397CFFC836183618361187F61A2725AA2181F61725A90
B7748798>112 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmmi8 8 3
/Fd 3 108 df<1830187818FCA2EF01F8A3EF03F0A3EF07E0A2EF0FC0A3EF1F80A3EF3F
00A2177EA35FA24C5AA34C5AA34C5AA24C5AA34C5AA34CC7FCA2167EA35EA34B5AA24B5A
A34B5AA34B5AA24B5AA34BC8FCA3157EA25DA34A5AA24A5AA34A5AA34A5AA24A5AA34AC9
FCA3147EA25CA3495AA3495AA2495AA3495AA3495AA249CAFCA3137EA35BA2485AA3485A
A2485AA3485AA3485AA248CBFCA3127EA35AA212781230368578E347>61
D<16C04B7EA54B7EA84B7EA900784A6CEC0780D8FFC0EFFFC001FE161F267FFFF00203B5
1280001FD9FF8F017FEBFE00000791B712F8000118E06C6C1780010F04FCC7FC010316F0
010016C0023F92C8FC020F14FC020314F0DA007F138092B57EA24A80A24A80A24AEB3FF8
EDFE1F4A486C7E4A486C7EEDF0034A486C7EA24A486C7F4B137F4AC76C7E4A141F49486E
7E49486E7E4A140349486E7E4A14004948157C91C9123C010E161C0104160842407EC047
>63 D<EC07FC90380FFFFE5B5BA27F9038001FFC140FA34A5AA44A5AA44A5AA44A5AA449
5BA44990CAFCA44948157F943803FF80050F13C0053F13E0494891387F81F09438FC0078
933903F003F8933907C00FFC494890380F801F93381E003F4C137F5E494849EBFFF84B5A
4B5A4B48EB7FF090267FE01FC713E0033EEC3FC00378EC1F004B91C7FC9038FFC3E0ECC7
C0ECDF8002FECAFC5AECFFF015FF16C048011F13F002007FED3FFCED0FFE4848EB03FF6F
7F8381485A192019701978484817F0A3F001E048481580A2F003C0A24848EE0780A2F00F
00167F4848161E706C5A93381FE0F8496EB45A705B6CC800015B001C6F6CC7FC3E5D78DB
49>107 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmss9 9 27
/Fe 27 122 df<B8FCAA280A7EA533>45 D<EAFFF8AD0D0D718C2B>I<ED03C01507150F
153F157FEC01FF140F143F0103B5FC48B6FCB7FCA714CFEBFC0FEAFE00C7FCB3B3B3B100
7FB812F0AA346573E44D>49 D<48B912C0AA02E0CAFCB3A6ED07FE92383FFFE002E1B512
F802E314FE02EF8091B712C084848484DBFC077FDBE0007F03806D138092C77E4A6E13C0
4A804A16E04A8019F04A804A16F883CAFC19FCA38319FEAC19FC5FA3000418F8000E5EA2
001F18F06D5D486C4B13E0487E6D4B13C0486C5D6C6C4B13806CB492B5120002C0495B6C
01F813076C01FF013F5B6C91B65A6C5FC617C06D5E6D93C7FC010F15FC010315F0010015
C0021F49C8FC020013E03F657BE14D>53 D<EFFFFC4C7FA24C7FA34C80A34C80A2DC1FFB
7FA3DC3FF37F17F1047F80A217E1DCFFE07FA34B496C7EA24B814D7EA24B824D7EA24B82
4C7F031F82A24C7F033F82A24C7F037F82A24B486D7FA34A496D7FA24A498185A24A4982
85A24A90C86C7FA24A844B81A24A488385A24A48838502FF844B81A2498592B9FC4985A3
4986A34986A24990CA001F7F5C86013F864A83A2017F864A8301FF865C8648874A83A248
874A84481C805C87481CC091CC7E481CE0A24985003F1CF04985A2007F1CF8498500FF1C
FC5E687CE767>65 D<923807FFF092B67E020715F0021F15FE027F6F7E49B812F04917FC
4983131F5B495F90B538FC003F4802C0130192C8123F4801FC150F4801F015034AED00F8
484916784A163848180891CCFC485AA35B127FA67FA37F7E80806C7F80806C13FE6E7E6C
14F06C14FF16F06C15FF6C16F06D15FE6DEDFFC06D16F06D826D16FE0101826D17C0023F
82020F82020182DA003F811503DB003F80040180DC003F14801707050114C083063F13E0
84841AF08484A27213F8A384A84E13F0A300204D13E01230003C5F003E19C0D87F805E6D
4C138001F05E01FC4C1300D9FF804A485A02E05CB500FE021F5BDAFFF090B55A92B75A6C
60001F6000076000014DC7FC6C6C5E011F16F0010316C0D9007F92C8FC020714F8DA001F
1380456E79EA55>83 D<BE12FCAACA49CAFCB3B3B3B3B3A35E677BE669>I<913801FFE0
023F13FE49B67E010F15E0013F8190B712FC00038248821880A29126FC003F13C002C001
0F13E06C48C76C13F001F88001E06E13F8498090C9FC0002EE7FFCCAFCA218FE173FAB03
07B5FC4AB6FC141F91B7FC1307131F137F48B8FC48EDE03F48ECF0004849C7FC4813F048
138091C8FCEA7FFC5B12FF5BA3177FA26D15FFA26C6C5C6D5C6D140F6C01C0133FDAF803
B5FC6C90B7FCA27E6C16BF173F6C15FCC615F06D1480011F01FCC8FC0107138037477AC4
4A>97 D<92381FFF804AB512FC020714FF021F15E0027F8149B712FC4916FF4917805B5B
499026F8007F13004901C0130790B5C712014801FC6E7E4A151F484981484915024A92C7
FC5A5C4890CBFCA2485AA3485AA5485AAC6C7EA46C7EA36C7EA2806C18806E15016C6D15
076C6D150F6E153F6C6D15FF6C01FF020313C06D01C0131F6DD9F801B5FC6D90B7FC7F6D
17806DEEFE006D5E6D6C15F0021F15C002074AC7FC020114F0DA001F90C8FC3A477BC444
>99 D<F07FFCB3B2913803FF80021F13F8027F13FF49B612C04915F0010F15FC4915FF49
16FF5BA290B5EAFC01489138C0003F4891C77E4A14074801F8804A804849804A157F485B
A24890C9FCA25B127FA25BA312FF5BAD6C7EA47F123F7FA26C6D15FFA26E5C6C6D5C5F6C
6D5C6C01FC5C6E5C6C6D6C90B5FC6CECF00792B7FC6D167F6D15FE6D15FC6D15F06D15E0
010115806D6CEBFE00021F01F090C7FC020390C9FC3E6A7BE74F>I<ED3FF00203B5FC02
1F14C0027F14F091B612FC010381498149824982498249D9E01F7F90B5EA00034801FC01
007F4A147F48496E7E4849141F4A6E7E4849140791C87F48825B003F8249178083485AA3
90B912C0A2BAFCA701F0CBFCA6127F7FA36C7EA27F121F7FA26C7F6C6D5D6E15076C6D5D
6E153F6C6D15FF6C01FF020313806D01C0131FDBF801B5FC6D90B7FC7F010717006D16FC
6D5E6D6C15E0021F158002074AC7FC020114E09126001FFEC8FC3A477BC444>I<923801
FFE0030F13FE037FEBFF8092B6FC14035C5C5C5C5C91B5EA003F4901FC130303F0130049
4914005D495BA24990C9FCA45BB3B8FCAAD8001F90C9FCB3B3B3A2316A7DE92F>I<EAFF
F8B3B2ED07FF037F13F04AB512FC020714FF021F15804A15C04A15E001F9B712F001FB16
F890B8FCDB003F13FC02FC130702F07F4A010013FE4A147FA24A143F91C813FFA24981A3
5BA35BB3B3A7386875E74F>104 D<EAFFFEAFC7FCB3A4EA7FFCB3B3B3AC0F6776E624>I<
EAFFF0B3B3A2EF7FFF4D5A4C5B4C5B4C5B4C5B4C5B4C5B4C90C7FC4C5A4B5B4B5B4B5B4B
5B4B5B4B5B4B90C8FC4B5A4A5B4A5B4A5B4A5B4A5B4A5B4A90C9FC4A5A13F101F37F01F7
8090B6FC828282A202FD7F02F87FECF07F4A6C7E02C07F4A7E4A6C7F4981496D7F497F49
81496D7F81707E83163F707E84707F82707F8482707F84177F717E84711380837113C019
E03B6874E74B>107 D<EAFFF8B3B3B3B3B3AE0D6875E724>I<ED07FFD8FFF0017F13F04A
B512FC020714FF021F15804A15C04A15E001F1B712F001F316F813F7DB003F13FCD9FFFC
130702F07F4A010013FE4A147FA24A143F91C813FFA24981A35BA35BB3B3A7384475C34F
>110 D<ED0FFF92B512F0020314FC021FECFF804A8191B712F04982010716FE49824983
49D9F80180499026C0003F7F90B5C7000F7F02FC140348496E7F48496E7F4A157F48496F
7E48496F7EA24890C96C1380A24982003F19C0A24982007F19E0A3498200FF19F0AB6D5E
007F19E0A46D5E003F19C06D5E6C19806E5DA26C6D4B13006E5D6C606C6D4B5A6E5C6C01
FE02075B6C6D4A5B6D01C0013F5B6DD9FC03B55A6D90B75A6D94C7FC6D5E6D5E010016F0
6E5D021F158002074AC8FC020014F0030F90C9FC44477CC44D>I<923801FFC0031F13F8
26FFF801B512FE020780021F81027F15E001F9B77E01FB8290B8FC84DB807F7F9126FC00
0F7F02F0130302C06D14804A6D7E49C86C13C0498119E049817113F0A283A27113F8A283
A319FC187FAB18FFA219F8A25FA219F05FA24D13E05F7F4D13C06D5D6D4B13806E91B5FC
6E4914006E01075B02F8131F02FF90B55A92B65A6001FB5E01F95ED9F87F5D6E4AC7FC02
0F5C020314F0020014C0DB0FFCC8FC92CAFCB3A93E6175C34F>I<16FCD8FFF0130F153F
EC01FF5C140F5C5C5C91B5FC13F101F3148001F7EBF80090B512E015804AC7FC5C5C5C5C
5C5CA291C8FCA25BA25BA45BB3B3264475C334>114 D<91381FFFC049B512FE010FECFF
C0013F15F04915FC90B8FC5A5A485E5A489038E0007F028013074848C8FC173E49150C94
C7FC485AA57FA27F6C7E8014E06C13FEECFFF06CECFF8016F06C15FE6C816C16C06C826D
81011F81010781010181D9003F801403DA001F14801500043F13C082160718E08282A512
2000305D007C17C0127F01C05C01F04A138001FE143F9026FFF001B51200B9FC5F5F6C5E
001F5E00075EC61680013F4AC7FC010314F8D9001F138033477CC43B>I<EB0FFFB3B812
F0AAD8000F90C8FCB3B3A581A217086D6D133817789238E001FCEDF01F6D90B5FCA217FE
7FA26D15F86E14E06E14006E13F0DA07FEC7FC2F577DD437>I<D8FFF8ED1FFFB3B3AC5F
A25FA294B5FC5E6D5C5E6C6C5C6D143FDAE003B6FC6C90B8FC17DF6C169FEEFE1F6C15F8
6C15E0000115806C02F8C8FC010F90C9FC384475C14F>I<D8FFF8933803FFC0007F4D13
80A27F003F4D13007F001F4D5AA27F6C4D5A806C4D5AA2806C4D5A806C605F806C4C5BA2
6D6C5E5F80013F4B90C7FCA26D6C5D171F806D5E173F816D5E177F6D6D5C17FFA26D6D5C
5E6D01F05CA25EDA7FF85CA2023F4990C8FC15FCA2021F495A15FE020F5C161FA2DA07FF
5BA26E495AA216BF6E5C16FFA26E5CA26F5BA36F90C9FC42427EC147>I<D8FFF0DB1FFF
EEFFF06C6C1CE04D6D5CA26C6C1CC04D7F647F001F9326FFBFE0168064A26C6C1C004CD9
1FF05CA26C6D624C6E141FA26C6DDAFE0F5E0407801C3FA26C6D4A6C6C5D040F177FA26C
6D624C486C6C14FFA26D6C6205F080043F6D5C013F63804C486C6D5A011F63A26E4A14E0
04FF027F5B010F98C7FC804D6D6C5A6D4960A2038190C7121F6D72485A1583A26D4ADA0F
FC5B03C3173F15C74C14076D621AFEDBE7F80203137F027F6115EF5E023FDC01FF5BA203
FF17FF6E496E5CA36E496F90C8FCA34C8164427EC169>I<D87FFE933803FFE0003F4D13
C06C6C4C13806C6D4B13006C7F6C6D4B5A6C6D4B5A6C6D4B5A4D5B6D6C4A5B6D6C5E6D6C
5C6D6D495B6D6D4990C7FC6D4B5A6D6D5C6D6D495A6F495A6E6C485B6E6C5A6E6C485B6E
5D6E018F90C8FC6EEBDFFE6EEBFFFC6E5CA26F5B6F5B6F5B6F5B6F90C9FCA24B7F4B7F4B
7F4B7F839238FFDFFC5C4AEB8FFE4AEB07FF4A486C7F021F6D7F03FC804A486C7F4A486D
7E4A486D7E49151F49498049496D7E4990C76C7F717F49486E7F49488249486E7F01FF70
7E4849153F48496F7E4A8248496F1380487113C04890C96C13E048487013F0484818F800
FF7113FC464280C147>I<D8FFF8933803FFC0007F4D13807F003F4D13007F121F6D4C5A
A26C6D4B5AA27E6E4B5A7E6E4B5A7E6E5E5F7E6E4A5B137F6E5E013F5D80011F4B90C7FC
A26E5D6D151F6F5C7F173F6D6D5C177F6D6D5CA217FF6D6D5CA2027F495B15F8143F4C5B
EC1FFC95C8FC5EDA0FFE5BA214076F485A805F80169F6E5CA25F157FEEDFC0153F16FF6F
5BA26F90C9FCA36F5AA25EA24B5AA34B5AA24B5AA34B5AA24B5AA24A90CAFCA25C5D1407
4A5A0018131F391FC03FF890B55AA25D5D6C5C92CBFC5C5CC613E042617EC147>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmsy9 9 1
/Ff 1 42 df<F301F8A288A2757E8888767EA2767E891C0F767E89767E1C01767E89777E
777E777E777E777E003FBE7E4889C0FC8B1FE06C8A6C8AD1EA07FE786C7E0C007FF77FF0
F71FFC79B4FC0D0313C07913F8796CB4FC0E1F13E00E0713FC0E0113FEA20E0713FC0E1F
13E0561300F8FFF80D0313E0551380E51FFEC7FCF73FF8F77FE09B3801FF805490C8FCF6
07FC003FBF5A481EE0C05A679CC9FC6C656C65D0EA0FF8535A66535A535A53CAFC525A65
1C03525A65525A1C1F65525AA252CBFC6464515AA264A2875577CF9A>41
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmr9 9 1
/Fg 1 62 df<003FBE12F0481DF8BF12FCA36C1DF86C1DF0D2FCB3A7003FBE12F0481DF8
BF12FCA36C1DF86C1DF0662778B877>61 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmti10 10.95 40
/Fh 40 123 df<001FB712F04816F85AA4B812F0A317E0003F16C02D0B70AB41>45
D<137C48B4FC000713804813C04813E05A14F05AA2B512E0A314C07E14806C130013FCEA
0FF8EA07E014136B9238>I<F07FF0943807FFFE051FEBFFC094B67E04039038C07FF893
3A07FE000FFCDC1FF8EB03FEDC3FE06D7EDCFFC06D13804B90C813C04B48157F4B48ED3F
E04B5A4B4816F0033F161F4B5A4B4816F85E5C4A90C9120F1BFC4A5A140F4B161F141F4A
5AA2147F4B17FE14FFA2495B1A3F5B4B17FC5BA24949167FA34990CAFCA21AFF5B4A18F8
137FA24A5EA213FF1BF04A5E5AA348494C13E0A448494C13C0A448494C1380A448494C13
00A44890CA485AA3624917FF127F6260A24960A200FF5F62A2495E62A262605B97C7FC60
61183F61A2494C5AA2614E5AA24D5B615F007F95C8FC4D5AA24D5A6C6C4B5A4D5A606C6C
4B5A4D5A6C6C4A90C9FC00074B5A6DEC0FFC6C6C4A5A6C6DEB7FE06C6D48485A90267FF8
0F90CAFC011FB512FC010714F0010114809026003FF8CBFC4F7D6AF85D>48
D<F01FF84DB57E050F14E0053F14F894397FE00FFE933A01FE0001FFDC03F86D13C0DC0F
E0EC3FE0DC1F806E7E4CC87F047E6F7E4C15074B48824B486F7E4B5A4B4817804B48814B
C914C0A2037E18E05DA2913901F801C003F06D6E13F014034A486C6C5CA24A5A17784A5A
A24AC7FCA3027E5F5F5CA24C5A49484D13E0A24C5AA249484D13C04C5AA24CC84813805E
041E4B13004A5B047C4B5A4C5E6E484815FF010149484A5B4B485E902700F83F804A5B91
B5C85A6E484B5BDA3FF85FDA0FC04B90C7FC91CA485A4F5AF1FFF04E5B4E5B4E5B4E48C8
FC4E5AF07FF8F0FFE04D5B050790C9FC4D5AEF1FF8EF7FF0933801FFC04C90CAFCEE0FFC
EE3FF8EE7FE0923801FF80DB07FECBFC4B5AED1FF0ED7FC04B5A4A48CCFC4A5A4A5ADA1F
E017704A4817F84A4816014ACAFC5C49481703494860495A494817074948601A0F494860
49CB121F137E494E5A0001197F494EC7FC1203D9F7C04C5A48B56C150303FCED0FFC48DA
FFC04A5AD9FC7F01FC147F261FE003903AFFF003FFF049C691B65A4848133F030F5E90C7
6C5E007E020193C8FC6F5D00FE033F5C486F14F004075C04011480486F6C48C9FC0070EE
0FF8547D70F85D>50 D<F00FFF95B512F0050714FC051F14FF94267FF8017F933B01FF80
003FE0DC07FCC76C7EDC0FF06E7EDC3FC06E7E4CC86C7EDB01FC6F7E4B4817804B48814B
4817C04B5A4B48EE7FE093CAFC157E4B18F014015D4A5A1607DA07E07FA24A486C7E1BFF
4A486C7EA4DA3F004C13E0A31CC04C485CA26E49481680040F5D6F48C81400020F013E5D
DBC1FC5E6EB4484B5A6E13E06E494B5ADA007EC9485A92CAFC505A4F5B4F5B4F90C7FC4F
5A4F5AF17FF8953801FFE006075B067F90C8FC043FB55A4C14F819E093B612804EC9FC70
7FDC000113C09438003FF0727E727E727E727E727FA2868486A286A386A860A2EA03F0EA
0FFC487E003F4D5B7F5A6248485EA24960604960495E01C095C8FC00FCCAFC4E5A61187F
4E5A61007C4C5B007E4C5B4D5B003E4C90C9FC003F4C5A6C4C5A6DED7FF06C6C4B5A6C6C
4A5B6C6C020790CAFC6C6CEC1FFCD800FEECFFF890267FE00F13E0011FB6CBFC6D14FC01
0114E09026003FFCCCFC547D6EF85D>I<0460176004F8EE03F004FE160F706CED7FE04B
01F8913807FFC0DDFF8090B5128095B71200634B17F863631B804B94C7FC1AFC1AF01AC0
4B93C8FC04CF14FC04C314C09326C01FF8C9FC4B48CBFCA44BCCFCA4157EA45DA44A5AA4
4A5AA44A5AEF3FF80403B5FC041F14C091260FC07F80923AC1FFC01FF8923AC3FC0007FC
DBCFE06D7E91261F9F806D7E03FEC87F4B8203F06F7E4A5A4B824B153F92C97F147E023C
83141891CAFC86A786A36162A419FFA401F84C5BEA03FE487E487F484D5B805A6248495D
6291C9FC4E5B5B494C5B485A01E095C8FC00FCCA5A61187F007C60007E4D5A615F4D5B61
6C4C5B4D90C9FC4D5A6C6C4B5A4D5A6C6C4B5A6C6C4A5B6D4A13806C6C020F90CAFC6C6C
EC3FFC6CB4ECFFF890267FE00713E06DB61280010F4ACBFC6D14F8010014C0DA1FFCCCFC
547D6DF85D>53 D<020F02FE163C91281F800FFF80157E047F6D15FCDA3F01B57E4BEF01
F8DA7E0F6E1403033FEF07F04A486E15E092B6150FD901F9F01FC091B7ED3F805BDCFC07
ED7F0049DAC00315FE9226FE000114014901F86D6C495A03E04C5A4949027C130F92C8EC
3FF04A6F13FF494804035B4A6FB5FC49486F5C4A0303EBBF804948923801FC3F4A92C748
C7FC4890CB5A496000031801494D5A484860491707000F6149170F48484D5AA2494D5A48
CBFC4F5A007E18FF97C8FC485F6148170300704D5ACBFC4E5AA2181F61183F4E5AA24E5A
A24D5BA25F96C9FC5F60170FA24D5AA24D5AA2177F6017FF605EA24C5BA25E605E95CAFC
5EA25F163FA24C5AA216FF5FA25D5F5DA34B5BA34B5BA25D5FA25DA294CBFC5DA25EA215
FFA25E5CA35E5CA35EA26E5B5E6E90CCFC153E577D65F85D>55 D<15F8EC03FEEC0FFF4A
13804A13C05C91B5FCA25BA31680A216006D5B5D6E5AEC1FF0EC0FC091C8FCB3B3A4137C
48B4FC00077F487F487F5A805AA2B55AA35C7E5C6C90C8FC13FCEA0FF8EA07E0224E6BCD
38>58 D<ED01F0ED07FCED1FFE4B7E4B138092B5FC5CA25CA31700A25E6E5B5E6E5BED3F
E0ED1F8092C8FCB3B3A414F8EB03FEEB0FFF497F5B5B8190B5FCA25AA35DA27EA27F011F
90C8FCEB0FCFEB000FA2141EA35CA35CA25CA2495AA2495AA2495A130F91C9FC131E133E
133C5B13F8485A485A5B485A120F48CAFC123E5A5A5A1240297172CD38>I<972603FFE0
150697B500FE150F07076E6C141F073F03E0143F4EB700F8147F060782063F9126001FFF
14FE4E01E00101EB80014DB5C8383FC003050701F892381FE007051F01E0923907F00FFC
4D0180923803F81FDDFFFEC93801FC3F4C01F8160004074994387E7FF84C01C0EF7FFF4C
4983047F90CB7EDCFFFC1AF04B49844B5B4B5B4B497213E04B5B4B90CCFC4B48854B481B
C04A5B5C4A49854A491B805E5C4A5B4A90CD1400A24A5A5B4B63495B5B5D49655D5B5D49
655B5DA290B5CE5B785A489BC7FC5C5AA2485BA3485BA3485BA4485BA45C5AA45CA3B5FC
A491CEEA01E0537EA3535AA36C525AA3535AA253C8FCA26C1C7EA26E62A26C515A1C0365
6C6D4F5A1C0F6C646E4F5A6C1B3F52C9FC6C6D19FE515A6C6D4E5A515A6D6C4E5A6D6C4E
5A6E4E5A6D4FCAFC6D6D17FE6D6DEE03FC6D6D4C5A6D01F8EE1FF06D6DEE7FC06EB44B48
5A021F01C0DA0FFECBFC6E01F8EC7FFC0203903AFF8007FFF06E91B612C06E6C93CCFC03
1F15FC030315E0DB007F91CDFC040313E0788465FF82>67 D<97380FFF800703B512FC07
1FECFF8096B712E0060716F8061FD9F00313FE067F90C7383FFF80942601FFF8020F7F05
0701E002037F4D0180020013F8DD3FFEC96C7EDDFFF8707E4C49707E4C01C0707F040F49
824C90CA6C7FDC3FFC854C48717F4B4848834B49854B49187F4B49854B90CCFC4B48737E
157F4B48737E5E4A491B804A5B5C4A497313C04A5BA24A90CDFC4A1DE04A5A5D5B495BA2
49491CF0A2495BA2495B5BA2495BA290B5CEFCA3484963A2481FE05C5A665C5AA220C048
4963A4484998B51280A4485214005CA2535BA34A505BB5FC6765A2535BA26791CE5A6765
679AB5FC9CC7FCA2525B525B7E525B66646E63525B6C63665290C8FC525A6C6D62636C50
5B515B6E626C505B515B6C6D4E90C9FC515A6C6D4E5A505B6C6D4D5B017F4E13C06D6C4D
5B6E4D90CAFC6D6DEE7FFE6DF0FFF86D6D03035B6D01F04B13C06D6D031F5B6D6DDB7FFE
CBFCDA3FFF913801FFF86E01C0010F13E0020701FC90B512806E90B648CCFCDA007F15F0
031F1580030302FCCDFCDB001F90CEFC748465FF8B>79 D<DF3FFC15600603B500C014F0
060F02F81301067F6E13034DB7FC4DD9E003EB8007DD0FFEC7397FE00FE0DD1FF891380F
F01FDD7FE0913807F83FDDFF80913801FC7F4C90C914C0DC07FEEE7EFF4C48167F4C4882
4C487013805F4C5A4C48824B1A004B90CAFC4C8315074B4860A24B5AA24B48601C03157F
A24C6015FFA21C074A62A4655CA37060765A99C8FC82A26E7F828283836E14F817FF18F0
6F14FEF0FFE06F15FC6FEDFFC01AF06F16FC6F16FF6F836F17E06F83043F82040F821603
040082050F811701DD001F811803DE003F8019071900747F86868686A2747FA48664131C
133E137EA401FE625BA300014F5BA299C8FCA200036163A2505A1207505A7F505A000F62
1A7F6D4E5A4F5B486D95C9FC616E4C5A6E4C5A486D4C5A6E4C5AD9F3FC4C5AD9E3FE4B48
5A277FE1FF804A5B01C001E0DA0FFECAFC9026803FFCEC7FFC903C001FFFE003FFF000FE
6D90B65A480103168002004BCBFC48023F14F848020714C000609126003FFCCCFC648472
FF66>83 D<0103BF1280491EC05BA25BA293C7000391C7000714804901E06E01FCEC003F
92C848170F02FC4D8149488702E0874A75130049484B5B91C9FCA2485A4E5B4965485AA2
494C5B1207A24965000F4D5B5BA2121F494C90C9120167123F90CAFC4E5A5A127E545A48
4C5BA30078775ACA484993C8FCA44D5BA44D5BA44D5BA44D5BA44D90CDFCA44D5AA44C5B
A44C5BA44C5BA44C5BA44C5BA44C5BA44C90CEFCA44C5AA44B5BA44B5BA44B5BA35DA25D
5D0207B67E000FBA7E4885A3626CDAFE0792CCFC727B60FA82>I[<0503B512F04D14F85F
A44D14F01AE006E0C7FCA24D5AA44D5AA44DC8FCA44C5AA44C5AA44C5AA44C5AA44C5AA4
4C5AA44C5AA44CC9FCA44B5AA44B5AA44B5AA44B5AA44B5AA44B5AA44B5AA44BCAFCA44A
5AA44A5AA44A5AA44A5AA44A5AA44A5AA44A5AA44ACBFCA4495AA4495AA4495AA4495AA4
495AA4495AA4495AA449CCFCA4485AA4485AA4485AA4485AA4485AA4485AA390B57E4880
A4B65AA26C91CBFC>69 181 116 263 56 91 D[<0503B512F04D14F85FA41AF08394C7
120FA2F11FE0A4F13FC0A4F17F80A4F1FF00A44E5AA44E5AA44E5AA44E5AA44E5AA44E5A
A44E5AA44EC7FCA44D5AA44D5AA44D5AA44D5AA44D5AA44D5AA44D5AA44DC8FCA44C5AA4
4C5AA44C5AA44C5AA44C5AA44C5AA44C5AA44CC9FCA44B5AA44B5AA44B5AA44B5AA44B5A
A44B5AA44B5AA44BCAFCA44A5AA44A5AA44A5AA44A5AA44A5AA3003FB5FC485CA4B65AA2
6C91CBFC>69 181 131 263 56 93 D<EE07F8EE7FFF4BB57E030714E0923B1FFC07F007
80923B3FE001F80FE0923BFFC000FC3FF04A90C7127E4A4891383E7FF8DA0FFC141F4A48
4B5A023F814A5A4A5A49496E5B5D5B4990C8FC49604A81131F495A4E5B495A13FF5C484D
90C7FCA2485BA2484D5A5CA25A4A4B5A5AA34890C9485AA448484C5AA4494B5B12FFA34D
5B5B1B701BF84DEB8001A4494B90380003F0A2127F5F4EEB07E0173F003F167FF20FC06D
15FF001F5D4C49EB1F80000FED07EF040F16006C6CDA1FCF5CDC3F87143E6C6CDA7F0714
7E00019226FC03FE5B6C6CEB03F890287F800FF001495A903D3FE03FC000FF07F06DB548
6DB45A010749C7001F5B010101F86E90C7FC9026003FC0EC01FC4D526CCF5D>97
D<ED1FC049B57E137F90B6FC485DA37ED9003F5B140FA393C9FCA44A5AA44A5AA44A5AA4
4A5AA4495BA4495BA4495BA44990CAFCA2EE07F8EE3FFF494848B512C04B8092390FF80F
F892391FC003FC903B3FFC7F0001FE03FE80DAFDF86D1380ECFFF04949EC7FC05D4B15E0
92C8123F90B516F05C4A16F85C5A4A16FC5CA2485BA4485BA2187FA24890C9FCA4484816
FFA448484B13F8A448484B13F0A319E0495D12FF19C05FA2491780A24D1300A260173F60
177F604D5A127F4C5B605E003F5F4C90C7FC4C5A001F5E6D4A5A000F4B5A4C5A6C6C4A5A
4B5B6C6C4990C8FC6C6CEB07FC6C6CEB1FF890397FC0FFE0011FB512806D49C9FC010313
F89038007FC03E806BFD54>I<EF7FE0933807FFFE043F6D7E93B67E03039038C01FF092
3A0FFE0003F8DB3FF8EB00FCDB7FE0147E4B4880020390C8FC4A48ED1F804A5A4A4815FF
4A48020313C0027F5D4A485C49495C495B494C13804990C8FC495A1A00495A017F705A4A
ED0FF801FF705A4AED00804895C7FCA2485BA2485BA25AA2485BA34890CCFCA4485AA45B
A212FFA45BA4127FA219021907F10F80F11FC0003FF03F80F17F00616C6C4C5A4E5A000F
4D5A4E5A6C6C4C5A4E5A6C6C04FFC7FC6CEE03FE6C6DEC07F86D6CEC3FF06D6CECFFC06D
6C010790C8FCD907FEEB7FFC6DB612F0010015C0023F01FCC9FC0203138042526CCF54>
I<F33F800703B512C096B6FC604E1580A38495C76C13001A1FA363A4505AA4505AA4505A
A44F5BA44F5BA44F5BA44F90C7FCA44F5AA2EE07F8EE7FFF4BB56C485A030714E092391F
FC07F092393FE001F8923BFFC000FC7FF84A90C7127E4A48143EDA0FFC141F4A484B5A02
3F814A5A4A5A49496E5B5D5B4990C8FC49604A81131F495A4E5B495A13FF5C484D90C8FC
A2485BA2484D5A5CA25A4A4B5A5AA34890C9485AA448484C5AA4494B5B12FFA34D5B5B1B
701BF84DEB8001A4494B49485AA2127F5F4E495A173F003F167F505A6D15FF001F5D4C49
495A000FED07EF040F93C7FC6C6CDA1FCF5CDC3F87143E6C6CDA7F07147E00019226FC03
FE5B6C6CEB03F890287F800FF001495A903D3FE03FC000FF07F06DB5486DB45A010749C7
001F5B010101F86E90C8FC9026003FC0EC01FC52806CFD5D>I<933801FFC0041F13F893
B512FE03036E7E030F9038807FC0923A3FFC000FE0DBFFE06D7E4A01806D7E020790C76C
7E4A481400DA1FF881EC7FF04A48157E4949157F5B495B4990C9FC5C011F17FE495A137F
4A4B5A13FF484915036148494B5A180F484D5A4AED7FC0484C485ADD07FEC7FC4849EC3F
FC933807FFF00303B55A4890B7C8FC17F817800480C9FC4848CCFCA45BA212FFA45BA812
7FA21904190E191F003FF03F80F17F0019FE001F17014E5A6D4C5A000F4D5A4E5A00074D
5A6C6C4C5ADD01FEC7FC6C6CED07FC6C6DEC0FF0017FED7FE06D6C903801FF80D91FF0D9
0FFEC8FCD90FFCEBFFF80103B612E06D1580D9003F01F8C9FC020790CAFC41526BCF54>
I<F21FE0F27FFC4FB5FC0707148096390FF03FC096391FE007E096397FC003F097388007
F807FF131F4EEB007F4EECFFFCA24E485AA2060F4913F8A2F01FFC1CF07413E0063F15C0
9639F8007F80F33E00067F91C7FCA36118FFA44D5BA54D5BA54D5BA64D90C9FCA40307B8
7E4B835DA36F5F92C7D83FFCC9FCA54D5AA54D5AA55E60A54C5BA54C5BA54C90CAFCA54C
5AA54C5AA64C5AA54C5AA54B5BA45F5DA45F5DA394CBFC5DA35EA2151FA25EA2153F5EA3
5E157FA2D801F05CEA07F8D81FFC13FF486C5CA2486C5C5CD8FFFE91CCFCA25D49485A13
F849485AD87FE05BEB800F6C48485A01805B391FE07F80260FFFFECDFC00035BC613F0EB
3FC056A584FF38>I<EF01FE94381FFFC0057F7F4CB512F80407903901FC01E0933B0FF8
007E03F8DC3FF090383F0FFCDC7FC0EB1F8F4B484890380F9FFE4B90C7EA07DF4B48EDFF
FC4B4880151F4B5A4B486E13F84B5AA24A5B4A7013F04A5B93C9FC5C4A4C13E05D143F5D
027F4C13C0A24A5AA2494D13805D5BA24B4B13005BA349494B5AA449494B5AA492C9485A
A35B4F5A5CA34E5B131FA34E5BA260130F4E5B606013074E90C7FC6D6C92B5FC5F6D5D6F
495B6DED0FDF6E6CEB1F9F023FEC7F1F913B1FE001FC3FFC91390FF80FF80203B512E06E
14C06E6C9038007FF8ED0FF892C8FCA24E5AA44D5BA44D5BA44D5BA2D803E04B90C8FCEA
07F8D81FFC5E486C151F007F4C5A6000FF167F4D5A60494A5B4C5B494A90C9FC494A5A6C
48EC3FF801804A5AD83FE0903801FFC06CB4011F90CAFC000790B512FC000115F06C6C14
80010301F8CBFC4F7576CF54>I<EE3F800203B57E91B6FC5B495DA37F90C76C90CBFC15
1FA35EA44B5AA44B5AA44B5AA44A5BA44A5BA44A5BA44A90CCFCA44A5AA24DB47E051F13
F04A4890B512FC4C14FF932607FE017F933A1FF0007FC091277FF83F806D7E047EC77F4C
6E7EEDFBF84A4848815EDBFFC0140F4C814991C8FC5DA25D495BA24B151F5D5B5DA24B5E
49173F92C9FCA349484C5AA449484C5AA34E5B495AA34E5B495AA24E5BA2485B4E90C8FC
A348494B5AA24E48EB01C0F303E0484918074E5AA34890C94848EB0FC0A34D49EB1F8048
5A1C004F5B4D153E4848197E4F137C1BFC6348486F140163505A71140748484E5A067F49
5A50C7FC4993383FC0FE72B45A6C48040713F06C487013C0001ECB6CC8FC538072FD5D>
I<EE0F80EE3FC0EE7FE0EEFFF05D4B13F8A34B13F0A26F13E017C06F13806F1300167C93
C7FCB3A7EC0FE0EC7FF8903801FFFE497F903907F03F80D91FC07F49C66C7E133E498013
FC4848805B0003143F5B12075B120F49137F121FA248C7485AA3007E495BA24A5B5AA24A
5B1278C7FC4A90C7FCA34A5AA24A5AA34A5AA34A5AA2495BA3495BA3495BA217704990C7
12F81601495AA34948EB03F0A34948EB07E0A217C04A130F01FF1580161F4A14005E163E
017F147E167C5E013F13014B5A011F495A4B5A90390FF03F806DB5C7FC010113FC6D13F0
EC1FC02D7A71F738>I<EE3F800203B57E91B6FC5B495DA37F90C76C90CAFC151FA35EA4
4B5AA44B5AA44B5AA44A5BA44A5BA44A5BA44A90CBFCA44A5AA2F103F8F11FFE4A489238
7FFF804EB512C0953903FC07E095390FE003F04A4891381F800F95383E003F06FCEB7FF8
4D4813FF4A48903803E0014D485AEF0F8018004949011E4913F0173E4D6D13E05F494948
486D13C04C486D13004C48147C4C4891C7FC49018090CAFC161E163E5E49495A4B5AED07
E04B5A494848CBFC157E6E5A5D4913E015FF16E016FCD97FFBEBFF80DAF81F13E003037F
030013FC4948EB3FFE707E707F8248496D7F707FA348496D7FA2F20380F207C04849170F
A44890C74849EB1F80A31B0048484C5BA21A3E1A7E485A1A7C4E13FC6248481701705D19
03057F5C484870485A053F130F051F495A49DCE07FC7FC943807FFFE6C486F13F86C4803
005B001ECAEA3F804D8072FD54>107 D<ED01FC91380FFFFE0107B5FC5B16FC5B7F7FD9
000313F81400A316F0A44A13E0A44A13C0A44A1380A44A1300A44A5AA44A5AA44A5AA44A
5AA4495BA4495BA4495BA44990C7FCA4495AA4495AA4495AA4495AA4485BA4485BA4485B
A44890C8FCA4485AA2ED0380ED07C04848130FA44848EB1F80A3160048485BA3157EA249
137C15FC127F4A5AA2003F495AA2001F495A6D485A120F3907F83F806CB5C7FC6C13FC6C
6C5AEB0FE0278070FD2E>I<D901FE922601FFC0ED03FF902607FF80021F01F8033F13E0
4901E0027F01FE4AB512F8013F6D49B66C4914FE90267F07F8010701006D90390FFC03FF
90267E03FCD90FF0D93FE090263FE0007F496C6CD93FC06E49C76C7ED801F86D49C76C6C
01FC8101F003FC020F49486E7E0003DB81F89238FC07F001E0DA83F04C48810007DBC7E0
03FE5BDCCFC002074948141FD80FC0DADF804CC87F04FFC8EBFF7E01804A5F121F4C5F4A
495FEA3F004C4B49153F4C5F007E5B4C5FA24C94C95B48494D177F93C95BA21278C74848
4C484C5AA44A484C484B5BA3555B4A484C5AA3555B4A484B5BA25590C8FCA249494B5B55
5AA349494B494B5AA25548EB0380FA07C049494B90C9150F555AA34990C948484B49EB1F
80A35449EB3F0049484C5A223E56137E54157C49484C4819FC9DC75A21016A49484C486F
14036A575A78140F49484B494E5A784AC7FC217E4A4D93387F81FC79B45A6D486F49040F
13E06D4870CA6C1380011ECA003CDD00FEC8FC8A5271CF95>I<02FE4BB47E902607FF80
021F13F04901E091B512FC496D4914FF90263F07FC902607FE017FD97E03913A1FF0007F
C0496C6CD93F806D7ED801F86D017EC77F01F04B6E7E0003ED83F801E0DA87F0810007ED
C7E0DCCFC0140FD80FC0DADF808104FFC8FC01805C121F5E4A5BEA3F004C151F5E007E5B
5EA24C5E4849173F93C9FCA21278C748484C5AA44A484C5AA34F5B4A5AA34F5B4A5AA24F
5BA2495B4F90C8FCA349494B5AA24F48EB01C0F403E0494918074F5AA34990C94848EB0F
C0A34E49EB1F80495A1D00505B4E153E4948197E50137C1CFC6449486F140164515A7214
0749484E5A077F495A51C7FC4A93383FC0FE73B45A6D48040713F06D487013C0011ECB6C
C8FC5B5271CF66>I<EF7FE0933807FFFE043F6D7E93B612E003039038C03FF0923A0FFE
000FF8DB3FF8EB03FEDB7FE06D7E4A48486D13804A90C813C04A48157F4A48ED3FE04A48
16F04A5A4A48ED1FF814FF494916FC495B5B4990C913FE4948160FA2494817FF137F5C01
FF5F5C5AA2485BA2485BA24860A2485BA21AFE4890CA127FA44848EFFFFCA31AF8495EA2
00FF19F0601AE0A2494C13C0A21A8060007F190060614E5AA24E5A003F6018FF4D5B001F
606D4B5B000F4C90C7FC4D5A6C6C4B5A4D5A6C6C4B5A6CEEFFC06C6D495B6D6C4990C8FC
6D6CEB0FFC6D6CEB3FF0903A0FFE01FFE00103B6128001004AC9FC023F13F0020790CAFC
48526CCF5D>I<DB1FE015FFDB7FF8020713E0DBFFFE023F13F84A6D4A7F913D07F07FC0
01FF01FFDBE03F903A03F8007F8091290FC01FE00FE06D7EDA1F806D48488003004AC76C
7E4AECF87E023E4B6E7E027EECFDF8DDFFF0814A4B1407884A5D01014C8195C8FC5E4948
4A17805FA24948495AA44948495AA2636D5A90C7485BA44B495DA44B494B1300A44B90C9
485AA3644B4816FFA264624B5A64A2505B4B5A6462644B485D99C7FC505AA24A4D5A631A
7F634A6D4B5A4F5B63704A90C8FC4A4C5A4F5A04BE4A5A04BF4A5A4A011F4A5A706CEBFF
80DDC00390C9FC933907F81FFC91261FFE01B512F07014C0053F90CAFCEF0FF84A4890CC
FCA44A5AA44A5AA4495BA4495BA4495BA45BA2017F13E0007FB612F8B77EA4267FFE3F5B
59737DCF5D>I<DC07F81408DC7FFF143C4BB56C137C030702E013FC923A1FFC07F00192
3A3FE001F803923BFFC000FC07F84A90C7EA7E0F4A48EC3E1FDA0FFCEC1F3F4A4816F002
3FED0FFF4A5A4A5A49496E13E05D5B4990C8FC4918C04A81131F495A4E1380495A13FF5C
484D1300A2485BA2484D5A5CA25A4A4B5A5AA34890C9485AA448484C5AA4494B5B12FFA3
4D5B5BA34D5BA4494B90C7FCA2127F5F60173F003F167FA26D4B5A001F5D5E000F5D4C5B
6C6C5C5E6C6CEC7F7F00019238FCFFF06C6CEB03F890397F800FF090393FE03FC06DB500
815B0107EBFE01010113F89038003FC091C7485BA44C5BA44C90C8FCA44C5AA44C5AA44C
5AA316FFA25D030F13FE027FB77E91B87EA46E01C35C46736CCF54>I<D901FEED1FFC90
2607FF8091B57E4901E0010314F0496D010F8090267F07FC90391FF007FED97E0391397F
8000FF496C6C01FEC77ED801F89026FF01F8903801FF8001F04A485B0003DB87E04913C0
01E0DA8FC05B0007DBDF805B04FFC7FCEA0FC04C4A138001805C001F4B6E1300A24A496E
5AD83F00EF07F84CEC03E096C8FC007E495BA25EA2484990CBFCA31278C7485AA44A5AA4
4A5AA44A5AA4495BA4495BA4495BA44990CCFCA4495AA4495AA4495AA4495AA35CA26D5A
6D5A011ECDFC4A5271CF4D>I<EE07FE93387FFFE00303B512F8030F8092391FF801FF92
3A7FC0003F804BC7EA0FC04A48EC07E0DA03F8EC03F014074A48EC01F84A5A5D023FED07
FC027F151F4B143F02FF157FA292C8EAFFF85BA219F049167F6F15E0F01F80F00E006F91
C7FC818115FCEDFFC016FE6DECFFC017F86D15FE836E8118E06E81800207816E81140003
3F801503DB001F7F1601707E8383711380831900EA01F0D807FC81487E121F487E605AA2
6048481507605B494B5A13E06C484B5A007EC9FC4D5A6C4C5A4DC7FC6C6C4A5A6D4A5A6C
6C4A5A6C6CEC1FF0D803FCEC7FC03B00FFC007FF806DB548C8FC011F14F8010314C09026
007FF8C9FC3E5272CF4A>I<16F0ED03F84B7E4B7EA2151FA34B5AA44B5AA44B5AA44A5B
A44A5BA44A5BA44A90C8FCA4007FB81280B912C0A318806C1700C7D83FFCC8FCA24A5AA4
4A5AA4495BA4495BA4495BA44990C9FCA4495AA4495AA4495AA4495AA4485BA2171C173E
4849147EA35F485B4C5AA24C5A4890C7FC4C5AA24C5A5F161F494AC7FC0007153E167E5E
00034A5A4B5A00014A5A6D495A6CEC3F8090267F81FFC8FC90383FFFFC010F13F06D5B01
0090C9FC32746FF13C>I<EC0FE0EC7FF8902601FFFE17F0496DEE03F8902707F03F804B
7ED91F806D4B7E49486C7E013E181F498013FC48486E4B5A5B0003143F5B00074F5A5B12
0F49137F001F4F5AA248C7485AA24F5B007E495BA24A5B484E5BA24A5B1278C74D5B4A90
C8FCA34A484B90C7FCA34A5A4F5AA24A5AA24F5A4A5AA349494B5AA449494B5AA21C1C1C
3E4E49137E495BA34E4913FCA44E90388001F892C8FCA24EEC03F06D7F604E90380007E0
7F4E15C006FB140F6D6DD901F91580DD03F1141F6E6CD907E09038803F006E6CEB1FC06E
6C90267F007F137E91270FFE03FE90383FC1FC0203B500F86DB45A6E4A01075B6E6C01C0
6D13C0DB07FEC86CC7FC575271CF62>I<DA0FE01678DA7FF8ED01FE902601FFFE4B7E49
6D4B1380902707F03F805CD91F806D16C049486C6C5C133E498013FC4848804983000302
3F81498312074983120F49017F81121FA248C74848ED7F80A3007E495BA24A5B481A00A2
4A5B1278C7187E4A90C9FCA34A485EA34A5A4F5AA24A5AA24F5A4A5AA24F5A495BA26219
0F495B62191F97C7FC615D49173E197E197C19FC61A24E5AA26D4C5AA24E5A180F6D5F4E
C8FC6F143E6D167E606E6C495A6E6C495A6E6C495A6E6CEB1FC06EB401FFC9FC0201EBFF
FE6E6C13F8031F13E0030190CAFC4A5271CF54>I<DA0FE0F203C0DA7FF8F20FF0902601
FFFEDC0780EC1FF8496DDC1FC0EC3FFC902707F03F804B6C147FD91F806D4B6C15FE4948
6C6C19FF013E18FF498013FC48486E4A5B491C7F0003023F1A3F491C1F00074E5B491C0F
120F49017F1A07001F4E5BA248C74848F103FCA24F90C8FC007E495BA24A5B484E4816F8
A24A5B1278C74D4816F04A90C8FCA34A484B48ED07E0A34A5A4F48ED0FC0A24A5AA24E49
ED1F804A5AA349494A49ED3F00A31E7E49494A5BA21E7C1EFCA24B93C95A494C1601A266
1D03661D07A26D515A60664E161F53C7FC6D5E6F197E6D93B56C147C06F916FC6E6CD901
F84B5A4D486D495A6E6C49486C6C495A6E6C49486C6C495ADA0FFE49486C6CEB3F80912A
03FF807F000FFF01FFC8FC6ED9FFFE0103EBFFFC6E6C01F801005C031F49023F13E00301
0180020390C9FC6F5271CF79>I<DB07F8EDFF80DB3FFF020713F092B500C04913FC0203
6E013F7F912707F80FF890397F00FF8091271FC003FC01FCEB1FC04AC66C6C485A027E6E
4848EB7FE04A6D494813FF494892268FC00113F0494891397FDF800349485F4948EDFF00
A249484B4913E049C8FC4E6D13C0137E017C4C6D138001FC953801FE00F200F8484803FF
92C7FC60485AA348484A5BA36C5AC9485BA44C5BA44C90CAFCA44C5AA44C5AA44C5AA21B
381B7C4C4815FCA3505A4B5BA2505AEA03E0D80FF8495F486C1807003F4F5A486C495B50
5A00FF5C50C7FC4B6D147E4960ED3F3F49017E4B5A496E6C495AD87FC0D9FC0FEC0FE049
48486C6C495A003FD903F06D017FC8FC3D1FF01FE001FE03FE6CB5D88000B512F8000391
C7003F5BC601FC6E13C0D91FF0DA03FEC9FC545276CF54>I<EC0FE0EC7FF8902601FFFE
EE01E0496DEE07F0902707F03F80ED0FF8D91FC06DED1FFC49C66C7E013E183F498013FC
48486EED7FF85B0003143F5B0007F1FFF05B120F49137F001F4E13E0A248C7485AA24F13
C0007E495BA24A5B484E1380A24A5B1278C74D13004A90C8FCA34A484B5AA34A5A4F5AA2
4A5AA24F5A4A5AA349494B5AA449494A5BA44E5B495BA34E5BA492C84890C7FCA46D4C5A
6F143FA2187F6D4C5A5F6D6D5B5F6E6C495B023F5C6E6CEB7F7F91390FFC03FC6EB54848
5A020114E06E6C138092380FFC0092C7485BA34D5BA2615FA2013E94C8FC01FF5D4801C0
5D484C5A487F484C5AA24D5A48495D17FF4A495B6091C74890C9FC01FC4A5A01F04A5AD8
0FC05D4C5A00074B5A6DECFFC000034A90CAFC6D495AD801FCEB0FF86CB4EB7FF0013FB5
12C06D91CBFC010713F8010013804E7571CF58>I<047E150E922603FF80141F030F01E0
143F4B7F037F6D147E92B56C14FE4A6E14FC4AEE01F84A6E13034A038013F09538C007E0
4A160F91263FFC019038F01FC0923BF0003FFC7F80DA7FC0010FB5120092C7120102FE6E
6C5AF003FC4A6F5A49484B5A18074E5A6D484B5A91C9485A4EC7FC18FE4D5A4D5A4D5A4D
5A4D5A4D5A4DC8FC17FE4C5A4C5A4C5A4C5A4C5A4C5A4CC9FC16FE4B5A4B5A4B5A4B5A4B
5A4B5A4BCAFC15FE4A5A4A5A4A48ED01E04A4815034A4815074A5A4AC9FC02FEEE0FC049
5A4A161F494817800107173F4948EE7F0049485ED93FBE4B5ADAFFE014034901F84A5A90
B6141F4801E301C0EB7FF8903CFE007FFC03FFF048486DB65A485A48486D5D496D5D4848
6D92C7FC495E48C76C5C486E14F0007E6E5C486F1380DC1FFEC8FC0078ED07F0485275CF
4A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmmi10 10.95 14
/Fi 14 122 df<EA01F0EA07FCEA1FFF481380A24813C014E0B5FCA214F0A37E14F87EA2
6C1378EA07FCEA01F0C7FCA614F0A5EB01E0A4EB03C0A2EB0780A2EB0F00A2131EA25B13
7C13785B1201485A485A5B48C7FC5A121E12081536709233>59 D[<1A701AF8F101FC19
03A219071AF8A2F10FF0A3F11FE0A3F13FC0A2197F1A80A2F1FF00A34E5AA34E5AA34E5A
A2180F61A24E5AA34E5AA34E5AA34EC7FCA25F60A24D5AA34D5AA34D5AA34D5AA2173F60
A24D5AA34DC8FCA34C5AA216035FA24C5AA34C5AA34C5AA34C5AA2167F5FA24CC9FCA34B
5AA34B5AA34B5AA2150F5EA24B5AA34B5AA34B5AA34BCAFCA25C5DA24A5AA34A5AA34A5A
A2141F5DA24A5AA34A5AA34ACBFCA3495AA213035CA2495AA3495AA3495AA3495AA2137F
5CA249CCFCA3485AA3485AA3485AA2120F5BA2485AA3485AA3485AA212FF90CDFCA25A12
7E123C>70 181 118 263 91 61 D<1238127FEAFFC013F013FC13FF6C13C0001F13F000
0713FC000113FF6C6C13C0011F13F0010713FC0101EBFF806D6C13E0021F13F8020713FE
02016D7E6E6C13E0031F13F8030313FE03006D7E043F13E0040F13F8040313FE0400EBFF
C0053F13F0050F13FC050313FF050014C0063F13F0060F13FC060113FF726C13C0071F13
F0070713FC070113FF736C13E0081F13F8080713FE08016D7E746C13E0091F13F8090713
FE09006D7E0A3F13E00A0F13F80A0313FE0A00EBFF800B3F13F00B0F13F80B0313FC1D00
A21D030B0F13F80B3F13F09AB512800A03EBFE000A0F13F80A3F13E099B51280090749C7
FC091F13F8097F13E050B51280080749C8FC081F13F8087F13E04FB5C9FC070713FC071F
13F0077F13C04EB5CAFC060F13FC063F13F095B512C0050391CBFC050F13FC053F13F094
B512C0040349CCFC040F13F8043F13E093B51280030349CDFC031F13F8037F13E04AB512
80020749CEFC021F13F8027F13E049B51280010701FCCFFC011F13F0017F13C048B5D0FC
000713FC001F13F0007F13C0B5D1FC13FC13F013C06CD2FC123C6E6A71E18D>I<F3FFFC
083FEBFFE00703B612FE071F6F7E96B812F00603DA001F7F060F01E0010113FE067F90C8
383FFF80DEFFFC030F7F050301F003037F050F01C06F13F8053F90CA7FDD7FFC717E4C48
48EF1FFF4C01E0854C49717F041F49834C48CB6C7F4C48864C48727F4B4984030749864B
49197F4B49864B90CDFC4B757E4B5A4C1C804A49864A5B4A1EC04A5B4A5B7913E04A5B4A
90CEFC91B5FC4B1DF05B495BA2495B5B5D491FF85D5B5D5BA290B55A674891CFFC21F05A
5CA248665C5AA221E0484964A4484999B512C0A4485314805CA2541400A3545BB55A6866
A2545BA268666866689BB55AA26C5291C7FCA2535B6765535B6C666567535B6C6D505B9A
B5C8FCA26C515B6E4F5B525B6C656E4F5B6C515B525B6C6D4F90C9FC6C515A6E4E5B017F
4F13F06D6C4E5B6F051F5B6D6D4D5B6D4F48CAFC6D6D4D5A6D6D040313F06D6D040F5B6D
01FE4C13806E6CDC7FFECBFC021F01C04A485A6E01F0020F13F0020301FC027F13C06E90
28FFC007FFFECCFC6E6C90B612F8030F16C003034BCDFCDB003F14E0040101F8CEFC7D84
77FF8B>79 D<F3FFFC083FEBFFE00703B612FE071F6F7E96B812F00603DA001F7F060F01
E0010113FE067F90C8383FFF80DEFFFC030F7F050301F003037F050F01C06F13F8053F90
CA7FDD7FFC717E4C4848717E4C01E0717F4C49717F041F49834C48CB6C7F4C48864C4872
7F4B4984030749864B49197F4B49864B90CDFC4B48747E15FF4C7413804A5B4A5B4A491C
C04A884A5B4C1CE05C4A90CEFC4A5A21F0495B49895D5B495BA249491DF8A2495B67495B
A290B5CFFCA25A4A1EF05AA24A645AA2485BA221E0484964A448495213C0A4484999B512
80A3541400A25C545BB5FC6866A2686691CF5C6668666868666C9CC7FC9BB5FC535B6765
6E646C525B6567535B6C525BDE3F8094C8FC6E912601FFF05D6C4C6D4B5A050F01FE4A5B
6E91261FC03F5E6C93273E000F80495B4D01074A5B6C6D4A6D6C495B4C4801014A5B6C6D
49486E4990C9FC6C4C4C5A6E49486D6C495A017F4F13F06D6C49C8495B6E4E5B6D0180DC
F81F5B6D4F48CAFC6D01C0EFFFFC6DD9E01E03F913F06DD9F80F92B55A6D01FC1880DA7F
FE4DCBFC91261FFF8F4A5B6ED9EF80010713F0020301FF023F13C06E9127C007FFFEC912
606E6C90B64816F0150F03034B7EDB003F02E04C5A0401EBF80093C91603674F6C15071E
0F671E1F75143F54C8FC755CF503FE75130775EB3FFC9838FE01FF98B65AA26666A26673
5EA29BC9FC745C65745C657414C0745C080349CAFC7413F89738003FC07DA377FF90>81
D<4BBA12FC4BF1FFF01EFF1FE01FF86F1BFE92C7001F49C8003F6D7E050349030114E04F
DB003F7F0C077F4F707F0C0013FF8B7913804D497113C021E08B21F04D5B7913F8A221FC
4D5BA44D90CBFCA3674D5AA44D484E13F8A35513F04C5B21E05513C0A24C4995B5128021
00545B664C4961545B5413E0545B4C494D5B5490C7FCF6FFFC0B035B4C494C13E00B1F13
80E3FFFEC8FC0A0313F84C90C9003F13E00907B5C9FC95B812F81DC04C05F8CAFC1CFF4D
C8001F13C009017F4C489238007FF8767EF40FFE894B49707F767F767FA24B4984767FA3
4B4984A44B5B8AA34B494C5BA44B90CA5AA44B485FA44B485FA44A494D5BA3210E4A491C
1FA44A491C3EA2217CA24A7316F85CF801F049B500FC711503003FB800C06F6D14E04871
F107C0B970ED0F80766DEB1F000B7F147E6CD9FE1F4A93391FFF01FCD06CEBFFF80B0314
E0E3007F5BE407FEC7FC808078FB8A>I<EE07C0EE1FE0EE3FF8167FEEFFFC5DA25DA217
F8A217F08117C09238007F80EE3E0093C7FCB3A7EC0FE0EC7FFC91B5FC010380903907F0
3FC090390F801FE0D91F007F133E496D7E5B484880A24848131F5B12075B120F90C7123F
5AA2003E4A5AA3484A5AA348495BA24A5B1270C7FC4A5BA34A90C7FCA24A5AA34A5AA34A
5AA24A5AA3495BA3495BA24949130C171E173E4990C7FCA34948147CA2495A17F8A24948
EB01F0A217E016034A14C01607EE0F80A2013FEC1F00163E011F147E167C010F495A6E48
5A0107EB0FE06DB51280010091C7FCEC3FFCEC0FF02F7B7BF83F>105
D<EE3F800203B57E91B6FC5B495DA37F90C76C90CBFC151FA35EA44B5AA44B5AA44B5AA4
4A5BA44A5BA44A5BA44A90CCFCA44A5AA2F27F80963803FFE04A48030F13F8073F7F9638
FF807E953901FC001F4A48DA03F0EBFF8095380FC0034E485A95263E000F13C04A484A5B
604D485B4D5A494949484913804D5A4DC71400053E804949495D4D6E5A4C486E5A4C48EC
03E04949484891C8FC4C5A4CCBFC163E49495A5EED03F04B5A90391FFE0F80033FCCFC15
FEECFFF8495BEDFFC016FCEEFF80D97FF914E0DAF80713F8030013FEEE3FFF4948010F13
C004037F707F707F4849147F717EA348496E7EA21B181B3C4849187CA44890C848485CA3
505A485A60631A03485A505AA2634848031F140F98C7FC050F5C1A3E484803075CA2716C
485A49923901FE07F071B55A6C48043F13806C487090C8FC001ECAEA03F8528076FD5F>
107 D<D901FEEE3FF8902607FF800203B5FC4901E0021F14C0013F01F8027F14F090267F
07FC9139FFC01FF89026FC03FE903A03FC0007FE496C6CD907F06D7ED801F09126801FC0
7F6E4AC7804848DAC07E6E7F4915F80007DBC1F082EEE3E04848ECE7C0DCEF806F7E48C7
FC04FFC9FC4A5B003E5D1BFF5E5E485B5EA24C5F4849495DA31270C74890C9485BA44A48
4C5BA35090C8FC4A5AA2505AA24A5A505AA34A484C5AA3505A495BA24F491303F5078049
49190F4F5BA349494B49EB1F00A24F90C7FC1D3E4990C9FC4F485CA21D7849481AF8505C
1C01525A495A070F4A5A525A0707141F494897C7FC0703147E745B4A0401EB03F873B512
E06D48053F5B6D48050F90C8FC6DCBEA03FC61527BCF6D>110 D<DB3FC0ED3FE0DBFFF0
913803FFFC4A01FC020F13FF020701FF023F14C0DA0FE06D90397FC07FE0913E1F807FC0
01FE001FF09228003FE003F0EB07FC023E9126F00FE080041FD91F8013034A6E48C76C7E
0278037E168002F84B6E13C0EFFDF84948DAFFF016E06049484BED7FF0604C90C9FC4948
1AF85F5F1DFC4948495AA449C7485AA21CFF130E90C7485BA44B495DA44B494B13F8A44B
90C94813F0A31DE04B485EA21DC0634B481880A35113004B5A515A64A24B484C5AA2505B
644A5F64505B704B90C7FC4A60505A704B5A505A4A01BC4B5A04BE4A5B049F4A5B4F90C8
FC4AD90F80EB0FFC706C495ADC03F0EB7FE0933A01FC03FFC04A486CB6C9FC053F13FC05
0F13E0DD03FECAFC4A4890CCFCA44A5AA44A5AA4495BA4495BA4495BA45BA2017F13E000
7FB612F8B77EA4267FFE3F5B5E7385CF5C>112 D<4CB41540041F01E0EB01E0047F01F8
13034BB56C13070307D980FF130F923B1FFC001F801FDB3FF090390FC03FC0DBFFC00107
137F4A49EB03E0020790C73801F0FF4A4803F113804A48EC00F94A48157B4A48157F02FF
1800494981495B495B624990C9121F5B5C013F4D5A495AA2495A484E5AA2485BA2484E5A
5CA25A4A4B5B5AA348494B5BA44890C9485BA4494C90C7FCA212FFA24E5A5BA34E5AA400
7F4D5A5BA218FF616C6C5D5F5F001F605F000F5E6D5D00074C5B000316FB6DEC01F36CED
07E36C6D49485B6D6CEB3F876D6CEBFE0790391FF807FC0107B5D8F00F90C8FC010114C0
6D6C1300EC0FF891C8485AA44D5AA44D5AA44D5AA44C5BA44C5BA35EA25E047F13F04AB7
12FC4A825CA36ED9FE1F5B4B737ACF51>I<D901FEED07FC902607FFC091383FFF80496D
91B512E0013F01F8010314F890267F07FC903907FC03FC90267C01FE90391FC0007E01F8
6D90393F0001FED801F0DA807EEB07FF6E02F85B4848DAC1F049138049DAC3E05B0007ED
C7C0DCEF805B484814FF94C7B5120048C75B4C5D4A167F001E4B5D003E725A4C6E5A4CEC
07C0484993C8FC5EA348495BA31270C74890CBFCA44A5AA44A5AA44A5AA44A5AA4495BA4
495BA4495BA44990CCFCA4495AA4495AA4495AA35CA26D5A6D5A6DCDFC49527BCF52>I<
DB03FEED07FC92261FFFC091383FFFC0037F01F091B512F04AB500FC4914FC912703FE03
FE903907F803FE91270FF000FF90390FE0007FDA1FC090277F801F8014804AC73C3FC03F
0001FFC0027EDBE07E5B4A6E6C484913E049484C5B4948EDF9F04948DA0FFB5C4AEDFFE0
49484C4913C0131F91C84A1580013E851D004994C76C5A755A494BED01F04E91C8FC485A
A348484B5AA36C5ACA485AA44D5AA44C5BA44C5BA44C5BA44C90CBFCA21C601CF04C4815
01A3515A4C5AA2D801F04F5AEA07F8D81FFE027F4C5A123F6D4FC7FC4815FF1B3EB5495F
1BFC49D903EF5EDB07E74B5A4902C74B5A92260F83FE4A5A49D91F014B5AD87FE0013F6D
023FC8FC0180D97E006D137E003F49486D6C485A271FF007F090393FF01FF00007B54801
0FB55A6C028001031480C691C849C9FCD90FF8ED1FF05B527BCF68>120
D<EC0FE0EC7FFC91B5170F01036EEE3F80902707F03FC0EE7FC090270F801FE0EEFFE0D9
1F007F013E60496D7E5B48486E4B13C0A24848131F5B00074F13805B120F90C7123F484F
1300A2003E4A5AA2505A484A5AA34849494B5AA24A5B1270C74E5A4A5BA34A90C9485AA3
4A5A4F5BA24A5AA24F5B4A5AA34A484B5BA449494B90C7FCA44F5A5D5BA24F5AA44F5AA3
6D17FF4E5BA2606D5E4E5B6E6C5C606E6C5C021F92B55A6E6CEB03F36E6CEB0FE3913A03
FF807FC36E90B500075B6E6C13FC031F13F00301138092C84890C8FCA34E5AA261183F61
017F167FD9FFC05E486D15FF4860486D5C48604D5BA248494A90C9FC4D5A4A5D4D5A4A14
3F49C8485A6C484B5A01804A13804C90CAFC6C6C4A5A6D4A5A6C6CEC1FF06C6CEC7FE0D8
00FE903801FF8090277FC01FFECBFC011FB512F86D14E0010391CCFC9038003FF053757B
CF59>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr8 8 4
/Fj 4 53 df<15F04A7E14031407141F147FEB03FF131F001FB5FCB6FC14BFEBFC3F13E0
EAE000C7FCB3B3B3AD4A7EA20103B57E007FB712FEA52F5974D847>49
D<EC07FF027F13F049B512FE01076E7E011F15E090263FF00713F849C77F01FCEC3FFE48
48EC0FFFD803E06E138048486E13C048486E13E0001F17F090C9FC003E17F8177F4817FC
D87FE0153F6D16FE7F486C151F18FF7FA56C5A6C5A6C5A6C5AD8038016FECAFC173FA218
FC177F18F8A2EFFFF0A24C13E018C04C13804C1300A24C5A4C5A5F4C5A4C5A4C5A4B90C7
FC5E4B5A4B5A4B5A4B5AED3F804BC8FC15FE4A5A4A5AEC07E04A5A4A48140F4AC8FC147E
4A151E495A495A495A148049C9123E011E163C5B49167C4916FC48B8FC5A4817F85A5A5A
5AB9FC18F0A3385979D847>I<913801FFC0021F13FC91B67E010315E04948C613F8D91F
E0EB1FFC49C7EA07FE017E6E7E01F86E7F484882496E7F484882EA07FC01FF6F7E80486D
81A67E5C6C90C85B6C5AEA007C90C912FF60A24C5B60A24C5B95C7FC4C5A4C5A4C5A4C5A
4C5A923801FF80037F90C8FC91383FFFFC4A13E016FE6E6D7E91C713E0EE1FF8EE07FE70
7E707F707F717E84717E8484171F84A2198083A219C0EA03C0EA0FF0487E487E487EB5FC
A31980A25F491700127F495E49153FD83FE05E90C9485A7ED80FC04B5A6C6C4A5BD803F8
4A5BD801FE4A5B2600FFC0D91FFEC7FCD97FFCEBFFFC011FB65A6D15E001011580D9003F
01FCC8FC020313C03A5C7AD847>I<171E173F5FA25F5EA25E5EA25E5E5EA25E16FBA2ED
01F3ED03E316C31507ED0F83ED1F03A2153E157CA215F8EC01F015E01403EC07C0158014
0FEC1F00143EA25C5CA2495A495A5C1307495A49C7FCA2133E5BA25B485A5B1203485A5B
120F48C8FC123EA25A5ABA12FCA5C9000790C7FCB04C7F043F13E04AB712FCA53E5A7CD9
47>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmbx10 10.95 33
/Fk 33 122 df[<171FEF3F80177FEE01FF933803FE004C5A4C5A161F4C5A4C5A4C5A4B
5B4B90C7FC5D4B5A4B5A4B5A157F4B5A4A5BA24A5B4A5B5C93C8FC5C4A5AA24A5A14FF5D
5B5D5BA2495BA2495BA25B5D5BA24990C9FCA290B5FCA25C5AA25C5AA35A5CA25AA35C5A
A45A5CA55AA55CA3B5FCB3A57EA380A57EA5807EA47E80A37EA2807EA37E80A27E80A27F
A26D7FA27F817FA26D7FA26D7FA27F817F81147F6E7EA26E7E8082806E7F6E7FA26E7F6F
7E153F6F7E6F7E6F7E816F7F6F7F707E707E707E160F707E70B4FC701380EE007F173FEF
1F00>49 181 108 263 81 40 D[<123C127EB4FCEA7FC06C7E6C7E6C7E7F6C7E6C7E6C
7F6C7F6D7E806D7E6D7E6D7E806D7F6D7FA26D7F6D7F81147F816E7EA26E7E8280828082
A26E7FA26E7FA2828082A26F7EA283A28183A28183A38381A283A38183A48381A583A581
A31880B3A51800A35DA55FA55D5FA45F5DA35FA25D5FA35F5DA25F5DA294C7FCA24B5AA2
5E5C5EA24A5BA24A5BA25E5C5E5C93C8FC4A5AA24A5A5D14FF5D495B495BA2495B4990C9
FC5C495A495A495A5C495A485B4890CAFC485A485A5B485A485A485A48CBFC127E123C>
49 181 117 263 81 I<B912FEB237127EB146>45 D<EB1FC0EB7FF03801FFFC487F487F
4814804814C04814E0A24814F0A2B612F8A76C14F0A26C14E0A26C14C06C14806C14006C
5B6C5B38007FF0EB1FC01D1D729C3A>I[<1BF8F201FCF203FEA2F207FFA2621BFEA21A1F
1BFC1A3F1BF8A21A7F1BF01AFF1BE0A2611BC0611B8061A21B006162191F62A2193F6219
7F62A219FF626062A260626097C7FCA26061181F61A2183F61187F6118FFA2615F615F61
A25F96C8FC5F60A2171F60173F60A2177F6017FF60A25E605E60A25E95C9FC5E5F161FA2
5F163F5F167F5FA216FF5F5D5FA25D5F5D94CAFCA25D5E151F5EA2153F5E157F5EA215FF
5E5C5EA25C5E5C93CBFC5CA25D141F5D143F5DA2147F5D14FF5DA25B5D5B5DA25B92CCFC
5B5CA2131F5C133F5CA2137F5C13FF5C5AA25C5A5C5A91CDFCA25A5B121F5BA2123F5B12
7F5BA212FF5BA26C5AA26C5A6CCEFC>80 181 116 263 105 I<933807FFE04BB67E030F
15F0037F15FE4AB87E020717E0021F17F84A0200804A01F8011F7F49B500E001076D7E49
02800101804991C88049496F7F4B8149496F7F49496F7F49854B8190B5844B81481B80A2
481BC04B81481BE0A3481BF0A3481BF8A292CAFC481BFCA5481BFEA9B619FFB3AB6C1BFE
A86C1BFCA26F5DA26C1BF8A46C1BF0A36C1BE0A26F5D6C1BC0A26C1B806F5D6C1B006D6D
4B5BA26D6D4B5B6D616F5D6D6D4B5B6D6D92B55A6D6E495C6D02E001075C6D02F8011F91
C7FC023F01FF90B512FC6E91B65A020717E0020117806E6C4BC8FC030F15F003011580DB
000F01F0C9FC587978F669>I<177E17FF04037F5E161F167F4BB5FC150F157F0203B6FC
147F48B8FCB9FCA5159FECFC1F148048C7FCC8FCB3B3B3B3B1003FBB12E0A8EEC03F4B77
71F669>I<EEFFFE033FEBFFF84AB77E020F16F0023F16FC91B9FC010318C0010F18F049
84017FD9F00015FE90B5C7001F804801FC0203814801F00200814801C06F8091C96C8048
71804801E06F806E6F804801FC816E6F805A6E6F158081B619C06F811CE0A285A21CF0A3
6C5CA26C91C9FC6C5BA26C5B000313F06C5BD8003FCA15E090CBFCA2611CC0A21C8096B6
FC1C0060636360634E5C4E5C634E5C98C7FC4E5B4E5B95B55A624D5C4D5C4D91C8FC4D5B
614D13F04D5B4D5B94B5C9FC4C5B4C13F84C5B4C5B4C13804C90CAFC4C48ED1FF0EEFFF8
4B5B4B49ED3FE04B5B4B90C9FC4B5A4B5A4B5ADBFFE0167F4A4917C04A5B4A90CAFCDA0F
FC17FF4A5A4A485E4A5ADAFF80041F13804990BAFC5B5B5B5B5B491A0090BCFC5A5A5A5A
5A48625AA2BCFCA463A3547776F669>I<93387FFFC0030FB6FC037F15F04AB712FE0207
707E021F17E0027F17F891B5D8C00714FE010301FCC7804901E0023F804990C8000F8049
486F80D93FF88449486F8002FC8490B5816F834814E06F835A817215804880A4815D60A2
6C1B005D7E4B5F6C5C6D495C6D495F010F90C8FCD903FC4B5C90CA5DA24E5C634E5C4E91
C7FC624E5B95B55A4D5C050714C0051F91C8FC040FB55A031FB612F84B15E096C9FCA219
F019FE6F6F7E92C7000714E0050014F8063F13FE726D7E7280728072807280877280871C
80851CC01CE0A21CF085A21CF8130FEB7FE02601FFF819FC000713FE487F48804880A248
80A3B67E1CF8A41CF0615D6C1BE05D1CC06C4A92B6FC92C915806C4919004A5D6C49606C
01C04B5C4E5C6C01F04B5C6C01FC4B5C6C01FF4B5C6D01F091B65A011F9026FF80074AC7
FC6D91B75A010318F0010018C0023F94C8FC020F16FC020116E0DA001F4AC9FC03001480
567977F669>I<F27F80507E4F7F6161A2616161A26196B5FC6060A260606060A26095B6
FC5F5FA25F5FEF1FFBEF3FF3A2EF7FE3EFFFC34C13834C1303A2EE07FEEE0FFCEE1FF817
F0163FEE7FE0EEFFC04B138017005D4B5A4B5A4B5AA24B5A4B5A4B5A4A5BA24A90C7FC4A
5A4A5A4A5AA24A5A4A5A4A5A495BA24990C8FC495A495A5C131F495A495A495A5C5A4890
C9FC485A485AA2485A485A485A485A90BD12F0A9CB000F02E0C7FCB3A293BA12F0A8F1F0
3F5C787AF769>I<48B4FCA280487F14F891B512C093BA1280A35AA41D0064644863A264
64646499C7FC4862A2636363630280C900015BD83FF8CA485B61494D90C8FC4F5A62494D
5A4F5A007F4E5A495E4E5B4E5B97C9FC4E5A4E5A48484C5A187F4E5ACB5B4D5B4D5B5F96
CAFC4D5A171F60173F4D5AA217FF4C5BA24C5B5EA24C5BA25EA24C5BA25EA293B5FC95CB
FC5DA25DA34B5BA35DA35DA35DA25FA25DA592B5FCA75CAD6E5CA26F5B6F5BA26F5B0307
90CCFCED00F8597D74FA69>55 D<93381FFFE00303B512FE033FECFFC092B712F0020316
FC020F16FF023F17C04AD9FC008049B500E0011F13F849028001077F4949C76C7F49496E
7F49496E8049496F7F5B90B5486F7F488648727F5D48865A737F5A87485C1C80A25A1CC0
A2851CE0B6FCA21CF0A51CF8A86C4E14FCA47EA2617EA26C80617E617EA26C6E92B6FC6C
5F6D6D15F76D16036D6DEC07E76D6D140F6D6DEC1FC76D6D6CEB7F876D9127F003FF0714
F86D6C90B512FE6E15FC020F15F8020315F0020015C0031F1400030001F816F093C8FCA2
611CE0A31CC0A3D90FF81980EB3FFE496C5E90B56C1800488063486E5D634880634F5BA2
96B55AA24B4A5C636C4A4A91C7FC4E5B4B4A5B6C91C8485B4A4B5B6C01F84B5B02E04AB5
5AD97FF84A5C6DB4021F91C8FC6DD9F001B512FC6D90B75A6D17E06D178001004CC9FC02
3F15F8020F15C002014ACAFCDA001F1380567977F669>57 D<4FB517784EB600F816FC06
3FDBFF8014014DB800F01403050F05FC140F057F05FF141F0403BA00C0133F040F07F013
7F043F07FC13FF93B726F0001F6D5A030303FCC8EBFF834B03E0031F13C7031F4AC90007
90B5FC4B02F8160192B600E0707E4A0380834A4ACB120F4A4A84021F02F0844A4A844A4A
8491B6488594CD7E494A86494A86495C49894C86495C49895E498990B65A207F4892CFFC
A2481F3F5D5A201F485CA3481F0FA25D5AA2F807F89DC7FC5AA25DA4B6FCB17EA481A27E
A3F803F86CF707FC81A27EA36C80200F6C20F8817EA26C6FF31FF0A26D806DF63FE0826D
F67FC06D8070F3FF806D656D6E1C006D6E626D6E505A714F5A6E6E4F5A6E6E193F6E6E4F
5A020702FC4F5A6E6E06035B6E6E6C4D5B6E03E0051F90C7FC033F02F8EF7FFE6F02FF4C
485A030703E0030F13F06F03FE037F5B0300DBFFF8010FB51280043F92B8C8FC040F19FC
040319F0DC007F18C0050F95C9FC050117F8DD003F16C0060103FCCAFCDE000114807E81
74FE97>67 D<B6D8FC0FB600C0011FB60081B612F892B895B7FCA8C7000F02FCCB000103
80C7FCB3B3AA94BEFCA905FCCB1201B3B3B0BB00C0011FBA12F8A8DBFC0F1B81957D79FC
A4>72 D<93B51678031F02F815FC92B76C1301020304E01303020F04FC1307023F04FF13
0F91B9EA801F49F0E03F0107DAC001ECF07F4901FCC7000FEBFCFF4901E0020090B5FC49
49153F4990C9120F494816034849824A707E488548498386484983865A4A834885A21B7F
5A1B3FA31B1FB5FC801B0FA280A26E1807808080816C6E715A03F094C8FC15FCEDFF806C
15FCEEFFC017FE6CEEFFE018FF6C18F019FF6C19C01AF06C19FC6C19FF1BC06C866D856D
856D856D856D856D866D866D6C856E85140F020385020085151F030184ED001F04008317
0FDD007F16801807F0003F070715C01901851A3F867414E086123F486C8400FF85A386A3
877F1DC0A37FA21D807FA26D96B512007FA26D626D606E616E5F6E6102F84D5B6E5F02FF
4D5B03C04C5B03F84C5B03FF4BB5C7FC04F002075B01FCDAFFC0017F5B496C91B75AD9F0
1F60D9E00718C0D9C00160496C6C4CC8FC90C7000F16F848020116C048DA001F4AC9FC00
78DB003F13C05B8174FE74>83 D<0303B57E4AB612FE020FEDFFC0027F16F849B812FE49
717E010F18E0499026FC000714F84901C0D9007F7F6F021F7F496D6E7F90B56F806F6E80
7280486E6E80A2737FA2737FA2876C5C856D49836D5B6D5B6D5BD903FEC9FCEB00F891CA
FCA60503B7FC0403B8FC93B9FC150F92BAFC1407021FED801F91B6EAF000010392C7FC49
14F8011F14E04991C8FC90B55A4814F8485C485C485C5D5A4891C9FCA2485BA3B55AA561
A36C6D5E96B6FC6C18FB6E15016C6EEC03F36FDA0FE3806C6EDA1FC314F86C6E027FEDFF
F86C02FC902601FF8115FC6C9128FF801FFE0015FE6C6C91B55A6D4C7F010F04E07F0103
0480130FD9007F4AC7000314FC020702F8DA003F13F8DA003F018092C8FC5F547AD266>
97 D<ED7F80017FB5FCB7FCA9EA003F130F7FB3AD953807FFE095B6FC050715E0053F15
FC94B8FC048317C0048F17F0049FD9F0038004BF90C7003F7FDCFFF8020F13FF05E06E80
058002018094C98004FC707F4C844C707F4C824C8489871E80A27514C0A21EE0A21EF0A2
87A21EF8A51EFCAD1EF8A51EF0A2631EE0A21EC0A2631E801E00636582704C5B515B7060
7093B55A704B5C706C4A5C03FC6D020F91C7FC9226F87FF0023F5B9226F03FFC91B55A93
271FFFC00F14F0DBE00790B712C04B6C5F4BC64CC8FC92C7003F15F04A020F15804A0201
02FCC9FC90CA001F90CAFC667F7AFD74>I<F47F80087FB5FC96B7FCA9F1003F1A0F86B3
AD933807FFE093B6FC030F15E0033F15F84AB712FE0207EEFF87021F17C74ADAC00F13F7
91B500FCC790B6FC4902F0141F4902C0804991C8120349498149496F7E494982498490B5
5A484A82A25A5D5A5A5D5AA35A92CAFCA25AA5B6FCAD7EA57EA2817EA37EA26C80A27E6F
5E6C617E6F5E6D6D93B6FC6D5F6D6D15076D6D4B816D6D6C023F15F06D6E4AEDFFFC0100
02F0903803FFEF6E01FF013F13CF021F91B6120F6E16FE020316F8020016E0031F150003
0314F8DB000F018003F8C7FC667F79FD74>100 D<933807FFF093B67E030F15F0037F15
FE4AB87E020717E0021F83027FDA007F13FC91B500F8010F7F4902E001037F4902800100
804991C86C7F49496F7F49498149496F7F49498390B582484A83737F5A484A83855A4B18
804884A21CC05AA292CAFC4885A21CE0A3B6FCA392BAFCA41CC01C8092CDFCA57EA46C80
A37EA36C6EEF0F80F31FC06CF23FE0816C1A7F6C6E18C01BFF6C6E18806D606D6D4C1300
6F4C5A6D6D160F6D02C0ED3FFC6D6EEDFFF8010102F802035B6D02FE020F5B6E9026FFE0
01B55A021F91B75A6E4DC7FC02035F020017F0031F16C003034BC8FCDB003F14E0040101
FCC9FC53547AD260>I<F301FE93B56C91381FFF80031F02FC027F13E092B76C48B512F0
0207DCF00714F8021FEEFC1F027FDCFF3F14FC91BA12FC0103DAE00303C113FE4991C76C
EBFE014901FC021F13F849496E13FC49496E13FE49496E6D6C13FCA290B5486E9138807F
F8489738C03FF0F41FE0489738E007804B6E92C7FC4886A34886AA6C62A36C626F5C6C62
A26C626D6D4A91C8FCA26D6D4A5B6D6D4A5B6D6D4A5B6D01FF027F5B6DDAE003B55A4991
B712804995C9FC02DF16FCD91F8716F0D93F801680031F02FCCAFC017F0100148091CFFC
A25B80A35A80A280806C13FC14FF92B712F8F1FFE01AFE6DF0FFC01BF86D19FE876D1AC0
886D866D866D866D8688130F013F1B8090BDFC481CC0000791C9120F4801F8EE003F4801
E0050714E04A1700484984487413F08791CCFCB585A66C6D4E13E0A36C6D4E13C06E606C
6D95B512806C6D4D14006C6D4D5B6C01FF050F5B6C02C0043F5B6C02F093B55A6D01FF03
0F5C011F02F849B61280010791B848C7FC010119F86D6C18E0020F95C8FC020117F8DA00
1F1680DB003F02C0C9FC5F787AD269>103 D<ED7F80017FB5FCB7FCA9EA003F130F7FB3
ADF17FFF0607B512F0061F14FE067F6E7E4DB77E050716F04D82053FD9007F7FDD7FF001
1F7FDDFF806D7FDC81FEC77EDC83FC83EE87F0DC8FE06E805FDC9F808304BFC8FC04BE81
16FE4C845EA25EA35EA45EB3B3A8B800FE013FB81280A8DAF83FEFFE0F697E79FD74>I<
14FE903807FFC0497F013F13F8497FA290B57E48804881A34881A76C5DA36C92C7FC6C5C
6D5BA26D5B010F13E06D5BD900FEC8FC91C9FCB015FF90B6FCB7FCA9C67E131F7FB3B3B3
A6B812E0A814F02B7F77FE3B>I<15FF90B6FCB7FCA9C67E131F7FB3AE963A3FFFFE3FF8
98B5FCA8070102F0C7FC736C48C8FC505A4F5B4F13E0070F5B4F5B4F90C9FCF17FFC4E48
5A4E5B4E5B4E1380063F90CAFC4E5A4E5A4D13F04D5B050F5B4D5B4D48CBFC4D5A4C487E
4C7F4C804C80163F4C8093B67E8585A285DCFE3F7F4C6C8016F84C6C80DCC007804C6C80
0400814B7F7180727F727F878472807280728087847280737F737F888573807380888573
8073804F14FFB800E0013FEDFFC0A802E0F0FC3F627E79FD6E>107
D<03FFDB7FFF94381FFFC090B60207B500F04BB512FCB7021F02FE0307ECFF80067F6E6C
021F15E04DB76C027F81050704F049B712FC4D704982053FD9007F6D010FD9C01F7FDD7F
F0011F6D90271FFC000780DDFF806D6DD93FE06D804C48C76CDB7F807FD8003F4A487148
C781010FDA07F0EF81FC6D4A486EDAC3F86E804D604C48DDE7E0834CC8EDEFC0043E6F4B
81047E18FF047C96C9804C60A24C60A34C60A44C60B3B3A8B800FE013FB8D8800FB812E0
A8DAF83FDDFE0F1883A35279D1AE>109 D<03FFED7FFF90B60207B512F0B7021F14FE06
7F6E7E4DB77E050716F04D82053FD9007F7FDD7FF0011F7FDDFF806D7F4C48C77ED8003F
4A4883010FEC07F06D4A486E805F4C48834CC8FC043E81167E047C845EA25EA35EA45EB3
B3A8B800FE013FB81280A8DAF83FEFFE0F695279D174>I<933803FFFC93B612F0030715
FE033FEDFFC092B812F0020717FE4A83023FDA801F14C04A9026F800018049B500E06D6C
13F8490280021F7F4991C86C7F4901FC03037F498649496F8049496F8090B548707FA248
4A707F4887A2484A707FA24887A2481C80A292CA7E481CC0A3481CE0A5B61AF0AE6C1CE0
A56C6E4C14C0A36C1C80A26C1C006F5E6C63A26C636F5E6C636C6E93B55A6F5D6D6D4B5C
6D6D4B5C6D6D4B5C6D6E4A91C7FC6D02E0027F5B6D02F849B55A01009126FF801F14F06E
91B75A021F188002074DC8FC020117F86E6C16E0030F93C9FC030015F0040301FCCAFC5C
547AD269>I<DB7F80903803FFF0017FB5027F13FFB70107B612F0051F15FC057F15FF04
81B812C0048717F0049F17FC04BFD9E00780DCFFFEC78005F8023F80D8003F03C0020F80
010F4B6E806D4AC86C804C6F804C6F804C844C824C84871E80871EC0871EE0A21EF087A3
1EF8A3871EFCAE1EF8A263A31EF0A35114E0A21EC063A21E80511400A2515B827093B55A
505C7060704B5C704B5C706C4A5C71023F91C7FC05F04A5B05FC49B55A9327DFFFC00F14
F004CF90B712C004C35F04C04CC8FC053F15F0050F15C0050102FCC9FCDD001F138095CC
FCB3A7B812FEA8ECF83F66757AD174>I<DA03FCECFF8048B5020713F8B6021F13FE057F
6D7E94B612E04C814C814C01077F93260FF80F7FEE1FE04C48487FC66C1580011F4A4848
14806D147E5EA2EDFDF8A25E03FF6E14005E725B725B4C6D5B725B9538007FC0071FC7FC
4C91C8FCA693CBFCB3B3A4B9FCA8ECF07F495279D156>114 D<92267FFF80133C021FB5
00FC13FE91B71283010316EF010F16FF133F49EB8000D9FFF8C7120F000301C014034A14
004848C9127F000F173F4848161F180F485A1807127FA2180312FFA27F7F7F6E6F5A02E0
92C8FC14F814FF6C14F8EDFFE016FF6C16F817FF6C17C018F06C17FC6C17FF6C846C846C
846D836D83010F83010383010083023F17801407DA007F16C01501DB000F15E0EE003F17
0717007213F0003F171F486C8200FF83A26D82A2847F1AE0A27FA26D18C06D5EA26D1880
6D5E6E17006E4B5A02F0ED3FFC02FC157F02FF913803FFF803F0013F5B92B712C001FB5F
01E04CC7FCD9C03F15F8D9000F15E048010192C8FC0078D9001F13E0445479D253>I<ED
3FE0A7157FA515FFA45CA35CA25CA25C5CA25C5C91B5FC5B5B5B5B133F90B912F81207BA
FCA7D8000302E0C9FCB3B3A4F1FF80AF6D4C1300A282616D1603705C6E15076E6D495A70
131F6E9039FFC07FF06E91B55A6E5E6E5E020093C7FC033F14FC030F5C030314E0DB001F
90C8FC41747CF251>I<DB3FC0EF0FF0017FB5041FB5FCB7033FB6FCA9D8003FEF000F01
0F18036D84B3B3A962A462A36D6062A2626D187E705D6D0501816E4C4814FE70DA0FF091
B512806E01FCEC3FE06E903AFF8003FFC06E91B65A6E5F020116FC6E6C5D031F15E00303
92C7FCDB000F01F893C8FC695379D174>I<B50087B527C00FFFE1B500E0903A07FFF8FF
F091B692B693B5FCA8D8003F91C800030280C8000FEBF0006D7106011380826D716E94C7
FC7063886D724D5A826D745E7092B5160F886D67704A181F6D745E704A183F886E66704A
187F6E735E704A18FF896E05F96071011F5F6E05F06E92C8FC073F5F71836E4D6C5E7101
7F17076E745C4F486C150F71836E4D6C5E7148181F6E745C4E496C153F05FC836F4B6D5E
DDFE07187F896F4A486D4B5A05FF846F4B6D5E069F17811EC16FDABFF06D02C390C9FC06
FF17E36F4B6E5C1EE71EF76F4B6EEBFFFCA26F4B6E5CA36F92C86C5CA270496F5CA37049
6F5CA270496F5CA370496F91CAFCA27049705AA37049705AA27049705ADC007ECAEA07E0
8C527BD097>119 D<267FFFE1B500F0913A07FFF0FFF091B694B5FCA8D8000702E0C900
1FEBE000090390C7FC6D6E5F1B07A26D6E4C5AA26D6E4C5AA26E6D4C5AA26E6D4C5AA26E
6E5E1BFF6E6E5E62A26E6E4A90C8FCA26E6E4A5AA26E6E4A5AA26E6E4A5AA26F6D5D1A3F
6F6D5D1A7FA26F6E495AA26F6E485BA26F6E4890C9FCA26F6E485AA26F02F85B190F18FC
6F4B5AA2706D485AA2706D485AA2704A5AA2705DA27092CAFCA3705CA2705CA2705CA271
5BA2715BA2715BA3715BA27190CBFCA260A24D5AA24D5AA260173FA2D803FE4B5A380FFF
80486D4A5A487F4C5B487F4C90CCFCB57E4C5AA24C5A4C5A163F4C5A6C49495A4B5B4A48
5B6CD9C00F90CDFC9138803FFE6C903801FFFC6C90B55A6C5D6C15C06C92CEFC6C6C13FC
011F13F0010390CFFC64757CD06E>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmr10 10.95 68
/Fl 68 124 df<943803FFE0057F13FC0403B67E041F15E0933A7FFE003FF0922601FFE0
EB03FC03070180EB00FE4B48C8123FDB3FF86F7EDB7FE06F7E4B48ED3FE04A4915FF4A90
C8487F4A485D4A485D021F844B5D143F5D147F5D02FF705BA24B6F5B49715B735B083EC8
FC97C9FCB3A3F203F8F17FFFBCFCA6D8000101E0C8120F19031900A21A7FB3B3B3A5496D
4C7E496D4B7F011F01FE03076D7E007FB7D8801FB712E0A502E1EFF87F5B807CFF65>12
D<942603FFE0EE7FFC057F01FE030FB57E0403B66C027F14F0041F03E00103B612FC047F
9026001FF8010F9038C007FE922601FFF0D903FCD93FFCC7EA7F8003070180D9007FD9FF
F0EC1FC04B48C8D81F8101C0EC07E0DB3FF8DB0FC790C86C7EDB7FE0922607CFFC6F7E4B
4892263FFFF8ED07FC4A494B49151F4A90C848B5484B7E4A484B4A157F020F4F15FF4A48
4B854B95C85A143F4B4B5B027F824B5F02FF765B854B4D705A4971725ADF007F715A083F
EF07C09DC9FCB3A3217F0D0FB5FCC3FCA6D8000101E0C9D83FFCC81203F7007F201FA38C
B3B3B3A4496D4C6C4C7F496D93B54C7F011F01FE030302C092B512F0007FB7D8800FB7D8
F003B712FCA502E1DDFC3F170F8E807CFF98>14 D[<EA01F0EA07FCEA1FFF4813804813
C0A2B512E0A96C13C0AC6C1380AC6C1300AC6C5AAC6C5AAC6C5AAC6C5AA76C5A90C7FCB0
EA01F0EA07FCEA1FFF481380A24813C0A2B512E0A56C13C0A26C1380A26C1300EA07FCEA
01F0>19 130 112 257 51 33 D<EA01F0EA07FCEA1FFF481380A24813C014E0B5FCA214
F0A37E14F87EA26C1378EA07FCEA01F0C7FCA614F0A5EB01E0A4EB03C0A2EB0780A2EB0F
00A2131EA25B137C13785B1201485A485A5B48C7FC5A121E1208153670FD33>39
D[<EE0180EE03C01607EE1F80EE3F00167E5E4B5A4B5A4B5A150F4B5A4B5A93C7FC157E
15FE4A5A4A5AA24A5A4A5A141F5D143F5D147F4AC8FCA2495AA2495AA2495AA2130F5C13
1F5C133FA2495AA3495AA25AA291C9FC5AA25BA21207A3485AA4121F5BA4123FA35BA312
7FA75BA212FFB3A6127FA27FA7123FA37FA3121FA47F120FA46C7EA31203A27FA27E80A2
7EA26D7EA36D7EA2131F80130F801307A26D7EA26D7EA26D7EA26E7E143F81141F81140F
6E7E6E7EA26E7E6E7E157E81826F7E6F7E15076F7E6F7E6F7E167E82EE1F80EE07C01603
EE0180>42 182 110 263 71 I[<126012F07E127E7E6C7E6C7E6C7E6C7E6C7E7F6C7E13
7F7F6D7E806D7E6D7EA26D7E6D7E8013008080816E7EA26E7EA26E7EA26E7EA281140381
140181A26E7FA36F7EA282A2153F82A2151FA282A36F7EA4821507A482A381A31780A781
A217C0B3A61780A25DA71700A35DA35EA4150F5EA44B5AA35EA2153FA25E157FA25EA24B
5AA34A90C7FCA25D14035D14075DA24A5AA24A5AA24A5AA24A5A92C8FC5C5C13015C495A
495AA2495A495A5C49C9FC5B13FE485A5B485A485A485A485A48CAFC127E12F85A1260>
42 182 118 263 71 I<EA01F0EA07FCEA1FFF481380A24813C014E0B5FCA214F0A37E14
F87EA26C1378EA07FCEA01F0C7FCA614F0A5EB01E0A4EB03C0A2EB0780A2EB0F00A2131E
A25B137C13785B1201485A485A5B48C7FC5A121E12081536709233>44
D<B9FCAB300B7EAC3D>I<EA01F0EA07FCEA1FFF481380A24813C0A2B512E0A56C13C0A2
6C1380A26C1300EA07FCEA01F01313709233>I[<1A701AF8F101FC1903A219071AF8A2F1
0FF0A3F11FE0A3F13FC0A2197F1A80A2F1FF00A34E5AA34E5AA34E5AA2180F61A24E5AA3
4E5AA34E5AA34EC7FCA25F60A24D5AA34D5AA34D5AA34D5AA2173F60A24D5AA34DC8FCA3
4C5AA216035FA24C5AA34C5AA34C5AA34C5AA2167F5FA24CC9FCA34B5AA34B5AA34B5AA2
150F5EA24B5AA34B5AA34B5AA34BCAFCA25C5DA24A5AA34A5AA34A5AA2141F5DA24A5AA3
4A5AA34ACBFCA3495AA213035CA2495AA3495AA3495AA3495AA2137F5CA249CCFCA3485A
A3485AA3485AA2120F5BA2485AA3485AA3485AA212FF90CDFCA25A127E123C>70
181 118 263 91 I<EEFFF0030F13FF037F14E04AB612F802079038C03FFE913A0FFE00
07FFDA3FF8010113C0DA7FE06D6C7E4A486E7E49496E7E4990C86C7E49486F7E49486F7E
49486F7F013F844A81017F844A167F01FF844A163F4885A24849707EA24885A34890CA6C
7EA3481A80A4481AC0A34983A2007F1AE0A900FF1AF0B3AC007F1AE0A76D5F6C1AC0A56C
1A80A46C1A006E5EA26C61A36C6D4C5AA36C616E167F6C61A26D6C4C5A013F606E5D6D6C
4B5B010F95C7FC6D6C4B5A6E150F6D6D4A5A01006DEC3FF06E6C4A5ADA3FF849485ADA1F
FE01075B912807FFC03FFEC8FC020190B512F86E6C14E0030F91C9FC030013F04C7D79F8
5B>I<ED01E04B7E1507150F151F157FEC01FF1407141F91B5FC130F0007B6FCB7FC14F9
14E1140113F0EAF800C7FCB3B3B3B3B3A34A7FA2020F13FE91B612E0007FB912E0A515E0
3B796FF85B>I<ED0FFF92B512F8020714FF021F15E0027F15F891B712FE0103D9C0077F
4948C714C0D90FF0021F7FD93FE06E7FD97F8002037F91C86C7F01FE6F7F4848707E4848
188048487013C04982000F19E0497013F0485A7213F848CAFC1AFC84EA7FF001FC18FE01
FF8280B5FC6E17FFA280A56C5BA26C5BA26C90C9FCD807FC18FEEA01F0CBFC601AFCA34E
13F8A21AF0601AE0601AC0601A804E1300A24E5A614D5B4D5B615F4D5B614D90C7FC4D5A
4D5A60EFFFE04C5B4C5B4C90C8FC5F4C5A4C5A4C5A4C5AEEFF804B90C9FC4B5A5E4B5A4B
5A4B5A4B5A4B5A4BC9121F4A5A4A5A4B163E4A5A4A5A4A5A4A5A4ACAFC02FE177ED901F8
177C495A495A4A17FC495A49CBFC013EEF01F849170F90BAFC5A5A5A1AF05A5A5A5ABBFC
A21AE0A3487977F85B>I<923801FFF0033FEBFF804AB612F0020715FC021F15FF91277F
FE003F13C0DAFFC001077FD903FEC7000113F8D907F86E7FD90FE06F7E49486F7E49C96C
7F017E84017C707F4984000183D9FFC083487F02F86F7F80A2486D83A77E5C6C616C5BEB
7FE0D91FC05D90CA5CA3626062A24E5B62A24E90C7FC614E5A4E5A614D5B4D5B4D90C8FC
4D5AEF3FF84CB45A4BB512C092B548C9FC4A8018F06E15FC92C76CB4FC050F13C005037F
050013F8727E72B4FC727F86727F727F86727FA2727FA286721480A21BC0A31BE085A31B
F0EA01F8EA07FE381FFF80487FA2487FA2B57EA21BE0A44A93B512C0A26C5B4A188091CA
FC6C484C140013F8D81F8060606C6C606D4C5B6C6C606C6C5E6C6C4C5B6C6C60D97F804B
5B6D6C4B48C7FCD91FF04B5AD90FFE02035B902603FFC0010F13E0010001FE017F5B6EB7
C8FC020F15FC020315E0DA007F91C9FC030313F04C7D79F85B>I<197819FC18011803A2
1807180FA2181F183FA2187F18FFA25FA25F5FA25FEF1F7FA2173E177CA217F8160117F0
EE03E0160717C0EE0F80161F1700163E167E167C5E15015E4B5A15075E4B5A151F93C7FC
153E157E157C5D14015D4A5A14075D4A5A141F92C8FC143E147E147C5CA2495A495AA249
5A495AA249C9FC133EA25B13FC5B485A12035B485A120F5B48CAFC5A123E5A12FCBDFCA6
CB01FCC7FCB3A44D7F4D7F051F14E00303B812FEA5F0F87F507B7BFA5B>I<0130170301
7CEF0F80D97F80167F02F0923803FF0002FFED3FFE03F8EB07FF92B75A61616161614EC7
FC606018E018804DC8FC17F8D97E7F14C0020749C9FC91CCFCB3A6EEFFE0030F13FE037F
6D7E4AB612E002079038003FF8DA0FF0EB0FFEDA3F80EB03FF027EC76C7F02F86E13E0D9
7FF06F7E4A6F7E4A6F7E5C91C96C7E017E83017C701380A2013818C090CA6C13E0A21AF0
84A21AF8A21AFCA2841AFEA51AFFA4EA03F0EA0FFC487E487E487FA2B57EA31AFEA35C4E
13FC91C9FC6C5A4918F813F0007CCAFC6C4D13F0A2003F19E06C5F1AC06C7E6D4C138000
0719006D4C5A6C6C163F6C6C5F6C6C4C5A6D4C5A017F4B5B6D6C4A5BD91FE0020F90C7FC
D907F84A5AD903FEECFFF8902701FFE0075B6D6CB612C0021F92C8FC020714FC020114E0
9126001FFEC9FC487D77F85B>I<EF3FFC0403B57E041F14F0047F14FC4BB67E03079038
E003FFDB1FFEC7EA7FC0DB3FF8EC0FE0DBFFE014074A496E7E4A90C86C7E4A4815024A48
ED1FFC4A48157F4A4815FF4A484A7F4A5A495E495B4990C8FCA2495A131F4A6F5B133F49
486F5B735A4948EE1FC096C8FC5A5C5AA3485BA25AA3485BA45AEE3FF84BB512C0030714
F048D9001F14FC92393FC00FFF92267E00017FDA01F89038007FE04A486E7EDA07C0EC0F
F8B54915FE4AC86C7E4A6F7F021E6F7F5C027C6F7F0278707E4A83A2737E4A83A2737E5C
1B80A24A18C085A21BE0A47E91CA14F0A6806C90CAFCA280A37EA31BE07EA36C6D18C0A2
616C1A80A26C7F1B00616C616E5F017F177F013F606E5F011F17FF6E4B5B6D6C5F6D6C4B
5B6D4C90C7FC6D6D4A5A6D6D4A5A6E6C4A5ADA3FF84A5ADA1FFE903801FFC0912707FFC0
1F5B6E90B548C8FC02005D033F14F0030714809226007FF8C9FC4C7D79F85B>I<EA01F0
EA07FCEA1FFF481380A24813C0A2B512E0A56C13C0A26C1380A26C1300EA07FCEA01F0C8
FCB3B3A4EA01F0EA07FCEA1FFF481380A24813C0A2B512E0A56C13C0A26C1380A26C1300
EA07FCEA01F0134E70CD33>58 D<EA01F0EA07FCEA1FFF481380A24813C0A2B512E0A56C
13C0A26C1380A26C1300EA07FCEA01F0C8FCB3B3A4EA01F0EA07FCEA1FFE487E14805A14
C0B5FC14E0A46C13F0A27EA27EEA07FCEA01F0C7FCA7EB01E0A5EB03C0A3EB0780A3EB0F
00A2131EA25BA25B13F85B485A1203485A485A48C7FC121E121C1208147170CD33>I<00
3FC012FC481FFEC2FCA46C1FFE001F1FF8D4FCB3AA001FC012F8007F1FFEC2FCA46C1FFE
6C1FFC782C76C28D>61 D<EDFFFE020FEBFFF8027F14FF49B712C00107D9800713F0D90F
F0C7EA7FFCD93FC0EC1FFE49C83807FF80D801FC6F7FD803F06F7F48486F7F4983484816
7F001F8490CA7F123ED83FF0163F486C8313FEA2B51880A280A56C90C9FCA26C4818006C
485E6C5AD803E05FCBFC4E5AA24D5B615F4D5B4D5B4D90C7FC4D5A60EF7FF04D5A4C5B60
4C90C8FC4C5A5F4C5A5F4C5AA24C5A5F4CC9FCA216FEA25E15015EA24B5AA35E1507A25E
A3150FA25EB06FCAFC92CBFCB0ED0F80ED3FE0EDFFF84A7FA24A7FA24A7FA56E5BA26E5B
A26E5BED3FE0ED0F80418076FF56>63 D[<191F4F7E4F7EA34F7EA34E7FA34E7FA34E7F
A34E7FA34E7FA34E8085A2067F80F07E3FA206FE804E7EA20501814E7E05038118F08505
07814E7EA2050F814E7EA2051F814E7EA2053F8295C77EA24D82057E80A205FE824D80A2
0401834D80A20403834D80A20407834D80A2040F834D80041F835F86043F8494C97EA24C
84047E82A204FE844C82A20301854C82A20303854C8293BAFC4B85A34B85A204C0C91201
031F854C82A2033F8693CB7EA24B86037E8403FE865D880201874B84A20203874B84A202
07874B84A2020F874B84A2021F874B84143F6F87027F8614FF496D87497F010F6D96B57E
013F01FE0603800003B600C0051F14FFB700FE043FB812E0A5020F1BC1>123
130 122 257 136 65 D<BC7E1BFCF3FFC01CF01CFE767ED8000F02F0C8000380010002
C0DB007F13F06E49041F7F090713FE6E727F090080767F767F8A767F888A767F888AA288
1F80A37614C0AA521480A31F0064666466525BA2525B525B525B99B55A5191C7FC515B51
13F8091F5B097F13C050B5C8FC080F13FC0703B512E093B9C9FCA21CF01CFF0480C9003F
13C0090713F0090113FC7513FF0A3F7F7613E0767F767F767F767F8A7614801FC0891FE0
891FF0891FF8A27713FCA41FFEA48965A51FFCA265A21FF8651FF0651FE09AB5FC1FC052
148064521400525B525B525B99B55A4A4E5C09075C91B56C043F91C7FC010F02F04BB55A
BE12F81DE01D800AFCC8FC1CE009FCC9FC6F7C79FB81>I<DFFFF81618063FD9FFC0153C
0503B600F8157C051F03FE15FC057F6F6C13010403B812E0040FDAC00101F81303043F01
FCC7D81FFC13074C01C0EC03FF4BB5C9EB800F4B01FC93383FC01F030F01F0EE0FF04B01
C0933807F83F037F90CA3803FC7F4B48EF01FE4A499438007FFF4A49844A49844A5B4A49
844A49844A90CC7E4A5A49498549875D49491A7F491C3F495B4B1A1F5B5D491C0F90B5FC
92CE12075A5C481D03A2485BA21E015A5CA25A1E005C5AA31F78481E00A35CA3B5FCB07E
A380A37EA21F381F7C7E80A27EA2807E1FF8A26C7FA27E6EF301F07E816DF403E07F816D
F407C0816D6DF20F807F6D6DF21F006F626D1C3E6D6D1A7E6E6C626E6D616E6D18016E6D
4E5A6E6D4E5A6E6D4E5A6E6D4E5A6E6D4EC7FC6F6C18FE031F01C04C5A6F01F0EE07F803
0301FC4C5A6F01FFEE3FE06F6C01C0913801FF807001FC020F90C8FC040F903AFFC001FF
FC040391B612F0DC007F5E051F93C9FC050315FCDD003F14E0060001FCCAFC6E8476FF83
>I<BC7E1BFCF3FF801CF01CFC1CFFD8000F02F0C8000F14C0010002C0030014F06E4904
1F13FC09077F6E06007F7613C00A1F7F767F0A037F767F767F777E777F777F777FA2777F
777F8B89777FA2787E8C8A8CA2787FA3787FA28CA28A8CA38CA28AA28CA72180A78AA366
A62100A668A36668A4545BA268A26668A2545BA268669DC7FC545AA2535B535BA2535B53
5B535B65679AB5C8FC525B525B525B0A1F13E0525B99B55A4A060349C9FC091F5B91B56C
93B512F0010F02F0030F5CBE128052CAFC1CF01CC009FCCBFC1B80797C79FB8B>I<BF12
F8A48AA2D8000F02F8C9121F010002E0EE007F6E49170F1C016E851D3F777E1D0F1D071D
031D01A21D00A21E7E1E7FA28AA38AA31F80A21E0FA4F203E0A2F607C0A49BC7FCA31A07
A41A0FA21A1FA21A3F1AFF1903193F93B8FCA604C0C7123F190319001A3F1A1FA21A0FA2
1A07A41A03A21F3EA31F7CA497CAFCA21FFC1FF8A41E01A31FF01E03A31E07A21FE01E0F
A21E1FA21E3FA2F67FC01EFF656565651D3F4A97B512801C0391B56C173F010F02F8040F
B6FCC0FCA31F00A36F7B79FA7C>I<BF12E0A41EF0A2D8000F02F8C9123F010002E01601
6E49EE001F1C076E190188F57FF81D3F1D1F1D0F1D07A21D03A21D011EFCA21D00A31E7C
A31E7EA21E3EA6E007C0141FA41E00A51A0FA41A1FA21A3FA21A7FF101FF1907197F93B8
FCA604C0C77E19071901F1007F1A3FA21A1FA21A0FA41A07A997CAFCB3AA4A7FA291B512
F8010FECFF80BA7EA5ECFE07687B79FA77>I<DFFFFC160C063FD9FFE0151E4DB600FC15
3E050F03FF157E057F04C014FE4CB812F00407DAE00101FC1301041F01FCC7D80FFE1303
047F01E0913801FF804BB5C9387FC0074B01FC93381FE00F030F01F0EE0FF04B01C09338
03F81F4B49933801FC3FDBFFFECB12FE4A49F07F7F4A49F03FFF4A49844A49844A49844A
49844A90CC7E4A5A494985491C7F5D49491A3F5B4B1A1F5B49491A0F5D491C0790B5FC92
CE12035A5C481D01A25C5A1E005A5CA25A1F7EA2485BA31F3C489BC8FCA35CA3B5FCB07E
A38098B639F07FFFF09BB6FC7EA46C6D95C7EDE0000B0F91C7FC1D036C6689807EA26C7F
A36C7FA27E817F6D7FA26D7F7F817F6D7F816D7F7F6E6C616E7F6E7F6E6D606E7F6E6D60
6E6D606E01FF199F033F6D173F6F01E0EFFF0F6F01F8933801FE07030301FE933807FC03
6F6D6C92381FF8016F6C01E092387FF000041F01FE912603FFC0137E0407D9FFF0017F49
133E040191B648C7121E706C04F8140C050F04E091C8FC050193CBFCDD003F14F8060049
CCFC7C8476FF8F>I<B5D8FE07B500F00107B5D8F03FB5128091B794B7FCA5D800074ACA
003F02F0C7FC010002F0050714806E497191C8FCA26E49715BB3B3AB93BBFCA604C0CA12
01B3B3AF4A6D4D7FA291B56C4D80010702FE053F14F0B900F00107B91280A5DAFE07F1F0
3F797C79FB88>I<B60003B512FC92B6FCA5D80007ED8000D9007F01F8C7FC6E5BA26E5B
B3B3B3B3B3AE4A7FA24A7F0107B67EB912FCA51503367C7AFB42>I<4AB639E07FFFF095
B6FCA591C8EDC000050F91C7FC05035B6183B3B3B3B3AB13F0EA03FCEA0FFF487F487F48
7FA2B57EA3615FA25C616C5B4D5B5C6C48C85C495DD81F805F4D90C8FC6C6C4B5A6C7E6D
4B5A6C6C4B5A6C6C4A5B6CB44A13C0D93F80495BD91FF0D91FFEC9FCD907FFEB7FFC6D90
B512F0010015C0021F49CAFC020113E04C8079FB5D>I<B5D8FE07B67E91B8FCA5D8000F
0380CCFC010002F8CDFC6E13E0A26E5BB3B3B3ADF503E0A4F507C0A71D0FA31E80A21D1F
A41D3FA3F57F00A265A26464A2646464525A1C7FF301FF634A180F1B7F91B56C0303B5FC
010F02F8157FBEFC65A5637C79FB72>76 D<B700E0090FB612FC7063A37063A2D8000FF9
C00001006E097B01FCC7FC6E676F6C1BF3023F67A26F6CF201E3A26F6DF103C3A36F6DF1
0783A36F6DF10F03A26F6D191EA36F6D193CA26F6D1978A3706C19F0A3706CF001E0A270
6DEF03C0A3706DEF0780A2706DEF0F00A3706D171EA3706D5FA2706D5FA3716C5FA3716C
4C5AA2716D4B5AA3716D4B5AA2716D4BC7FCA3716D151EA3716D5DA2716D5DA3726C5DA2
726C4A5AA3726D495AA3726D495AA2726D49C8FCA3726D131EA2726D5BA3726D5BA3736C
5BA2736C485AA373EB83C0A373EBC780A27301EFC9FCA37313FEA2735BA24A7E735B4A7E
497F496D70484C7F497F011F01FE70484C7F48B600E098B612C0B800E0061FB812FC745A
A2745AA202E171C815C0967C78FBA7>I<B76C4CB500C3B512807096B6FC8282A282D800
016EDC0003EDC000D9003FDF003F01FCC7FC70060F13F070725B775B71715B6F6D7190C8
FCA26F6D187E6F7FA26F7F6F7FA26F7F6F7FA26F80707FA2707F8284707F8284707F8284
70808385717F8385717F8385717FA2717F7180A2727F727FA2727F727FA2727F727FA272
7F7280A2737F737FA2737F737FA2737F8587737F8588747F8688747F8688747F8688747F
A27414807513C0A27513E07513F0A27513F87513FCA27513FE7513FFA27514FE88A28888
A28888A28888A2881D7F4A7E1D3F4A6C191F497F496D190F496D1907011F13FE48B600E0
1803B800C01701A21D001E7EA202E11B3C797C79FB88>I<953807FFE04DB67E050F15F0
057F15FE0403B812C0040F9026FC003F13F0043F01C0010313FCDCFFFEC86CB4FC4B01F8
031F7F030701E0030713E04B496F7F033F90CA13FC4B48717E4B48717E4A01F0050F7F4A
49717F020F497113F04A49717F4A8793CCFC4A48737E4A48737E4949737F49894949737F
A24949737F4949737FA24949737FA2498990B5CE7FA24849751380A2481FC04A87A2481F
E0A248497513F0A3481FF84A87A2481FFCA5481FFE4A87A5B51EFFB16C6D5113FEA66C1F
FCA26E63A26C1FF8A36E636C1FF0A26C1FE06E63A26C1FC06E98B5FC6C1F80A26C6E4F14
00A26D656F616D656F616D656D6D4F5BA26D6D4F5B6D6D4F5B6D656D6D4F90C7FC6F96B5
FC6E6D4D5B6E636E6D4D5B6E6D4D5B6E6D4D5B6E6D4D5B02006D4D90C8FC6FB4EFFFFE6F
6D4B5B6F6D4B5B030701F0030F13E06F01FC033F5B030001FF92B5C9FC043F01E0010713
FC040F01FE017F13F0040390B712C0DC007F4BCAFC050F15F005011580DD000701E0CBFC
788476FF8D>I<BB12FEF2FFF01BFF1CC01CF81CFED8000F02F0C8003F6D7E010002C003
01806E496F6C13F0090F7F6E727F09017F757F767F767F767F767F8A888AA2767FA28AA2
761480A41FC0AA1F80A4521400A266A2525BA266525B6466525B525B99B5C7FC515B0907
13F8091F5B097F13C00803B55A083F49C8FC93B912F81CE099C9FC1BF050CAFC04C0CEFC
B3B3AB4A7FA291B57E010F14FFB912F8A5ECFE076A7C79FB7C>I<922607FFC015C0037F
01FCEC01E00203B66C1303020F03F01307023F15FC91287FFC003FFE130F902601FFE090
3903FF801F4990C8EA7FC0D907FC92381FF03FD91FF8923807F87F4948ED01FC49489238
00FEFF4A167F4948824890CA7E48844983000784484883A2484883A2003F197FA249183F
127F1A1FA300FF190FA41A077FA46D1803A27F127F7F6EEF01C097C7FC6C7F80806C13FC
806C6D7E15F06C14FF16F06C15FF6C16F017FF6C17F06D16FE6DEEFFC06D17F06D17FC01
03836D717E6D84023F83020F83020383020083030F82030082040F16801600050F15C005
0015E0180F060114F0727E7313F885857313FC85857313FEA21A7FA20070F13FFF12F8A2
86A486A27EA41BFE7EA36C1AFC1A1F7F1BF87FF23FF07F6DF07FE07F6DF0FFC0A26D4D13
806D6C4C13006E5E6E5FD9EFF84C5AD9C3FEEE3FF89026C1FF804B5A018001F04A485A90
26003FFF020713806E01F8013F90C7FC48010790B65A48010116F86E6C15E048020F1580
48020002FCC8FC0060030713C0508476FF65>83 D<001FC012E0A60380C702FCC7120748
01F0C8003F01F0DA003F13F002C06F49150F91C9180301FC1C00491D7F491D3F491D1F49
1D0FA2491D07A290CA1903A3007EF601F8A5007C1E00A800FC1FFC481F7CA6CB1A00B3B3
B3B24E7F4E7F95B57E051FECFFE0037FBA12F8A51903767B7AFA83>I<B5D8FE07B500F0
4AB500C3B5128091B795B6FCA5D800074ACA0003EDC000010002F0DD003F01FCC7FC6E49
060F13F0775B6E49725B775B7790C8FCA21E7EB3B3B3B3A38066A282A280535AA280704E
5AA280535A6E7F535A80704E5A157F6F6C4EC9FC656F6C187E6F6D5F6F1801714C5A6F6D
4C5A6F6D4C5A6F6D4C5A706CEE7F80DC1FFF4CCAFC706DEC03FE7001E0EC0FFC040101FC
EC7FF070903AFFC007FFE0053F90B61280050F93CBFC050315FCDD007F14F0060F148006
0001F8CCFC798079FB88>I<B500E0B691270FFFFE0FB500F00207B538C3FFF091B793B7
95B5FCA5D8003F4AC9000303E0C9001FECFC00010702E0DC007F49CA000314E001014A71
49050014804C7149DE3FFEC7FC6D91CB6C49725AA16D5A7073616E731A07A15C70856E73
63A27073180F6E7363A270201F6E7596C8FCA270686E4F6E173EA270207E6E4F6E177CA2
826E4F6E5F1D9FA26E6D051F6E4C5A1D0FA271043F6E16036FDE3E0761A271047E6E1607
6FDE7C0361A27173160F6F4E6C61A2711E1F6F4D486C6D94C9FCA271666F050370153E52
7F711E7E6F050770157C527F836F050F705D527FA26F6D031F704A5A99C77EA2724A7014
0370043E6E5FA272027E70140770047C6E5FA27273140F704C6E5FA2721C1F704B486E6D
92CAFCA2726470030372133E5181721C7E70030772137C51818470030F725B5181A2706D
011F72485A98C97EA27348F0F80371023E705DA2DFC07EF0FC0771027C705DA207E0F1FE
0F714A705DA207F01A1F71D9F1F07001FF90CBFCA207F9627101FB1ABE508307FF1AFE71
645083A271645083A2716497CB7EA37248725BA37248725BA37248725BA372487290CCFC
A30607624F197E7248193CB4807DFBBB>87 D<B5D8F07FB500C0040FB5380FFFE091B797
B5FCA5D8000F03C0CB6CECF80001014ACC001F91C7FC6D6C49070713FC6E497313F06E1D
C070735B6E9AC8FC6E6D62676E6D4F5A836E515A6E6E4E5AA26F6D4E5A836F505A6F6D4E
C9FC836F1AFE6F7F535A6F6D4D5A846F4F5A6F80535A706D4C5A84704E5A706D167F7294
CAFC7018FE707F525A706D1503735D704D5A7080525A716D4A5A85714C5A717F52CBFC71
6D14FE717F515A717F74485A714B5A7114C0515A7213E074485A724A5A7213F851CCFC72
6D5A726D5A745A8463725C84638563735BB3B3A287A2618796B57E060714FE94B912F0A5
F1FE0F837C7EFB88>89 D<ED3FFE0207B512F0023F14FC91B77E0103D9E00713E0D907FC
C77FD91FE0EC3FFCD93F80EC0FFE017EC86C7E496F13C001FF6F7F4801C080486D826E6F
7E6E6F7E5A6E82181F85A36C496F7FA26C5B6C5B6D5A011FC9FC90CAFCA60507B5FC040F
B6FC4BB7FC151F92B6120F02071400021F13F0027F1380902601FFFCC7FC010713F04913
C04990C8FCEB7FFE495A485B485B485B5C485B5A91C9FC5A49F107C0127FA3485AA360A3
60A2127F6D167B18FB003F05F315806DDB01E1EBC00F6C6D14036C6DDA07C19038E01F00
6CEE0F806C01F0913A1F007FF87E6C6D027EECFFFE26007FFE49486D5B90283FFFC01FF0
6D5B010F90B5486D13E00101038001035BD9003F49C848C7FC020101E092C8FC525379D0
5B>97 D<EC0FC048B5FCB6FCA6C67E131F1307A27FB3B0EF07FF057F13F00403B512FE04
0F6E7E93261FF80113E0933A7F80003FF804FEC7EA0FFCDBC3F8EC03FFDBC7E06E7FDBCF
C06E13E0DBDF806F7E03FFC96C7E4B707E4B707E5D747E4B844B707FA2747F888688A288
1B7FA288A38887A41D80AC1D00A363A264A3641BFF64A264626462646F60626F4C90C7FC
636F4C5A03BE4C5A03BF4C5ADB1F804B5A6F6C4A5B4A6C6C4A90C8FC4A6C6C4A5ADB01FC
EC1FFC9126F8007FECFFF093263FE00713C04A010FB6C9FC4A6D14FC90C914E0DD1FFCCA
FC59807BFD65>I<EE7FFE0307B512F0033F14FE92B77E020316E0020FD9E00113F84A48
C7EA0FFCDA7FF8EC01FE4A486E7E4901C00203138049495C4990C84813C049485D011F18
E049485D495A495AA2485B487113C05C4871138072130048496F5AF000F84895C7FCA291
CCFC5AA35AA25BA212FFAD127FA27FA37EA36C7FA21A706C6D17F8A27E6EEE01F07E6C6D
EE03E0A26C6DEE07C06D7E013FEF0F806E161F6D6C17006D6D153E6D6D157E6D6D4A5A01
006D4A5ADA7FFCEC0FF0DA1FFFEC3FC06E9039F003FF80020390B548C7FC02005D033F14
F0030714809226007FF8C8FC45537AD051>I<F20FE04EB5FC187FA6F0003F190F1903A2
85B3B0EE1FFC0303B512C0031F14F0037F14FC913A01FFF003FE0207903980007F81DA1F
FCC7EA0FC1DA3FF0EC07E14A48EC01F1494848EC00F94949157D4990C9123F494882495A
494882017F83495A4A825A5A5C5A5C5AA25A91CAFC5AA35AA25BA312FFAC127FA47F7EA3
7EA2807EA27E807E6C6D5EA26C6D5E137F6D6C5E616D6C5E6D6C846D6C16FB6D6DDA03F3
13FC01006DDA07E313FF6E6CDA0FC3ECFF80DA1FF8EC3F83DA0FFEECFE03913A03FFC00F
FC020090B512F0033F14C003070200EDC0009226007FF002F8C8FC59807AFD65>I<EEFF
F0030F13FF037F14E04AB612F802079038803FFC913A1FFC0007FFDA3FF001017FDAFFE0
6D13E0490180EC3FF04990C86C7E494882010F707E4948150749488249486F138013FF4A
6F13C05A48496F13E0A25A4A17F048187FA24890CA13F8A348183FA21AFC485AA5BBFCA3
1AF849CCFCA9127FA37F7EA37EA2806C19381A7C6C7FA26C19F8806CF001F06C7F6EEE03
E0137F6D6CEE07C06D6C160F6D6CEE1F806D6DED3F006D6D157E6D6D5D6D6DEC03F8DA3F
FCEC0FF06EB46CEB3FE002079039F003FF806E90B6C7FC020015FC031F14F00303148092
26003FF8C8FC46537BD051>I<EE03FF043F13E093B512F803038092390FFE01FF923A1F
F8007F80DB3FE0EBFFC09238FFC0034A494813E04A13004A484913F05D140F4A5AA24A5A
7113E0147F4B6D13C002FF02001300187E95C7FC5D5BB3A9B9FCA6D8000101E0C9FCB3B3
B3A9497F497F011F13FF007FB712F8A514E13C807BFF38>I<F207F8F27FFCDB03FF4AB5
FC033F01F0010714804AB500FE90381FF81F0207913BFF803F803FC0021F9239E0FE007F
91263FFE01D9F1F8EBFFE0913BFFF0003FFFE04901C0010F5B49496D5B4990C76CED7FC0
49486E7F49486E6DEB1F001B0E49486F6C90C7FC017F834A153F01FF83A248844A151FA3
4884A96C60A36E153F6C60A2017F5F6E157F013F5F6D6C4B5AA26D6C4A5B6D6C4A5B6D6D
4990C9FC6F495A4901F0EB3FFC903B0FBFFE01FFF0021FB65AD91F071580D91E014ACAFC
90263E003F13F0030390CBFC92CDFC5BA4137E13FEA3137F80A28080EB3FFC91B712F06D
EEFFC019FC6D17FF6D18C06D18F06D18FC6D8486010785011F85D93FF8C8000F80D9FFC0
DB007F7F4890CA120F484805017F4848EF007F4848727E001F191F4848727E5B007F1907
875B00FF85A76C6C4E5AA36C6C4E5A6C6C4E5A6D183F6C6C4E5A6C6C4E5A6C6D4C5B6C6D
4C5B6C01F0040F90C7FCD93FFCEE3FFC6DB46C4AB45A010701F0020F13E001019026FF80
01B512806D6C90B648C8FC021F16F8020316C0DA003F02FCC9FC030091CAFC53787BD15B
>I<EC0FC048B5FCB6FCA6C67E131F1307A27FB3B0943801FFE0050F13FF057F14C04CB6
12F04C48C67FDC0FF0EB1FFEDC1F806D7E043EC76C7F4C6E7F4C80DBC1F082EDC3E0DBC7
C06E7F5E03CFC97F15DF03DE167F15FC875DA35DA45DB3B3A9496D4C7E496D4B7F013F01
FE030714C0B8D8801FB712F0A502C1EFF83F5C7E7BFD65>I<EB01F0EB07FCEB1FFF497F
A2497FA290B57EA56D5BA26D5BA26D90C7FCEB07FCEB01F090C9FCB3A5EC0FC048B5FC12
7FA6C67E130F7FA27FB3B3B3A5497F5B013F13FCB712FEA514C3277A7AF933>I<163EEE
FF80030313E04B13F0A24B13F8A24B13FCA56F13F8A26F13F0A26F13E003001380EE3E00
93C7FCB3A5EE01FCED7FFF021FB5FCA6EC000F150181167FA2163FB3B3B3B3A9EA07F048
6C15F8EA3FFE167F487E17F0B57E17E016FF17C0A24A4813806C1600495B6C485C6C4849
5A01E0495AD807F0495A6CB4EB7FC06C90B55A6C6C49C7FC010F13F8010113C02E9F88F9
38>I<EC0FC048B5FCB6FCA6C67E131F1307A27FB3B2953A3FFFFC7FE097B5FCA5060FEC
FC00060314C07291C7FC1AF81AE06297C8FC4E5A19F84E5A4E5A4E5A4E5A067EC9FC4D5A
4D5A4D5A4D5A4D5A4D5A057ECAFC4C5A4C5A4C7E4C7E4C7E5E93B57E03C18015C3DBC7F3
7FDBCFE17FDBDFC17FEDFF004B6D7E4B6D7E5D4B6D7E4B6D7F5D717F717F717FA2717F72
7EA2727E727E727FA2727F727FA2727F727F737EA2737E86737F8787496D83496D4B13FC
013F01FC92B6FCB8010F15FEA502C3EFFE3F577E7BFD60>I<EC0FC048B5FCB6FCA6C67E
131F1307A27FB3B3B3B3B3AF497F497F013F13FCB8FCA514C3287E7AFD33>I<DA1FC090
2601FFE0EE7FF80003B5021F01FE0307B57EB6027F6D6C021F14E04CB600E0027F14F84C
48C66D9139FF803FFCDC0FE0D93FFC903A03F8000FFFDC1F80D90FFED907E001037F043E
C76DD90F8081C64B6E6D48C76C7F011F4A6E023E800107D9C1F0704882DBC3E05F6DD9C7
C06ED9E1F06F7EDBCF80EEE3E093C8DAF3C08203DEEFF78073183F03FC05FFC9FC8D4B5F
A34B5FA44B5FB3B3A9496D4B6D4C7E496D4B6D93B57E013F01FE030F6D6C020314E0B8D8
803FB7D8E00FB712F8A502C1DDF07FEEFC1F8D507ACF98>I<DA0FC0903801FFE048B502
0F13FFB6027F14C04CB612F04C48C67FDC0FF0EB1FFEDC1F806D7E043EC76C7FC66C4A6E
7F011F4A800107D9C1F082EDC3E06DD9C7C06E7F5E03CFC97F15DF03DE167F15FC875DA3
5DA45DB3B3A9496D4C7E496D4B7F013F01FE030714C0B8D8801FB712F0A502C1EFF83F5C
507BCF65>I<EE3FFC0307B512E0031F14F892B7FC0203D9E00713C0020F90C713F0DA1F
F8EC1FF8DA7FF0EC0FFEDAFFC0EC03FF49496E7F4990C97F4948707E4948707E4948707E
4948707E017F844948707EA24849701380481AC04A82481AE0A2481AF091CBFC481AF8A3
481AFC49187FA2007F1AFEA500FF1AFFAD007F1AFEA36D18FF6C1AFCA46C1AF86E5E6C1A
F0A26C1AE06E5E6C1AC06E5E6C1A806C6D4C1300017F606E161F6D6C4C5A6D6C4C5A6D6C
4C5A6D6D4A5B6D6D4A5B6D01F0020F5B6D6C6C4A48C7FC6EB4ECFFFC020FD9E00713F002
0390B612C0020093C8FC033F14FC030714E09226003FFCC9FC50537BD05B>I<DA0FC090
3807FF8048B5023F13F8B649B6FC040715C0041F15F093263FF8037F933AFF80007FFEDB
C1FEC7EA1FFFC66CD9C3F8020713C0010FD9C7E06E7F6DD9CFC06E7F6DD9DF806E7F03FF
C96C7E4B707E4B834B707F4B82884B707FA2747FA2747FA28886A2881B7FA288A3871D80
AD1D00A263A364A21BFF64A2505BA264626462646F4C5BA26F4C90C7FC505A6F5F6F4C5A
6F4C5A704A5BDBEFC04A5BDBE7E04A90C8FCDBE3F04A5ADBE1FCEC3FFCDBE0FFECFFF093
263FE00F13C070B6C9FC040714FC040014E0DD1FFCCAFC94CCFCB3A6497F497F013F13FE
B87EA514C159737BCF65>I<DC3FF8EC01E00303B51403031F14E092B66C1307020315FC
4A9038F003FE021F902680007F130F4A48C7EA1FC0DAFFF891380FE01F49491407494991
3801F03F494915F84949EC00FC4990C9EA7C7F4948163E494817FF01FF835C4849825A4A
825AA2484982A2485B855AA291CAFC5AA45B12FFAC127FA27FA37EA2807EA36C7F617E80
6C606C7F616C7F017F5F6D6C5E80011F5F6D6C16FB6D6DEC01F36D6DEC03E301006DEC07
C36E6CEC1F83DA1FFCEC3F036EB4EB01FE02039038E00FF8020090B512F0033F14C00307
14009238007FF093C8FCB3A64F7F4F7F073F13FE95B81280A51AC159737ACF60>I<DA1F
80EB3FE00003B5903801FFF8B6010713FE4CEBFF8093393FC07FC093397E00FFE0EEF801
922681F00313F0C66CEB83E0011F4A4813F80107EB8780158F6D1400159E7113F015BC71
13E003F86D13C0F03F0095C7FC5DA45DA65DB3B3A5497F497F013F13FEB812E0A514C33D
507BCF47>I<912603FFE0130C027F01FE133E0103B6EA807E010FEDE0FE903A1FFC001F
F9D97FC0EB01FF49C8127FD803FC151F4848150F49150748481503485A1701003F16005B
127F187EA212FF183EA27FA27FA27F6D161CD87FFE93C7FC6D7E14E06C13FEECFFF06CEC
FF806C15FCEEFF806C16E06C16F86C16FE6C6C816D16C0010F82010382010082023F8114
03DA001F80030080160704001480173F7113C00070160700F8827113E0A26C82187FA36C
173FA37E19C0A27FA26DEE7F80A26D17006D5E6D5E4D5A6D15036D4B5AD9DF804A5AD98F
C0EC3FE0D907F8ECFF8026FE01FF010F90C7FC486C90B512FC48013F14F0020F14800060
010001F8C8FC3B537AD048>I<EC01F0A81403A61407A3140FA3141FA3143FA2147F14FF
A25B5B5B5B5B137F48B812FC120FB9FCA4D8000101F0C9FCB3B3A3F00F80B16DEE1F0081
A2147F183E81023F153C6F147C021F5D6E7E6E6D485A6EEBC0036E9038F01FE06E90B55A
033F91C7FC6F5B030313F89238003FE039727DEF47>I<DA0FE0EE01FC48B5EE3FFFB603
1FB5FCA6C66CEE000F011F170301071700A26D187FB3B3A91AFFA461A36D5FA2F107BF7F
6FED0F3F191F027F041E7F6E6C153C077C6D7E6E6C03F814E06E6CDA01F0ECFFF06E6CEC
07E06E01C0EB1FC0020001F8EBFF006FB55A031F14F8030302E0EDFC00DB001F90C790C8
FC5C527BCF65>I<B5260FFFFC913A1FFFC7FF8091B594B5FCA5C66C91C80003ECF00001
0F01F8030014806D49DC3FFEC7FC6D19F8745A6D611A0F6F5F6D616F161F027F95C8FCA2
6F5E023F173E6F167E6E177CA27015FC6E5F7014016E5FA27014036E5F7014076E5FA270
140F6E5F82037F4BC9FCA2705C033F153E826F5DA27113FC6F5D8318016F5DEFE0036F5D
17F018076F5DEFF80F6F5D17FC181F047F91CAFC715A043F133E17FF187E70137C18FC70
5BA3705BA2705BA3705BA2705BA371CBFCA2173E59507DCD60>I<2BFFFE1FFFF80FFFC3
B5903A07FFFC7FF090B692B692B5FCA5C64AC7000F0280D9007FEBFE00011F01F0020149
C8000F13F06D496E496F5B6D71486F13804B7490C7FC816D053F705A745E816D051F5F86
6F1A016D725E616F1A03027F725D616E6C505A8796B5150F6E6C03F95F87700101171F6E
04F094C8FC877001035F6EDCE07F153E87700107177E6EDCC03F157C877090260F801F15
FC6E725C181F70DA000F14016E725C606F6C013E6D4A5A1C80067E16076F6C017C6D5D1C
C07001FC160F6F4A6D5D1CE00581171F6F4A6D92C9FC1CF005C35F6F4A027F133E1CF8DD
E7C0023F137E6FF0FC7C17EFDDFF80021F13FC6F725AA26F91C86C6C5AA370486F5BA370
486F5BA370486F5BA370486F90CAFCA24D820407177E7048163C7C507DCD83>I<287FFF
0FFFFC903A01FFFE1FFF91B593B6FCA5D8001F02E06D6C14C001030280021F01FCC7FC01
0091C86C13E06E188050C8FC6E5F6E6D5D6E6D5D6E5F704A5A6E6D5D6E6D4AC9FC6E167E
7014FE6F6C495A6F6C5C6F4A5A71485A6FEBC00F6F6D485A6F5D7148CAFC6FEBF87E6FEB
FCFE047F5BEFFFF8705B82705B60707F707F707FA2707F4C7F4C7F5E4C8005CF7FDC1F87
7FEE3F03047F80DC7E017F4C6C7F4B48137F0303814B486D7E4C6D7F4B487F4B4881033F
6E7F4BC76C7F037E804B824A486E7F0203707E4A48153F020F83021F707F023F707F027F
84EB01FF010785013F6D4B13FC0003B500FE037FEBFF80B76C0103B712E0A5D9F87F180F
5B4E7ECD60>I<B5260FFFFC913A1FFFC7FF8091B594B5FCA5C66C91C80003ECF000010F
01FC030014806D49DC3FFEC7FC6D4917F8745A6D616F5F6D180F505A81027F95C8FC6F5E
023F173EA26F167E6E177C7015FC6E5FA27014016E5F7014036E5F8219076E5F70140F6E
5F82191F037F93C9FC705C033F153E70147E6F157CA27113FC6F5DEFC0016F5DA2EFE003
6F5DEFF0076F5DA2EFF80F6F5DEFFC1F047F91CAFC17FE60043F133EEFFF7E70137C18FC
A2705BA2705BA2705BA3705BA2705BA371CBFCA2173EA2177E177C17FC5FA216015F1603
5FA216075F160FD807F85D486C141F486C92CCFC487E5E486D133E167E167C5E15015EEC
00036C4A5A49495AD81FF8495A01E049CDFC6C48137E3907F001FC3903FC07F86CB55A6C
14C0013F90CEFCEB07F859737DCD60>I<000FBA12C01AE0A34AC8001F13C002E0178091
C9481300D81FFC5E494C5A495F494B5B5F494B5B61495D4D5B6190C94890C7FC5F4D5A60
4C5B485D003E4B5B604C5B5E4C5B95C8FCC95A4C5A5F4B5B5D4B5B5F4B5B5D4B5B94C9FC
4B5A15FF4A5B5E4A49EC01F05C4A5B5E5C4A49140393C813E04A5A14FF495B5D495B4917
07495B5D495B49170F4990C913C05C01FF171F485B4A163F4849167F4818FF48495D4A5D
4849150F48177F4890C80007B5128091B9FCBBFCA37E444E7BCD51>I<BE12C0A45A0480
B15B>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmmi12 17.28 1
/Fm 1 62 df[<F607C0F60FE0F61FF0A2F63FF8A21E7F1FF0A21EFF1FE0A2651FC0A265
1F80A2651F006566A21D1F66A21D3F66A21D7F66A21DFF66A264666466A2649BC7FCA264
65A21C1F65A21C3F651C7F65A21CFF65A26365A26365A2639AC8FCA263641B1F64A21B3F
64A21B7F64A21BFF64A262646264A26299C9FCA26263A21A1F63A21A3F63A21A7F631AFF
63A26163A26163A26198CAFCA26162191F62A2193F62A2197F62A219FF62A26062A26062
6097CBFCA26061A2181F61A2183F61A2187F6118FF61A25F61A25F61A25F96CCFCA25F60
171F60A2173F60A2177F60A217FF60A25E60A25E605E95CDFCA25E5FA2161F5FA2163F5F
A2167F5F16FF5FA25D5FA25D5FA25D94CEFCA25D5EA2151F5E153F5EA2157F5EA215FF5E
A25C5EA25C5E5C93CFFCA25C5DA2141F5DA2143F5DA2147F5DA214FF5D5B5DA25B5DA25B
92D0FCA25B5CA2131F5C133F5CA2137F5CA213FF5CA25A5CA25A5CA25A91D1FC5A5BA212
1F5BA2123F5BA2127F5BA212FF5BA26C5AA26C5A6CD2FC>109 287
113 342 140 61 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmr12 12 2
/Fn 2 53 df[<EE7FFE030FB512F0037F14FE4AB77E020F16F04AD9800F7FDA7FF0C713
FEDAFF80EC3FFF4948C86C13C0D907F803077FD90FE06F7F49486F7F49C980013E707F49
8401FC834985485AD9FFC0707F4813F06E84805A6E707FA77E4A5E6C5B6C49606D5AEB1F
8090CBFC636163A396B5C7FC62A24E5B6260624E5B624E5B4E90C8FC4E5A61F0FFF04D5B
4D1380050F90C9FCEF7FFC93B512F0037F148092B548CAFCEFFFF06F14FE92C7380FFF80
050113F0716C7EF01FFE726C7E06037F727F867213FC737E86737FA2737F87737FA287A2
737FA287A28785A31C80A2EA03FCEA0FFF487F487FA2487FB57EA31C00A3615C636C5B4A
6091CAFCD83FFC5F0160611380001F4E5B6D61000F606C6C616D4D5B6C6C96C7FC6C6C94
B5FC6C6C4C5BD97F805F6D6C4B5BD91FF04B5BD90FFC031F13C06DB46C027F5B010101F0
49B5C8FC6D9026FF800F13FC023F90B65A020F16E002031680DA007F02FCC9FC030F14E0
9226007FFCCAFC>81 136 120 259 98 51 D[<F103C04F7E190F191FA2193F197FA219
FF60A260A26060A26060A26095B5FC18FBEF01F3170318E3EF07C3170F1883EF1F03173F
173E177C17FC17F8EE01F0160317E0EE07C0160F1780EE1F005E163E5EA25E4B5AA24B5A
4B5AA24B5A151F93C7FC153E157E157C5D14015D4A5A14075D4A5A141F92C8FC143E147E
147C5C13015C495A13075C495A131F91C9FC133EA25B5BA2485A12035B485A120F5B48CA
FC5A123E5A12FCBD12FEA6CB000701E0C7FCB3A64E7FA24E7F4DB67E043FB812FCA6>87
134 123 261 98 I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmr17 17.28 14
/Fo 14 117 df[<EF01E04D7E1707170F171F173F177F17FF1603160F5E167F4BB5FC15
0F153F4AB6FC141F0107B7FCB9FC169FEDFE1F15F015C0ECFE0014E001F8C7FCC9FCB3B3
B3B3B3B3B3B3A54C7FA24C7FA24BB6FC030715C00203B87E003FBC12FCA8>86
190 104 317 132 49 D<137E3801FF80000713E04813F04813F84813FCA24813FEA2B6
FCA66C13FEA26C13FCA26C13F86C13F06C13E00001138038007E0090C7FCB3B3B3B3A413
7E3801FF80000713E04813F04813F84813FCA24813FEA2B6FCA66C13FEA26C13FCA26C13
F86C13F06C13E00001138038007E00187C69FB48>58 D[<1D3E1D7F537EA3527FA3527F
A3527FA3527FA2527FA3527FA3527FA399B67EA351811CFB1CF90903811CF1E107F080A2
527E090F811CC089091F811C8089093F811C008951811B7E8909FE826389080183517F08
03836389080783638A080F83638A081F83638A083F8398C8FC8A5083087E8108FE84628A
070185628A070385628A070785628B070F85628B071F855082073F8597CAFC8B4F85197E
8B07FE86618B060187618B060387618B0607874F84060F87618C061F87618C063F8796CC
FC8C4E87187E8C06FE88608C0501894E85050389608C0507896095BEFC4D89A34D89A34D
8995CE121F8D4D89057E8705FE8A5F8D04018B5F8D04038B5F8D04078B5F8E040F8B5F8E
041F8B4D88043F8B94D0FC8E4C8B167E8E04FE8C5E8E03018D5E8E03038D5E8E03078D4C
8A030F8D5E8F031F8D5E8F033F8D93D2FC8F4B8DA24B8B4A8F824A8C4A8F4A7F4A6D8D02
7F6D548091B56C6601036E5414FC011F02FF0C7F8048B700E00A07B712F0B800FE090FBA
1280A8>185 203 122 330 199 65 D[<BF12F0F6FFC01FFCF7FFC020F020FE7A7E21E0
D8000303FCCA000315F8D9001F02F0DD000F14FE02074A06006E7E0D1F806E4A070714F0
0D01806EE2003F13FE7A7F0E07800E01807A14F00F3F7F7B7F7B7F7B7F0F01807B807C7F
7C7F7C7F8E7C7FA17E7C7F7C808EA17F7D7F8FA17F7D7F8FA17F7D7FA27D7FA27D80A27D
80A2A16C7FA2A180A17EA180A2A16C7FA3A16C7FA3A180A17EA2A11580A2A17EA115C0A4
A115E0A17EA3A115F0A4A17EA2A115F8A8A115FCB3A4A115F8A7A115F0A15AA5A115E0A3
A15AA115C0A4A1481480A3A11500A15AA2A15CA2A1485BA3A1485BA2A15CA15AA15CA1B5
FCA15C6BA15CA25991C7FC6BA15B595BA2595BA15B6B595BA0B55AA2585C5891C8FC585B
585BA15A6A585B585B57B55A575C5791C9FC575B0F3F5B5713F056B55A565C0E0F5C0E3F
49CAFC4A9AB55A0D0314F04A6E071F5C9CB61280021F6E060F92CBFC0103B600FC4DB612
FCC212F021C056CCFC20F820C055CDFC1FE00CF0CEFC>174 196
114 323 203 68 D[<BB12E0A8D8000104F0C7FCD9000F4AC8FC6E5C6E5C6E5CA26E5CB3
B3B3B3B3B3B3B3B3A64A80A24A804A804A8049B712F0BB12E0A8>67
196 115 323 94 73 D[<B800C00803B9128083A28383A283A2C76C6EE00003EE800002
016EE1003F02F8C7FC100F14E07209031480727591C8FC03F79B38007FFC03F38003F179
5A03F06E765A8470785A707FA2706D765A8482708085827080A270808583717FA2717F85
83718086837180A271808684727FA2727F8684728087847280A272808785737FA2737F87
85738088857380A273808886747FA2747F88867480A274807480A274808987757FA2757F
89877580A275807580A275808A88767FA2767F8A887680A276808B8876808B89777FA277
7F8B897780A277808C8977808C8A787FA2787F8C8A7880A278808D8A78808D8B797FA279
7F8D8B791480A27914C022E08B7914F022F88C7A13FCA27A13FE22FF8C7A1487A27A14C7
23E78C7A14F723FF8D8DA28DA28D8DA28DA28D8DA28E4A6C8AA28E4A7E8E4A6C8A4A7E8E
027F13C091B56C89010302F889010F14FE90B700E01D7FB900E01C3FA2231FA2230F2307
A27D5A>169 196 114 323 199 78 D[<BB6C0507B91280A8D8000304E0CD0007EE8000
D9001F02FCCF6C02F8C7FC020702F00A1F14E0100714806E4A7691C8FC100013FC6E5C7D
5A7D5AA27D5AA37D5AB3B3B3B3B3B3AA80595AA283A46F1F3FA1C9FCA36F7F237EA28123
FE71658122016B6F7F585A81711C076F67220F6F6D65221F706D64223F706D51CAFC8272
1BFE706D505A8272505A706D505A701C0F706D505A716C505A734F5A716D19FF716D4E90
CBFC716D4E5A716D4E5A716DF01FF8050001FF4E5A726DEFFFE07201E004035B7201F804
0F90CCFC060701FEEE3FFE726D6C4AB45A060002F8020F13F0739026FF8001B55A071F91
B71280070795CDFC070117FC736C16F0080F168008014BCEFCE0001F14E0090049CFFC>
169 201 114 323 199 85 D<EFFFFC040FEBFFE0047F14FC0303B77E030F16E0033FD9
000F13F8DB7FF0010113FE912601FF809039003FFF804A48C8000F7FDA07F86F13F0DA0F
E003017FDA1F806F7F4ACA6C7E027E717E4A717F4948717F4948717F4948717F4A85010F
844A8549CC7FA2013E737EA2D93FFC727F49B4FC6F856F838190B56C85A2818789A56D5B
A26D5B6D5B6D5BD903FECBFCEB00F891CCFCA80803B5FC073FB6FC061FB7FC0503B8FC17
3F4CB6EA800F040FECE000047F01FCC7FC0303B512E0030F49C8FC033F13F892B512C002
0391C9FC4A13FC021F5B4A13E091B512804991CAFC495B495B4913F05B495B495B90B55A
4891CBFCA2485B5A5C5A4A1D1F5A5C5AA25C5AA4B54860A563A363A26C1AF780F201E7A2
6C6DDD03C36D143E1A076C6D1883F20F036C6DDD1E016D147C6C193E6C6D4D6C6D14F86C
6D4D6E13016C6E4B486D15F06D6DDB07E0ED80036D01F04B486D9038E00FE06D6D033FC7
6C9038F83FC0010701FE03FE6E90B512806DD9FFC0D907FC6E1500010002FCD97FF06E5C
023F90B6486E5C020704806E6C13F0020003FCC9001F13C0031F02E0DC03FEC7FC922600
7FFECEFC788175FE84>97 D<F0FFFC051FEBFFE094B612FC0407EDFF80041F16E0047FD9
800F13F8922801FFF8000113FE030701E09039003FFF804B0180020F7FDB3FFEC8000313
F04B486F7FDBFFF06F7F4A49707E020749707E4A49707F4A90CA6C7F4A48717F027F727F
4A5A4B717F49874949834949851C7F49498549864B1A8049864990CC14C0A290B57313E0
5C5A1EF0484985A2481DF8A25C4887A21EFC5A5CA25AA31EFE4887A25CA491BDFCBFFCA3
1EFC02E0CFFCAD7EA480A27EA47EA2807EA36C7FA21E1C6C1D3E807E1E7C6C7FA26D1CF8
816DF301F06D7FF503E06D7F6DF307C0816D6DF10F806D1B1F6D6DF13F006E6C193E6E6C
197E6E626E6D4D5A6E6D4D5A6E6D4D5A6E6D4D5A6E01FCEF3F806F6C4DC7FCDB1FFF17FE
6F01C0ED03F8030301F0ED0FF06F01FCED7FC06F6CB46C903803FF80041F01F8D93FFEC8
FC040790B612F8040016E0053F1580050302F8C9FCDD001F1380678179FE75>101
D[<EC0FC0EC3FF0ECFFFC497F497F4980A24980A24980A66D5CA26D5CA26D91C8FC6D5B
6D5BEC3FF0EC0FC091CAFCB3B3A3ED07E0EC3FFF48B6FC127FA8EA003F1303130080A280
A380B3B3B3B3B3A44A7FA24A7F91B57E010FECFFC0B912F0A8>52
189 119 316 72 105 D[<ED07E0EC7FFF0003B6FCB7FCA8EA003F1303130080A280A380
B3B3B3B3B3B3B3B3B3A54A7FA24A7F91B57E010FECFFC0B912FCA8>54
199 119 326 72 108 D<DB0FC092261FFF80953803FFF0DA7FFF0303B500FC067FEBFF
800007B6031FDAFF800403B612F0B7037F03F0040F15FE4EB700FC043F6F7E4ED9800F01
FF93267FF00114E0DE0FF8C76E4A48C7001F7FDE1FC0023F6DDA03F802077F4EC8000F6D
DA07E002017F06FC03036DDA1F806E6C7E4D486F6D4AC96C7ED8003FDB03E06F6D027C70
7F01034B48714A8401004B48706C4948707F6E4ACA6C4A4882051E078049846E4A716D48
48707F4D50CAFC05F87348856E4A71021E83DCC1E06204C3E0F07C854D71027883DCC780
620DF88604CFCBECF9E0A204DF1AFB04DE724A84A204FCE0FF8086A34C98CCFCA44C62A5
4C62B3B3B3B14A6D4E6D96B57EA24A6D4E6D4E8091B56C4E6E4D80010FDAFFC04CB600F8
053F14FFB900FC021FB96C0103B912F0A8CC7E77FDDE>I<93263FFFC01406030FB500FC
140F92B76C5B020716F0021F705B027F9027C0003FFE5B902601FFF8C7D803FF5B4901C0
9138007FC0D90FFEC9EA1FE1D91FF8EE07F3494870B5FCD97FC016004948834890CB7E48
48845B000785484884A2484884A2003F85A24984127FA287A212FF87A37FA36D85A27FA2
6C7E7F80806C6D180E02F895C7FC6C13FE806C14E015FC6CECFF806C15FC6CEDFFE06C16
FF6D16F06DEEFF806D17F06D17FC6D17FF6D18C06D18F06D6C83021F17FE020783020184
6E6C83030F83030083040782DC007F81050381DD001F8006011580F0003F070F14C00703
14E019007413F00070191F00F87313F886866C7313FCA2861B7F1CFE6C1A3FA21B1FA27E
A21B0FA27FA37F1CFC7FA36D1AF81B1F7F1CF07F1B3F6D1AE06D197F1CC06EF0FF808050
1300D9F3E04D5AD9F1F060D9E1F84D5AD9C0FEEF1FF0027F4D5A9026803FC0EEFFC09026
000FE003035BDA07FC030F90C7FC486DB46CEC7FFC486D01F890381FFFF86E6CB712E048
021F93C8FC030715FC48020015C00060030701F0C9FC578179FE67>115
D[<161FAA5EA75EA55EA45DA35DA25DA35DA25DA25D5DA292B5FC5CA25C5C5C5C5C5C49
B6FC5B010F92B8FC137F0007BCFCBDFCA5C891CBFCB3B3B3AAF301F0B3A76FEF03E0A283
A36F18C01B078381F30F80A26F6D1600636F7F6F173E71153C6F177C6F6D5D707E706C4A
5A706D495A706DEB0FC07001F0EB3F807001FE01FFC7FC040090B55A053F14F8050F5C05
0114C09426000FFEC8FC>84 178 125 303 102 I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmbx12 14.4 34
/Fp 34 120 df[<197819FCF003FE1807F00FFCF03FF8F07FF0F0FFE04D13C04D13804D
13004D5A4D5A173F4D5A4D5A4C5B4C5B5E4C5B4C90C7FC4C5A167F4C5A4B5BA24B5B5D4B
5B5F5D4B5B5D94C8FC92B5FC4A5BA24A5BA24A5B5C5E5C5E5CA24A5BA291B55AA25B93C9
FC5BA2495BA25B5DA25B5D5BA3495BA390B5FC5DA25AA25D5AA35AA25DA25AA492CAFC5A
A55A5CA55AA75CA3B5FCB3A87EA380A77EA5807EA57E81A47EA281A27EA37E81A27EA281
7FA36D7FA37F817FA2817FA26D7FA27F827FA26E7FA26E7FA280828082806E7FA26E7FA2
6E7F8183816F7F81836F7F816F7FA26F7F707E163F707E707F707F82707F707F717E717E
171F717E717E7113807113C07113E0F07FF0F03FF8F00FFCF007FE1803F000FC1978>63
238 102 306 105 40 D[<123C127EB47E7F6C7EEA3FF86C7E6C7E6C7E6C7F6C7F6C7F6D
7E806D7E6D7E6D7E6D7F816D7F6D7F6D7F816E7E6E7EA26E7F826E7F80826E7F8280826E
7FA26F7FA26F7F8381838183A26F7FA26F7FA2838184A26F80A28482A2848284A3707FA3
8482A284A2821980A319C0A282A219E0A48219F0A519F882A519FCA783A319FEB3A819FC
A394B5FCA719F8A55E19F0A519E05EA419C0A25EA21980A319005EA260A25E60A34C5BA3
605E60A293B5FC60A24B5CA295C7FC5D5FA24B5BA24B5BA25F5D5F5D5F4B5BA292B5C8FC
A24A5B5E5C5E4A5B5E5C4A5B5E4A90C9FCA24A5A4A5A5D495B495B495B5D4990CAFC495A
495A495A5C495A485B485B4890CBFC485A485A485AEA7FE0485A5B007ECCFC123C>63
238 113 306 105 I<EB07F8EB1FFF017F13C048B57E488048804880488081481580A248
15C0A216E0B7FC16F0A316F8A37E16FCA27EA27EA27E7E6C14FB6C14F36C6C13C3011F13
03EB07FC90C7FCED07F8A6ED0FF0A4ED1FE0A3ED3FC0A2157F1680A2EDFF00A24A5AA24A
5A14075D140F4A5A5D143F4A5A4A5A5B92C7FC495A495A495AEB3FF0495A495A485B4890
C8FC6C5A6C5A1378133026516CA24B>44 D<EB03F8EB1FFF017F13C090B57E000314F848
804880A24880481580A24815C0A3B712E0A76C15C0A36C1580A26C15006C5C7E5D00015C
6C14E06D5B011F90C7FCEB03F823236CA24B>46 D[<95B57E053F14FE0403B712E0041F
16FC047F16FF4BB912C0030718F0031F18FC037FDAE00314FF92B6C76C80020302FC021F
14E04A02F00207804A02C00201804A4A6E804A91C96C7F4A01FC041F7F91B586494A7080
494A70804C824988494A7080A2494A7080A24991CB6C7F4988A290B6874B84A2488AA248
8AA24B84488AA3488AA4488AA4484A7280A6488AAAB61D80B3B16C1F00AA6C666F60A56C
66A46C66A46C666F60A26C66A36C666F606C66A26D9AC7FCA26D6E94B55AA26D6E4C5CA2
6D6E4C5C6D64705E6D646D6E4C5C6D6E4C5C6E6D4C91C8FC6E6D4C5B6E6E92B55A6E02E0
02035C6E6E4A5C6E02FC021F5C6E02FF027F5C6E6CDAF007B6C9FC6F91B75A030F18F803
0318E003001880041F04FCCAFC040316E0DC003F4ACBFC05001480>113
160 118 284 134 48 D[<F003F0F00FF84E7E183F18FF5F1707171F177F0403B5FC160F
93B6FC150792B7FC147FBAFCA7161F15F815001480C9FCB3B3B3B3B3B3AC003FBD12FEAA
04C0C71201>95 157 108 284 134 I[<94383FFFE0040FB67E93B712FC0307EEFF8003
3F17F092B912FC020318FF020F19C0023F19F04A19FC49BB7E499126F8003F6F7E490280
0101824901F8C86C814901E0030F15F84901806F814948C9000181494870814801F0053F
814849834A87486D71814801FC718102FF834802C0866F7081486E826F866F83486E86A2
6F83B71B80A270821FC0A47515E0A36C92CAFCA26C5CA26C5CA26C5C6C5C6C5CC614806D
90CB16C0D90FF86090CDFCA21F80A2631F00A2515CA26698B6FC66A2505D666266505D9B
C7FC62505C65505C65505C97B65A654F92C8FC4F5C4F14F8644F5C4F5C4F5C4F49C9FC63
96B55A4E5C4E14C04E5C4E91CAFC4E13FC4E5B4E5B95B512C0624D91CBFC4D13FC4D5B4D
5B4D13C04D5B4D90CAEA7FE04D5A4C5B4C13F04C49EFFFC04C5B4C5B4C90CBFCEE7FFC4C
5A4B495F4B4919804B5B4B90CBFC4B48604B5A4B5A4B48604A01C01A004A5B4A90CC5A4A
48614A480607B5FC4ABDFC5C6691BDFC5B5B5B5B5B5B496490BEFC5A5A5A5A5A48655ABF
FCA566A4>107 157 115 284 134 I[<F407FC527E527E646499B5FCA2636363A2636363
63A298B6FC626262A2626262A26297B7FC6161A2616161A2F13FFBF17FF3F1FFE3601AC3
4E13834E1303F00FFE181F19FCF03FF8F07FF0F0FFE0A24D13C04D13804D13005F604D5A
4D5A4D5A17FF604C5B4C5B4C90C7FCA24C5A4C5A4C5A167F5F4C5A4B5B4B5B5D94C8FC4B
5A4B5A4B5AA24B5A4B5A4A5B5C5E4A90C9FC4A5A4A5A143F5D4A5A4A5A5B5D495B4990CA
FC495A131F5C495A495A495A5A5C485B4890CBFC5A5B485A485A485A12FF90C012FEABCD
000F92C8FCB3A9053FBB12FEAA08FCC71207>119 157 121 284
134 52 D[<496C1A0CD903E01A7ED907FC4FB4FCDAFF80180F03F095B5FC03FF170F04F8
4BB55ADCFFF091B65A94B9FC656565A265659AC8FC646464641CC06499C9FC631BF8631B
C098CAFC1AFC1AF01AC097CBFC19F86F1580030302F8CCFC92D0FCB3A6943803FFFE057F
EBFFF80403B7FC041F16E093B812FC030317FF030F18C04B18F0037F9026FC001F8092B5
0080010314FE04F8C88004E0033F8004806F14E04BC96C8003F870804B70804B70804B85
92CBFC4A878A4A72806D5A6D488790CDFC75808AA28AA38A87A21F80A31FC0A51FE0A2EB
1FF0EB7FFC48B5FC48804880488048804880A24880A2B67EA21FC0A51F805DA26C501500
5D5D665D6C4A624B5F6C49CB5D14F802C0636C48CCB6FC666C6C4E5D6C7F6E4D5D6C6D98
C7FC6C6D4D5C6E4D5C6D6C626DB4053F5C6D6D4C5C6D01E093B65A6D01F803035D6D01FF
030F92C8FC6D02E0027F5C6D02FF0107B612F8023F91B85A6E19C06E96C9FC020318FC02
0018F0033F1780030F4CCAFC030116E0DB003F4ACBFC040191CCFC>107
160 115 284 134 I[<4DB5FC94B612F8040FEDFF80047F16E04BB812FC030717FF031F
18C0037F8492BA12F80203DBC003804A02FCC76C13FF021F02E0021F804A02806E804A91
C800038091B5486F80494A6F80494A707F494A707F494A844985494A854973805E90B671
804889A24892CA6C805A8A5A8AA24874805D5A1F80A21FC05AA21FE0A3B6FC1FF087A31F
F8A61FFCA6637EA31FFEA27EA263A27EA26F5F7EA27E637E7E705E7E6D61A26D6E5E6D19
7E6D6E16FE6D4E5A6D6E15036D6E5E6D6E4B5A6E6DED1FE06E6D033F16FC6E02C04A5A6E
02F0903803FF80020302FF011F5B6E92B55A6E6C5E031F5E030716E003014C16F8DB003F
92C7FC040714F8DC001F13C094C95A1FF0A41FE0A41FC0A2631F80EC7FC0902601FFF01B
00010713FC497F496D4D5C4980496E61A290B66C4C5CA2486F616366666366639BC7FC4C
93B55A656C4B5D505C4C606D91C9485C4B4C5C4B4C5C6D01F04C91C8FC03C093B55A6D48
C9485C6D6C6C03075C6F4B14E06D01F8037F5C6D01FF0203B65A6D02F8013F4AC9FC6D91
B85A6E18F06E18C0020F95CAFC6E17FC020117F06E6C1680030F03FCCBFC030115C0DB00
0701F0CCFC>111 160 117 284 134 57 D<EB03F8EB1FFF017F13C090B57E4814F80007
80815A4880481580A24815C0A3B712E0A76C15C0A36C1580A26C15006C5CA26C5C6C5CC6
14E06D5B011F90C7FCEB03F890C9FCB3B2EB03F8EB1FFF017F13C090B57E000314F84880
4880A24880481580A24815C0A3B712E0A76C15C0A36C1580A26C15006C5C7E5D00015C6C
14E06D5B011F90C7FCEB03F8236A6CE94B>I[<B600F00203B600C00207B66C021FB512FE
92BA96B9FCAAC86C0380CD000303FCC8FCB3B3B3A896C0FCAB0780CD1203B3B3B3AFBD00
C00207BC12FEAA03F0C700030A80C7121F>191 164 119 291 210
72 D[<BA6C0E1FB912F007E0207FA2739DBAFC7367A37367A27367A2C86C6FE50FFB03E0
C8FCA204F76FF61FF3A304F36FF63FE3A204F16FF67FC3A204F06FF6FF83A2716E531303
A3716EF503FEA2716EF507FCA2716EF50FF8A2716FF41FF0A2716FF43FE0A3716FF47FC0
A2716FF4FF80A2726E511300A2726E515AA3726E515AA2726E515AA2726F505AA2726F50
5AA3726F505AA2726F505AA2736E4F90C7FCA2736E4F5AA2736E4F5AA3736E4F5AA2736F
4E5AA2736F4E5AA2736F4E5AA3736F4E5AA2746E4D90C8FCA2746E4D5AA2746E4D5AA374
6E4D5AA2746F4C5AA2746F4C5AA2746F4C5AA2746F4C5AA3756E4B90C9FCA2756E4B5AA2
756E4B5AA2756E4B5AA3756F4A5AA2756F4A5AA2756F4A5AA2756F4A5AA3766E4990CAFC
A2766E495AA2766E495AA2766E495AA2766F485AA3766F485AA2766F485AA2766F485AA2
7702F990CBFCA377ECFFFEA2775DA2775DA2775DA3775DA2775DA2775DA27891CCFCA278
5BA24B7E027FD9FFF0725BBA00F80B07BC12F0785BA2785BA2785BA3785B785B02F8C774
CA93C87E>236 164 119 291 255 77 D[<C012E0F7FFC020FEF8FFE021FCF9FF8022E0
22F822FE7C7E23E0C86C92CA003F820C00820D1F15FE0D03810D00820E3F817A810E0781
7A817A817A81A27B807B1580A27B15C0A2A113E08DA113F0A2A113F8A28DA113FCA5A113
FEADA113FCA4A113F8A269A113F0A3A113E069A113C0A1138069A11300699EB65AA15A56
5D565D565D0E1F5D565D9DB7C7FC0D035D0D1F15F89CB75A0C3F16C096BD5A58C8FC22F8
22C09FC9FC21F821800EF8CAFC55CBFC0780D1FCB3B3B3A8BD12C0AA03F0C71203>159
164 119 291 184 80 D[<BF12E0F6FFE0F7FF8020F820FF21F021FCF9FF8022E022F822
FEC86C92C9000382E3000F16C00C0016F00D1F810D07810D0181796C6E7E7A817A818C7A
817A817A81A17E8CA17E8DA17FA27B81A2A17FA37B81A4A17FABA15BA4575DA2A15BA2A1
5B69A190CAFCA29EB65AA15A68A15A565D565D565D565D5692CBFC9DB612FC555D0D0715
E00D3F5D54B7CCFC0C1F15FC0B07B712F096BC12C057CDFC21F821C00EFCCEFC8C7A7E21
F096C9001F15FC0B0181776C6E7E0C1F15E00C078178810C008179807980798179818F8B
8F7981A27981A27981A28FA28CA2A17EA8A17EABA17EA8A1EE01E0A16CED07F8A2A1EE0F
FC8CA2A17E8CA1161FA117F87A81A27A6F153F7A1AF0A16C157F7A1AE0BD6C6F7014FF7B
6F4913C07B6F4913807B6F5B7B03FC011F13000F0303FFEB7FFE7B93B55A7B6C5F101F5F
10035F03F0C70007E1007F1680D6000F4BC7FCE9007F14F8A1D8007F13C0>190
167 119 291 201 82 D[<0007C5B41280A648A113C0A594C8001F03E0C7120304C0F400
0F4BC91A0103F0F6003F03C01F0F4B8B4849CA090114E04A8C4A8D4A8D4A8D4A8DA24A8D
91CB88A2498EA2003FA113F0498EA349237FA449233FA3007FA113F8A349231FA800FFA1
13FC49230FA5CD9AC7FCB3B3B3B3B3A44BBF12FEAA08E0C8121F>166
162 118 289 187 84 D<4CB512FC4BB712F0031F16FF92B912E0020318FC020F18FF02
3F19C091BB12F0494AC76C14FC4991C8000780496E02006E7E496E6F8070031F80497280
706F80496E6F8074804972808275808A878AA275806D5C8AA26D5C6D4A828A6D5C010191
CAFC6D5BEC3FF8EC0FE091CCFCA950B6FC96B8FC187F051FB9FC0403BAFC161F4BBBFC03
0FEEFC0F033FEDFC004AB71280020703F8C7FC021F1580027F4AC8FC91B612F0010315C0
4992C9FC011F14FC495C495C90B65A485D485D93CAFC485C5A5D485C5AA25D5AA25DB6FC
A463A363A26C806398B6FC6C6E17FD1A016C6EEE03F96FDC07F1806C070F816C6EDC3FE1
15C06C03C0DB7FC115FC6C6F912601FF8092B5FC6C03F802074917806D02FEDA3FFE6D16
C06D913AFFE003FFFC010F92B600F07F01034E7F010006807F023F94C71203020704FC14
00020004E0031F1580030F92C900011500DB001F01F093CAFC7A6D78EB83>97
D[<4BB47E013FB6FCB8FCABEA001F13037FA27FB3B3A697381FFFE00703B67E071F15F8
96B8FC060717C0061F17F0067F17FE95BAFC0583DAC00315C0058701F8C7003F14F0059F
01C002078005BF90C8000180DDFFFC6F14FF06F0043F804E70800680708095CA6C804D71
804D71805F4D71804D864D7280A278808DA27880A28DA27880A38DA38D8AA22280A622C0
B02280A52200A266A269A369A2545CA269A2545CA26966697195B6C7FC716265714D5C71
62714D5C714D5C724C5C04FD6D4C5C04F86D93B6C8FC9326F07FF84B5C9326E03FFE0307
14F84C6C6C6C021F5CDC800701F091B612C07101FF010F5D4C6C91B748C9FC4B6D6C17F8
4B021F17E04B020717804B020104FCCAFC4B6E6C15E04B030F02FCCBFC91CB6C90CCFC>
130 167 119 293 149 I<95387FFFFC051FB612FC4CB812C0040F17F8047F17FE4BBA7E
030719E0031F19F8037F8592B626F000018002030380D9000F7F4A02FCC8481480021F02
F05D4A02C018C04A4A5D91B6C9B612E0495C494A19F0494A5D495C5B5E495C5B5E90B670
15E05A93CAFC487414C0751480485C75140048080713FC755B4B050013E048F33F8099C8
FCA25AA35D5AA5B6FCB07EA381A27EA47E81A27EA26C80F501F86CF403FC70F007FE7EF5
0FFC6C81A26D6EF01FF86D6E183F1EF06D6E187F6D6EF0FFE06D6E19C06D626D6E6C4C13
806D6F040F13006E6E4C5A6E02F8EE7FFC6E02FE4C5A6E6E6C02075B020303F0023F5B6E
03FF0107B55A6E6C92B7C7FC031F60030718F8030118E06F6C1780040F4CC8FC040116F0
DC001F92C9FCDD007F13C0676D77EB78>I[<F7FFC00A1FB6FC097FB7FCABF3000F1C0188
A289B3B3A695383FFF80051FB512FC4CB77E040F16F0047F16FC4BB9FC030718C0031F18
F0037F9126FC001F13F892B600C0010113FC02034AC8EA3FFF4A02F8030F90B6FC021F02
E015034A4A814A91CA7E91B54883494A83494A83494A834986494A834C835B495C90B6FC
93CCFC5AA2485CA25AA2485CA25AA35AA25DA25AA5B6FCB07EA67EA2817EA37EA36C80A2
7EA26C80A27E6D6E5F646D806D626D6E5F646D6E5F6D6E5F6D6E94B77E6D6E16036E6D4C
82021F02C0031F16FE6E6EDB7FFE92B512C06E02F8913801FFF86E02FF020F5B020003F0
90B55A033F91B71280030F4D5A03035F030017F0043F168004034BC7FCDC007F14E00501
49C802F8C8FC>130 167 119 293 149 I<95387FFFE0051FB67E4CB712F0040F16FE04
7FEEFFC00303B912F0030F18FC033F18FF4BDAF001814AB6C7001F14E0020702FC020380
4A02F06E804A02C06E6C7F4A4A6F7F4A91C9000F7F91B500FC7080494A85497380494A82
494A85497380495C767F495C90B6727F93CBFC488948874B1B805A885A4B1BC0A25A7614
E0A25AA25DA25A1FF0A388B6FCA292BDFCA51FE01FC003F8CFFCA77EA5817EA37EA36C80
A27EF60FC06FF21FE06CF53FF07E70197F6C1EE0826D1CFF6D6E4E13C01F806D6E606D6E
4E13006D6E606D6E4E5A6D6E4E5A6D6F4D5A6E6E4C485A6E02F05E6E6E040F5B6E02FE04
3F5B0203DAFFC092B5C7FC6E03F802075B6E6CDAFFC090B55A6F92B712F0030F61030319
8003004EC8FC041F17F8040317C0DC007F4BC9FC050315E0DD000F01F8CAFC6C6D79EB7B
>I[<4BB47E013FB6FCB8FCABEA001F13037FA27FB3B3A698387FFF80080FB512FC087FEC
FF804FB712F0070716FC071F82077F707E96B97E060349C66C804E01E0010F804E90C76C
80DE1FF86E80DE3FE06E804E5A4EC980EF81FEDD83FC85DD87F8824E85EF8FE0EF9FC04E
8505BF8305FFCAFC5FA24D86A25FA25FA35FA55FB3B3B3A4BA00C0013FB912F0AA9126F0
000306FCC7FC>132 166 118 293 149 104 D[<EC03F8EC1FFF027F13C049B512F04980
49804980A249804981A24981A290B77EA96D5DA26D5DA26D92C7FC6D5CA26D5C6D5C6D5C
6D6C13C0021F90C8FCEC03F891CAFCB3A74BB47E011FB6FCB8FCABEA001F13037F7FB3B3
B3B3A8BAFCAA9138F00007>56 167 118 294 74 I[<4BB47E013FB6FCB8FCABEA001F13
037FA27FB3B3A70907B5398001FFC09BB6FCAAE1001F02F8C7FC0A0349C8FC1EF8525B52
5B525B0A7F90C9FC525A515B515B090F5B5113C0515B5190CAFC50485A5013F8505B505B
083F5B5090CBFC505A4F5B4F5B070F13E04F5B4F5B4F90CCFC4E485A4E5B4E7F4E7F063F
806095B67E058181058381178F059F8105BF8194B77EA28706F78106E78118C30601814D
6C814D6D804D8205E07F4D6D804D6D8094C7828573817381898574807480748089867481
74818A86748175808A87758075807581A27581758175818B88768076808B0A7F15C0BA02
3FB9FCAA9126E000074EC7FC>128 166 119 293 142 107 D[<4BB47E013FB6FCB8FCAB
EA001F13037FA27FB3B3B3B3B3B3B3ACBA1280AA9138F00007>57
166 118 293 74 I<4BB46C92263FFFC0953807FFF8011FB60303B6067FEBFFE0B8031F
03E00403B612FC97B700F8041F15FF070304FE047F16C0070F706C4AB812F0073F05E002
0717FC4F714A8396B5D8001F6E4AD9E00380060301F001076EDA7FFEC7814E018001016E
DAFFF0023F804E48C86E4901C06E80DE1FF86F4B90C87ED8000FDC3FE095268007FC8401
014C486F6E48486F806D4CC9EE1FE0DD81FE734848846EDA83FC704B48814E07F090C981
DD87F01AFEDD8FE0F1F1FC4EDFF9F885059F7102FB83DDBF80F1FFF095CA5E17FF4D5186
A24D63A24D98CAFCA34D62A54D62B3B3B3A4BA00F0011FB900FE0103BA12C0AA9126F800
0196C7003F9538E00007D26B77EAE1>I<95383FFFF8050FB612E094B712FE040FEEFFE0
043F17F84BBAFC030719C0031F19F0037F9126F8003F14FC92B60080010380020302FCC8
6C6D7E4A02F0031F80021F02C0030714F04A4A6F804A49CA8091B548717F494A717F494A
7180494A71804989494A7180A2494A7180498993CB7E90B687484A7280A2481F80A2484A
7314C0A2481FE0A3481FF0A24B85481FF8A4481FFCA6B61DFEB06C1FFCA56C1FF86F61A3
6C1FF0A36C1FE06F96B6FC6C1FC0A26C1F806F606C1F00A26C6F4D5CA26D6E4D5C6D656D
6E4D5C705F6D656D6E4D5C6D6E4D5C6D02FF4CB6C7FC6D6F4B5C6E6E4B5C021F02F0031F
14F06E02FC037F5C6EDAFF800103B65A020103F8013F92C8FC6E6C91B812FC6F61030F19
E003031980DB007F05FCC9FC040F17E0040194CAFCDC000F15E0DD003F01F8CBFC776D79
EB86>111 D<4BB46C91380FFFF0013FB64AB67EB8021F15F896B8FC060317E0060F17F8
063F17FE95BA7E058119E00587DAC00781058F01F8C76C8005BF01C0021F14FE94B5C800
0780D8001F04FC030181010304F06F816D04C070806D4C708095CA6C8005FC71804D864D
8377804D874D7181A27781A27880A28D8A8DA28A8DA37880A32280A48AA222C0B02280A2
66A32200A36669A3696669A2545CA2699BB6FC696569714D92C7FC535C83714D5C714D5C
7162714D5C724C5C7293B65A72030392C8FC06F84B5C06FE031F14F89426DFFF80027F5C
05C701F049B612C005C301FF011F5D05C191B748C9FCDDC07F17F8061F17E00607178006
0104FCCAFC726C15E0070F02FCCBFCDF007F90CCFC97CEFCB3B0BA12C0AA9138F0000382
9977EA95>I<DE7FFFEF7FC0051FB500F816FF4CB600FE5D040FEDFFC0047F04F05C4BB8
6C5C030717FE031F715C037F06C05B4AB626FE003F7F4A03E001036D5B4A038001006D5B
021F4AC8EA3FFC4A02F8DB0FFE90B5FC4A02E06F6C5A91B6486F1381494B6F13C34992CA
13E7494A177F494A71B6FC4986495C4C83498690B65A88485D88485DA2488793CCFC4888
A2485CA35A5DA35AA35DA2B6FCB07EA281A37EA46C80A37EA2817EA26C819AB6FC7E705F
6C636D80646D6E5F7F6D6E5F705F6D626D6E94B7FC6D6E5E6D6F15076E6E4B5A021F02F0
4B5A6E6EED7FF86E02FE4A485A02016E6C010F5B6E03F890B55A033F91B7C6FC030F5F03
0317F8030017E0041F1680040303FCC7FCDC003F14E0050001FCC8FC95CAFCB3B098BA12
C0AA9A38F00003829977EA8E>I<DB07FE913801FFC0017FB5030F13FCB7033F13FF96B6
12C0060315F04E81061F15FE4E8195267FFE0314809538FFF0074DD9C00F14C0DF001F14
E04D5AD8001FDB07F84914F001034B5A6D4E14F84D5A6D5E4D5AA24DC7FCA217FE7414F0
5F04FF6F14E05F7414C07414804D6E1400745B9738007FF8F30FC04D92C8FCA45FA75FB3
B3B0BA12FCAA9138F000015D6B77EA6E>I<93267FFFE0143C031FB6147E4AB738F001FF
020FEEFC07023FEEFF0F91BBFC1303010F913880003F4901F0C71201490180EC003F4948
C9120FD9FFF8824849160148498248498386485B488591CB7E5AA2865AA286A2B57EA280
A2806E715A02FC715A6E95C7FCECFFC015F06C14FF16F8EEFFE06C16FF18FC6CEFFFC019
F86C18FE737E6C19E06C19F86C19FE6C856D19C06D856D856D856D850101856D6C84021F
19801407020119C0DA003F18E01507DB003F17F01601DC000716F8EF003F060115FCF000
3F190F1903003F060014FE486C84486C8486866D84A2867F86A26D1AFCA37FA26D1AF87F
626E19F0801CE06E5F6E19C06E4D13806E5F02FF4D13006F4C5A03E04B485A03F803075B
03FF033F5B04F80107B55AD9FE3F90B81280D9FC0F95C7FCD9F00317FC496C17F09026C0
003F16C090C7000F4BC8FC007E020115E0003CDA000F01F8C9FC576D77EB6A>I[<EE1FF8
A9163FA6167FA416FFA35DA35DA25DA25DA25DA25D5DA292B5FC5C5C5C5C5C5C5C49B6FC
5B010F92B8FC137F0007BCFCBDFCA8C7001F02F8CAFCB3B3B1F33FF0B36EF07FE0A283A2
6EF0FFC0A27116806E5F80714A13006E4D5A846F6EEB1FFC6F02F0495A6F9139FE01FFF0
6F91B65A6F5F03015F6F94C7FC043F5D040F15F8040115E0DC003F1480050001FCC8FC>
84 153 123 279 105 I<922601FFC0F17FF0013FB6050FB6FCB8043FB7FCABD8001FF1
000701031A006D87A26D87B3B3B3A465A59AB6FCA3648064A2646E611DDF71161F6EF13F
9FE27F1F806E19FF6E6EDB01FE81E107FCEDFF806E6EDB0FF8EEFFF06E6EED3FF06EDAFF
80903801FFE06F02F8010F13C06F91B71280030F18006F17FC03015FDB003F16E0040F16
80040003FCC7FC050302C094C8FC846C76EA95>I<B56C90263FFFFE90263FFFC090263F
FFF8912601FFFEEB1FFE91B793B794B6FCAAD8000103C0C96C91CA0001ECF000A1D8000F
90C7FC6D6F73715A761A0FA26E6E706E4D5AA26E6E7360761A3FA26E6E706E4D5AA26E6E
7360761AFF6E6B71735E646E6F726052616EA0C8FC72725E646E6F734B5A646F69727315
1F646F6E734B5AF4FFEF6F697204C76E157F636F6E734B5A5113836F765E7204015F636F
6F724A5B51487E6F7693C9FC734A6D5E1B1F6F6F73495A51487F70765C734A6D161F1B7F
706E73495A51487F70765C734A6D167F627002FE73495A50497F70765C07FF91C76C5D62
70038772485BE08FFE80700AFF91CAFCE0CFFC6F5C1ADF7003FFF18FFE518171F4CFFC51
6F14DFA2714B6FECFFF8A271655181A2714B6F5DA2716598C97EA2714A705DA2719ACBFC
5083A2714A715BA272635083A27249715BA272635083A27249715BA27290CB6C5BDE01FE
7290CCFCB76B7BE9C2>119 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fq cmtt12 14.4 19
/Fq 19 127 df<0007BD12E0481CF0481CF8481CFC481CFEA2BFFCA46C1CFEA26C1CFC6C
1CF86C1CF06C1CE0601073D07B>45 D<131FEBFFE0000313F8487F487F487F481480A248
14C0A3B612E0A56C14C0A36C1480A26C14006C5B6C5B6C5BC613E0011FC7FC1B1B509A7B
>I[<F41F80F43FC0F47FE0F4FFF05113F8A25113FCA263A25113F8A2631DF0631DE0631D
C0A298B51280A2501400A2505BA262646264A2505BA2505BA2505BA297B5FC646199C7FC
6163A24F5BA24F5BA24F5BA261636163A296B55AA24E91C8FCA24E5BA2606260626062A2
4E5BA24E5BA295B55AA25F97C9FC5F61A24D5BA24D5BA24D5BA25F615F6194B5FC61A24C
91CAFCA24C5BA24C5BA25E605E605E60A24C5BA293B55AA24B91CBFCA25D5F5D5FA24B5B
A24B5BA24B5BA25D5F92B5FC5F5C94CCFCA24A5BA24A5BA24A5BA25C5E5C5EA24A5BA291
B55AA24991CDFCA25B5D5B5D5B5DA2495BA2495BA2495BA290B5FC5D5A92CEFCA2485BA2
485BA2485BA25A5C5A5C5A5CA2B55AA291CFFCA26C5AA26C5A6C5A6C5A6C5A>94
186 114 293 123 I[<94381FFFE00407B6FC047F15F00307B712FE031F707E92B912F0
0203844A18FE021F844A19C091BB7E498649864986499226F0001F8004FCC70001804902
E0DA003F804991C9000F8003FC16034901F070804B706C7F90B548834B717F87A2486E71
7FA26F83A2757FA36C5CA26D5BA26D90CBFC6D5AEB07F890CD485BA4515BA263A2515BA2
515BA2515B98B5FC505C625091C7FC505B1A3F97B55A07035C070F5C96B65A050FB75A04
1FB85A047F94C8FC93B85A634B17F063631BF01BFC1BFF6F18C0887083041F17FC93C800
1F80070180DF003F80080F80080380080080093F7F757F87757F757F877514807613C0A2
7613E0A2881EF088A27613F8A47613FCA313F0EA07FE487E487F487F487FA3B56C4F13F8
A4644A1BF0646C5B4A4F13E0A26E4F13C07E6E96B5FC6E4E14806C6D4E14006E606C6D4E
5B6E4E5B6C02C05F6C6E94B55A03F804035C6C02FF040F5C6C03E0033F5C6D02FC4AB6FC
6DDAFFF0011F5D6D92B848C7FC6D626D620101626D1AC0023F61020F4EC8FC0203600200
18F0033F17C003074CC9FCDB007F15F0040792CAFCDC001F13E0>102
152 118 276 123 51 D[<EA07E0EA1FF8487E487E90BE1280BF12E01EF01EF8A21EFCA4
1EF8A21EF01EE01EC091CC00031480511400515B515B65515B6C484F5B98B55A6C484E5C
6C4860D807E098C7FCCD485B505B505B6462505B97B55A644F91C8FC61634F5B61634F5B
4F5BA24F5B6396B5FC4E91C9FCA24E5B62604E5BA24E5BA24E5B62606295B5FC97CAFC5F
615F615F61A25F615F61A24D5BA25F61A294B5CBFCA34C5BA34C5BA34C5BA34C5BA35E60
A35E60A35E60A493B5FC95CCFCA45D5FA65D5FA95D5FAF6F5BA26F5B6F5B705A041ECDFC
>102 153 118 277 123 55 D<131FEBFFE0000313F8487F487F487F481480A24814C0A3
B612E0A56C14C0A36C1480A26C14006C5B6C5B6C5BC613E0011FC7FC90C8FCB3B3AD131F
EBFFE0000313F8487F487F487F481480A24814C0A3B612E0A56C14C0A36C1480A26C1400
6C5B6C5B6C5BC613E0011FC7FC1B6750E67B>58 D<050FB512E094B77E040F16F8047F16
FE4BB97E030718E0031F84037F8492BA7E0203855C4A855C5C91B600F8C7003F14804903
80140704FCC8FC4914F04914C0495C4949C96C1400495B4B705B4949705B90B548715A4B
715A484AEF0FC092CEFC485BA2485BA2485BA2485BA25C5A5CA3485BA5B5CFFCAE6C7FA5
6C7FA3807E80A26C7FA26EF001FE6C973807FF806E4E13C06C7F6F4D13E06C807E6F5F6D
6D19C003FC5F6D6D94B5FC6D6D4C14806D02C05D04F04B14006D02FC4B5B6D02FF153F6D
03E091B55A6D03FE010F5C6E91B85A6E61140F6E19806E96C7FC0200606F5F031F17F003
075F030117806F6C03FCC8FC040F15E0040192C9FCDC000F13C05B6A6FE87B>99
D[<0707B512FC071F14FF4F814F8196B7FC89A5858585190796C7121FB3AAEF3FF80407
B512C0043F14F84BB612FE0307EDFF80031F16E0037F16F092B812FC020317FE4A17FF02
1F189F4A18DF4A95B5FC91BCFC49EDE0014992C7123F4902F8140F4902E0140304801400
4991C97E4901FC824B8249498290B548824B82484A824891CAFC86485B4A84A2484984A2
484984A25C5A5CA3485BA5B5CCFCAF6C7FA56C7F63A2806C62A2806C97B5FC80626C7F62
6C7F6E5F6C6E5EA26C6E5E6F5E6D6D5E6D6D93B6FC03FE5D6D6D15076D02C05C6D02F014
3F6D02FC91B7FC9326FF800F93B512806D92B700DF15E06D079F15F06E061F15F8021F05
FE16FC6E17FC6E17F8020117E06E17C0033FEE000F6F4B17F8030703F86D15F0030003C0
6D15E0041F49C81580040001E092C9FC>110 147 120 273 123
I<94381FFF804CB512FC041FECFF80047F15F00303B712FC030F16FF4B17C0037F834AB9
12F84A844A84021F844A854A8591B6D8F000814992C7000F804902F80201804902E06E7E
494A031F7F93C96C7F4949824949707F03F070148049498290B54819C087484A834891CB
14E04A8448491AF0875C481CF84A845A5C1DFC48865CA25A5C1DFE87A2B5FC91BCFCA81D
FCA21DF81DF01DC00280CEFC7EA4807EA36C7FA2807E80F40FC06C6DF13FF0F47FF86C6D
F1FFFC806C6E4D13FE6C806F5F7F03F84D13FC6D6D5F6D6D4D13F86D6D5F04C04C13F06D
6E93B5FC6D02F8030314E06D02FF150F6D03E0027F14C06E02FE010FB612806E91B91200
6E610207616E610200616F60031F18806F4DC7FC03035F030017F0041F1680040303FCC8
FCDC007F14E0050301F8C9FC5F6A73E87B>I[<0007B512FC001F14FF48814881B7FC82A5
7E7E7E1207C7121FB3AAF11FFE4EB512E0060F14FC067F14FF4DB712C00507824D16F805
3F824D8294B9FC04E38416E704EF8493BA7EF1800706FCC78006F0143F06C08095C86C7F
5F05F8814D834D815FA25F94C96C7FA25EA25EA25EA35EA45EB3B3AF0007B86C013FB712
F8001F05E04916FE487148B9FC4805F81980B96C4818C0A261A285A26C4D6C18806C05F0
19006C4D6C6C5E000705806D16F8>114 146 124 273 123 104
D[<EE01F8EE07FE4C7E043F13C0A24C7F93B57EA24B80A66F5CA2705B705BA2040F90CA
FC705AEE01F893CCFCB3A448B8FC000717C04883845A845AA27EA27EA27E1201C91207B3
B3B3B3A30007BC1280481BE0003F1BF01CF85A1CFCBDFCA27E1CF87E1CF0000F1BE06C1B
80>86 147 109 274 123 I<EF7FFE0407B512E0043F14FC4BB77E030716E0031F16F803
7F16FE92B9FC020318C04A84021F18F84A844A8491BBFC49DBE00781494AC76C804902F8
021F804902E0020780048014014949C96C7F4949707F4B824949707F90B548707F4B8248
4A70148092CBFC48497213C0A248497213E04A84481CF04A84481CF84A84A2481CFC4A84
A348497213FEA591CDFCB51BFFAD6E60A26C1CFEA36E60A36C6D4E13FCA36C6D4E13F8A2
6E606C1CF06E60A26C6D4E13E0A26C6D95B512C06F5E6C6E4C14806F5E6C1C006D6D4C5B
6F5E6D01FE047F5B6D6D93B55A705C6D02E002075C6D02F8021F5C6D02FE027F5C6D9126
FFE007B65A6D92B8C7FC6E606E606E606E60020318C06E606E6C4CC8FC031F16F8030716
E0030116806F6C4AC9FC040714E09326007FFECAFC606A73E87B>111
D<F11FFE0007B500FC4AB512E0001F02FF021F14FC486F017FECFF80486F48B712E0B701
0716F8DCE01F824D16FF94B97E04E18404E318F06C03E7846C03EF846C92BA7E0007DE80
0780C7001F03FCC78106E0143F0680020F804DC80003804D6F804D6F7E05E0707F4D707F
884D707F94CAFC4C717F884C7114805E7713C05E891FE04C84A21FF089A37713F8A57713
FCAF5313F8A55313F0A282651FE07060A25313C0829AB512808264704D1400A2714C5B71
4C5B64714C5B714C5B7193B5FC7103035C714B5C71031F5C06C0147F06F00103B6C7FC06
FE011F5C95B85A04EF6004E76004E318C004E16004E095C8FC7116FC715E050F16E00503
1680714BC9FCDD003F14F0060714809526007FF0CAFC96CCFCB3B3A20007B87E001F17E0
48834883B97EA66C5F6C5F6C5F000717806E9D7CE77B>I<983807FFC00007B600FE93B5
12FE486F6C02076E7E003F70023F15E07191B712F84806038271010F82B8023F82616C4D
B91280606C5F4E18C0000F5F6C4DECF801C8000F4A148095B5EAFC0005F102E06D148005
F3148005F791C86C130094B512FC4F6F5A07E0ED0FF84FED03E04F92C8FC96CCFC6060A2
606060A260A260A295CDFCA25FA35FA35FA55FB3B3A40007BB7E481AE0003F86874886A2
BCFCA27EA26C6263000F626C1A806A6878E77B>114 D<93263FFFF8143E030FB600C0EB
FF8092B7D8FC017F020FEEFF81023F05E37F91B912FB010395B5FC130F5B5B90BCFC5A5A
A2489238C0000F4802F0C8FC4891C9121F02FC16074801F08202C08248498291CB7E5B86
12FF4984A67F007F735B7F6E715B6EDD01FEC7FC6C01F094C9FC14FC6C13FF6C14E015FF
6C15F86CEDFFE06CEEFF806C17FE6DEEFFF06D17FF010F18E06D18F8010118FE6D6C717E
020F18E0020184DA003F17FC030383DB001F82DC007F16C0050182EF0007DE003F800703
800700801A1F747FD80FF006037FD81FFC84486C727E007F1C80B585871DC06E84A380A3
80A26E4E138080A26E606E4E13006E95B5FC6F5E6F4C5B6F5E03F8043F5B03FE93B55ADB
FFC0140704FC49B65A93B95A646499C7FC49616E60D9FC1F18F06E60D9F803188002004D
C8FC6C48013F16F0030716806C48010003F8C9FCD80F80020349CAFC5A6A6FE87B>I[<EE
1F80EE7FE04C7E4B7FA24B7FB3A60007BDFC001F1CC048884888A2BE7EA46C64A26C646C
64000799C7FCC8000301FCCCFCB3B3AE1DFCF403FF5213805213C0A25213E0AA5213C06F
7F64A27193B512806F6E5C6306E04A1400706D021F5B06FC147F709026FFC003B55A96B7
5A706082657018807095C7FC705F706C16F8715E050F16C07193C8FC050015F8061F1480
060101F8C9FC>99 133 122 259 123 I<0007B500FC047FB512C0001F02FF4BB612F048
6F4A81486F4A81B75D7084A56C846C846C840007727EC7001FEF0001B3B3B3A563A363A2
63A263636E6D5E98B5FC705D626E6D150F04FF153F05C049B6FC6E02FC010F92B512F894
BB12FE6E886E1D8020C06F17FD6F17F96F17E16F17C1030317006F04FC17806F6C03F06D
1500041F03C06D5C040102FCC7000F14F8DC001F01C091CAFC72687CE67B>I<0007B76C
037FB612F8001F04E04AB712FE48704A8248704A1780B86C4A17C0A66C4C6E17806C4C6E
17006C4C6E5E000704806E6C15F8D8001F0180CC6C48C7FC6F19FF6D64A56F606D64A56F
606D64A56F606D64A46F606D64A2F007F8F01FFE4E7E6F4A6D5B027F92B56C5D4D80A34D
80A26E6C4E90C8FC4D80A44D806E0180023F4A5AA24D80A46E6D486E495A4E7EA3057F81
6E624E7E04E0168105FF15C1A24E7E6E6204E116E1A204F1496C13E3A36E01F304F35B4E
7EA44E7E6E01FB04F75B93B592B5FC4E7FA46F91C76C5CA34D80A26F96C9FC4D80A26F49
6E5B6F496E5B6F496E5B030101809138007FE072687CE67B>119
D[<DB3FC01678912601FFF0ED01FE020701FC4B7E021F01FF4B1380027F6E5C49B600E0
4A13C0496F5C010F6F91B5FC496F5B496F491480496F130F48B86C48140048DDC07F5B48
94B65A48624802805F4849486C5E48496D168002F06D93C7FCB5486D5D4A6D5D91C76C15
F0496E5D6C486E6C1480496F49C8FC6C48030F13F86C48030313E0D80780030090C9FC>
82 28 108 273 123 126 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fr cmbx12 17.28 23
/Fr 23 117 df<ECFF80010713F0013F13FC4913FF90B67E48814881488148814881A248
81825A1780A2B812C0A317E0A317F0A37EA217F87EA27EA27E7E7E6C15DF6C159F6D141F
6D13FE010713F00100138091C7FC163F17F0A5167FA217E0A316FF17C0A25D1780A25D17
005DA25E150F5E151F5E153F5E157F4B5AA24A5B5C5E4A90C7FC5C4A5A4A5AA24A5A4A5A
495B495B5B011F5B4990C8FC495A495A485B5C5C6C5B6D5A013EC9FC131C2D6168A85A>
44 D[<96381FFFF8060FB612F095B8FC050717E0053F17FC4CBA7E040719E0041F19F804
7F19FE4BBC7E4B9226FC003F81030F03C0010315F04B92C8814B02FC033F8092B600F003
0F14FF4A03C00303814A4B6F814A92CA814A4A71804A4A71804D834A4A71804A4A718091
B6874D83494B7181498B94CCFC498B4C85498B498BA2494A7380A2498BA24C8590B689A2
482180A34821C04C85A24821E0A44821F0A44821F8A44C854821FCA74821FEABB71EFFB3
B3A26C21FEAB6C21FCA27061A56C21F8A56C21F0A46C21E0A27061A26C21C0A36C2180A2
6C21007061A26D67A26D6770616D67A26D6E96B65AA26D67715F6D676D6F4D5D715F6D9C
C7FC6E6E4D5C715F6E6E4D5C6E656E6E4D5C6E6E94B65A6E03C003035D6E6F4B5D6E03F8
031F92C8FC6F6E4B5C031F02FF92B612F86F03E001075D6F03FE017F5D030192B912806F
6C4FC9FC7061040719E004011980706C4DCAFC050F17F0050094CBFC060F15F0DE001F01
F8CCFC>136 191 116 315 161 48 D[<1A7F963801FFC0614F7F191F6196B5FC180318
0F183F95B6FC1703171F94B7FC160F93B8FC151F020FB9FC007FBBFCBCFCA7173F16F016
0015E002F0C7FC0080C9FCCAFCB3B3B3B3B3B3B3B1001FC012C0AC4BCB1203>114
188 104 315 161 I[<95381FFFFC050FB612F894B87E040717F8043F17FF4BBA12E003
0719FC033F19FF4B1AC04ABC12F002071BFC4A1BFF023F884A9126FC001F8391B6008001
0017F04902F8C8001F82010702E00307824902800301824949CA6C8103F8051F82494971
824901C0718290B54871824891CB6C824A72824849738148498502FF73814802E01D8003
F8844802FE7216C081486F7116E0827616F04881701CF888701CFCB7FC898221FEA289A3
21FFA36C5D89A26C5DA26C5DA26C4B606C5D6C92CCFC6C5C6C4A1DFE013F13F001071380
D90078CDFC91CE5A21FCA321F89AB7FCA221F06421E0A25216C0A2521680A22100525DA2
525D68525DA2525D99B75A685193C7FC67515D515D67515D515D675192C8FC515C98B65A
1EF0505D505D505D5092C9FC5014FC65505C5014C097B65A4F92CAFC4F14FC4F5C4F5C4F
14C0644F91CBFC4F5B96B512F84E5C4E5C4E14804E91CCFC4E5B4E5B4E01F0EF0FFF95B5
5A4D5C4D5C4D91CBEA1FFE4D13FC4D5B4D5B4D5B94B55A4C91CC123F4C5B4E1AFC4C5B4C
5B4C13C04C49197F4C90CDFC4C5A4B49F2FFF84B5B4B13E04B49614B5B4B90CD5A4B5ADB
FFF8624A49071FB512F04A90BEFC5C5C5C5C5C91C0FC491FE05B5BA25B5B5B5B90C112C0
5A5A5A5A5A5A482080C2FCA72100A4>128 188 112 315 161 I[<4EB512E0067FECFFE0
050FB8FC057F17F00403B912FE041F727E047F19F04BBB12FC03071AFF4B1BC0033F1BF0
4B9126FE0003824AB60080D9003F814A02F8C8000F15FF4A02C00303824A91CA824A01FC
71814A01F071814A01C0718191B5CB6C815D4949728149D9FF808704F0834902FC88496E
8882496F70828383498B838388498B83A9646D5D69A26D5D6D5DA26D4B636D4B5E6D92CA
FC6D4A646E5B021F01F04D5E02031380DA0010CB94C7FC92CC5A68A2525D686468525D68
99B75A9DC8FC515D515D67515D515D515D097F5D98B648C9FC08035D5015F0083F5D4FB7
1280061FB748CAFC053FB812F84D17C094B9CBFC1CF81CE01CFF1DF01DFF7118E07118F8
94C8000715FFE0007F15C0090F15F0090315FC090081766E7E76817615F0768176817681
76818D76828D77818D898D8D898D2280A27716C0A222E0A322F0A28922F8A422FC903803
FFC0011F13F8017F13FE90B6FC48814881488148814881A24881A2488122F8A2B8FCA322
F065A322E0A25E5316C07E4C1D80A24C4E16007E4C646C4B4E5D5E6C4B95B75A93CC5E6C
4A606C02F86503C04E5E6C4A4E5E6C02E09AC7FC6D6D4E5D03FC063F5D6DD9FF804D5D6D
02E094B75A010702FC04035E6DDAFFC0030F5E6D03FC033F93C8FC6DDBFFF80107B75A02
3F92BA12F86E6402071CC0020199C9FC6E6C1AFC030F1AF003031A80DB007F06FCCAFC04
0718E0DC007F4CCBFC050316C0DD000702E0CCFC>134 191 115
315 161 I[<EB7FF8A3808090B57E15E0EDFFFE93B612F096BD12C0A45AA62380A24822
006A6A6A6A6AA248696A9FC7FC6969A2696948686969A29EC8FC686803FCCD00075B4801
E0CE485B5C545B4A515B545B91CFB5C9FC535BA24848515B535B535B535B49515BA2535B
007F99B5CAFC525B49505B525BA2525B525B525B4848505B99B5CBFCA2515BCE485B515B
515B6563515B515B9ACCFC98B5FC505B505BA2505B626462505BA2505B97B5FC64614F91
CDFCA26163614F5BA2616361A296B5FC6360A2606360A2606360A260A24E5CA395B6FCA2
5FA298CEFC5FA25FA35FA2625FA35FA45FA394B6FCA362A25EA55EA65EA85EB0705DA370
5DA2705D705D715C7191CFFC715B715B050313F09438007F80>138
197 110 321 161 55 D<ECFF80010713F0011F13FC017F13FF90B67E48814881488148
81A248814881A24881A3B81280A96C1600A36C5DA26C5D6C5DA26C5D6C5D6C5D6C5D6D91
C7FC011F13FC010713F00100138091C9FCB3B3AAECFF80010713F0011F13FC017F13FF90
B67E4881488148814881A248814881A24881A3B81280A96C1600A36C5DA26C5D6C5DA26C
5D6C5D6C5D6C5D6D91C7FC011F13FC010713F001001380298068FF5A>58
D[<F77FF09B3801FFFC547FA2547FA25480A35480A25480A35480A29BB67EA35381A253
81A35381A25382A35382A25382A35382A29AB87EA35283A25283A35283A25284A352841E
DF52019F821E8FA252010F828AE2FFFE838AA25101FC838A5101F8838AA25149838B5149
848BA25149848B5149848B51869AC7FC8B5148858B5087648B5049858B5087648C504986
8C5088648C5049868C508899C9FC8C5048878C4F89638C4F49878C4F89638D4F49888D4F
8A638D4F49888D4F8A98CBFC8D4F48898D4E8B628D4E49898D4E8B628E4E498A8E4E8C62
8E4E90C07EA24E8CA395C27EA24D8DA34D8DA24D8D07F0CEFC8F4D498C8F4D8E618F4D49
8C8F4D8E96CFFC8F4D488D8F4C8F608F4C498D8F4C8F60A17E4C498EA17E4C498EA2A17E
4C498EA17E4C90D183A2A17E4C488FA17E4B498FA2A17E4B498FA17E4B498FA24B8D033F
01FFA17E023FB78ABB00F84EBE12F8AC91C9003F9BCA1201>221
201 117 328 244 65 D[<0C0FB500C0F107C00B1FB76CF00FE00A07B800F8F01FF099BA
6C173F090F07F0177F097F07FE17FF0807BC6C5D083F09F05D97BD00FC5D07070AFF5D07
3F0BC0143F96BF6C5C06030CF891B5FC060F9526F8000103FE5B063F05F8C800076E5B95
B9CA6CECC0074D05F0050F6E5A050794CB00036E5A051F04FC06006E5A4D04E0073FEBFE
7F94B80080070F90B7FC4C4CCD12034C04F81A00040F04E0874C04801B1F4C93CF7E4C03
FC8893B748884B04E01C0003074C894B4C894B93D17E4B03FC8A4F8A4B5D92B78B4A4C8A
4A4C8A4A4C8B4A93D3FC4E8C4AA17E4A5D4E8C5C91B7488CA181495E49A17F6049A17F49
5EA24993D57EA249A1805F5BA18290B75AA2A182485EA25AA1825F5AA348A1815FA35AA1
7013E0A17013C04DA0C7FC5AA55AA35FA5B8FCB3A37EA483A47EA57E83A37EA1EF3FC0A1
EF7FE071FBFFF07EA37E83A27EA15E6C82A118E0A26D81A26DA15C71A112C07FA15E6D82
A118806D70697F7223006DA15C6D706AA1163F6E816E6F575AA26E6F575A6E6F68A15F6E
70555B6E70676E70555B6E70696F6F676F6F5590C7FC73555A6F6F1FFF6F70535B6F7053
5B030170535B6F04F80B1F5B706F535B7003FF535B707051B5C8FC7004E0515B040304F8
090F5B7004FE093F5B70706C97B55A053F04E007035C7104FC070F5C0507DCFF80067F91
C9FC050105F04DB55A7105FF051F14F8063F05F84BB65A060FDDFFF8027F15C0060395BA
5A060054CAFC073F1DF807071DE007001D80083F09FCCBFC08071BF0E0007F1A80090F07
FCCCFC090019E00A074DCDFCE2001F16C0E3000F02E0CEFC>196
203 110 327 233 67 D[<0607B5F003E00503B600FC4D7E053FDBFFE04C7E4CB800FC16
1F040FDDFF80153F047F06F0157F4BBA00FE15FF0307736C5B031F08E05B037F745B92BC
12FC020309FF5B4A9226FC0001705A4A0380D900036F5A4A02FCC9003FECF07F4A02E004
076EB5FC4A0280040014FD91B6CB003F90B6FC4902FC180F494A18034902E01800494A19
3F494A854991CD7E1E0349498690B548868B484A878B484A878B5A4B87488AA2488A8C5D
488BA28CA2488BA38CA281B689A36F88A3818C81A28181217F8282826C8104FC765A7076
5A706C98C8FC836C16F017FCEFFF806C17F8F0FF8019FC6CF0FFC01AFE6CF1FFF01BFF6C
1BF8F4FF806C1CFCF5FF806C1DF06D1CFE787E6D1DF06D1DFC8B6D777E6D1EE06D8A6D8A
6D1EFE6E896E8A6E8A6E8A6E8A6E8A02008A6F896F89030F8A15036F8A6F6C89160F0403
89DC007F88170F050088060F87F0007F070786F1003F08031A80F2001F090019C01C0FF4
007F0B0F17E01D01777E0C1F16F08A1E037816F88A1F3F8B8BA27915FCD83FC089486C89
487E8BA28CA28CA38C7FA48C23F87FA37FA223F07FA36E20E068806E20C0A26E65238080
6E20006E656E676F99B5FC6F666F636F6603FC515C6F636F6604C0505C04F06204FC505C
04FF97B6C7FC05C04E5C05F006075C05FE4E5C02FDDAFFE0053F5C02F803FE4CB65A4A6C
DAFFF0030F5DDAE01FDBFFF049B75A4A6C93BAC8FCDA80031CFC91C764043F6349020F1B
C049020398C9FC49DA007F19FC49030F19F0490301198049DB003F05FCCAFC49040117E0
6CCB000F4BCBFC003EDE000F1480>142 203 110 327 179 83 D[<95B67E94B8FC041F
17F84BBA7E030F19F0033F19FC92BC7E02031BE0020F1BF84A1BFE4A92C7000F814A91C9
16C091B500FC041F81496E040781707081496F030081496F708071708049748171708176
81498A718276818C888CA27780A28D6D4B83A26D4B87A26D5D6D4B836D92CB826E5B6E5B
6E5B020713E0020090CCFC92CDFCAD0903B8FC083FB9FC071FBAFC0607BBFC95BCFC170F
94BDFC1607043FEFF01F4BB8EAF000030704FCC7FC033F168092B700FCC8FC020316E002
0F93C9FC4A15FC027F15F091B712C0010393CAFC4915FC495D4915E0495D495D90B7CBFC
485D5E485D5A485DA2485DA2485DA25A5EA3B7FC93CCFCA365A465A27095B7FC7E64826C
F303FD1C077018F96CF30FF16C6F171F70DD3FE1816C6FDDFFC115FC6C6F4C17FF6C6F04
07018016F805C04B4993B5FC6C04F0DB3FFE19C0013F03FCDBFFFC7F6D03FF0207496D17
E06D04F090B55A6D93B7487F010108807F6D6C96C77E021F06FC1401020706F06E7E0200
06C0031F16C0031F94C91203030104F8DC001F1500DB000F03C094CAFCDC001F01F8D0FC
>147 133 119 258 157 97 D[<933803FFE00107B7FCB9FCADEA0007EB007F8080A280
B3B3AD99380FFFF80903B612E0093F15FF50B812E0080F17FC083FEFFF8097BA12E00703
19F8070F19FE073F737E4FDAC0018206E1B500F8C7001F15F006E3028002038106E749C9
8195B500F8043F14FF08E0040F810880708197CA6C8107FC0500814F728007E0874F7280
4F728096CC7E4E894E7381607A814E898CA17EA17E8CA17EA27B80A2A11380A37B15C0A3
A113E0A3A113F0A28DA2A113F8A7A113FCB2A113F8A6A113F0A269A2A113E0A4A113C0A2
571580A3A113009EB7FCA15AA2A15A68A15A565DA27265565D84724F5D724F92C7FC6B73
60734E5C7395B65A734D5D4D01FC4D5D4D6C6C4D5D4D6C6C051F5D4D6C01C04C92C8FC4D
6C01F093B612FC726D03035D4D6C01FF030F5D4D6C02C0027F15C094C702FE010FB75A4C
023F90B948C9FC4C6E19F84C020719E04C020119804C6E6C05FCCAFC4C031F17E04C0307
94CBFC93CA16F891CC000F92CCFCE1007F13C0>158 201 119 326
179 I[<F90FFC0607B54DB57E0503B600FE040F14E0053FDBFFE0037F14F80403B800FE
4AB67E041FDDFFC0010F81047F06F049814BBA00FC137F0307DFFF01B81280031F08C317
C0037FDB000703F714E792B600F0D9007F91B5EAFC074A03C0021FDCC00F14E0020792C8
0007EDFE004A02FC030115F84A4A6F15C04A4A70804A4A708091B648708049776D14C04D
8249776D14804992CA6C6E6D1400A249786C5B494A716FEB3FF8FA07C0497890C8FCA349
8A4C8390B688A5488BAC6C67A56D66705F6D66A36D66A26D6E4D5D6D9BCAFCA26D6F4C5C
6D65715E6D656E6E4C5C6E6E4C5C6E6E93B65A6E6E4B5D6E02FF030792CBFC6E03C0021F
14FC4A03F0027F5C06FF0107B65A4A93B812C0DA1FF797CCFCDA3FE119FCDBE07F18F091
267FC01F18C004034DCDFC02FFD9003F16E04B01034BCEFC49DB000791CFFC95D2FC5BA2
5BA45B81A381A281A28181818116C016F016FE6D91BA12C0F5FFE01EFF1FF06D1DFF20E0
20F86D1EFE7A7E6D1FE021F86E8A6E8A7B7E6E8B6E8B6E8B806E8B6E8B6F8A0203C0FC02
1F8B027F8C49C2FC01078D131F4902FCCB6C834902E0F0007F90B6CD1203484AE0007F81
484A1B0F4802F01B03480C00814B88484A88488B8C484A8B8CA2B6D0FC8CA86F646C6AA3
6C6E525CA26C6E525CA26C6E525C6F646C6A6C6E99B6C7FC6C6E515C6F636C03C0080F5C
6D6E505C6D02F8087F5C6D02FE4FB65A01076E6C060715806D03E0061F92C8FC6D03F806
7F5C6D6CDAFF800407B612F8021F03F8047F15E00207DBFFF0023FB71280020193BA48C9
FC6E6C1CF8030F1CC0030151CAFCDB003F1AF004071A80DC003F06F0CBFC05014DCCFC94
C76C02F8CDFC>147 190 119 258 161 103 D[<933803FFE00107B7FCB9FCADEA0007EB
007F8080A280B3B3AD9A383FFFF00A07B612C00A3F15FC51B87E090717E0091F17F8097F
17FE50BAFC080785508550DA003F81087F01E001078197B5C70001814F01F86E814F01E0
6F804F496F804F90C9FCDF1FFC70814F5A50864F4882DFFF808606E190CAFC7981F0E3FE
F0E7FC61DEEFF087A2DEFFE08361A24F87A296CBFCA360A260A460A560B3B3B3AFBC023F
BB12C0AC02C0C8000306F0C9FC>162 199 117 326 179 I[<ED0FE0EDFFFE02036D7E4A
80021F14F04A804A8091B67E4981A249824982A24982A44982A76D5EA46D5EA26D5E6D93
C8FCA26D5D6E5C6E5C6E5C020714C06E5C020049C9FCED0FE092CBFCB3AB933801FFE001
03B7FC007FB8FCADEA0007EB007F808080B3B3B3B3B3A8BB12F8AC02C0C8120F>69
200 116 327 90 I[<933803FFE00107B7FCB9FCADEA0007EB007F8080A280B3B3B3B3B3
B3B3B3B3A4BB12FEAC02C0C81207>71 199 116 326 90 108 D[<932607FF8093263FFF
E097381FFFF0010FB70407B66C0603B612C0B9043F03F8061F15FC51B895B87E090F05C0
040717E0093F05F0041F17F898B900FC047F17FE507293BAFC0807720303855007C04A19
E0083F9026FE003F6F021FDA001F815001C0010F6F4A01E00107815048C700034E90C712
014F01F86E6FDAFFFC6E814F01E06E6F4901F06F80D800074D01806F6E4901C06F80D900
7F4C90C94D5B6EDC1FFC706E4948C96C816E4C48515A4F48744848866E05C07005E0824F
4874484886068190CA4D5A4F716F90CA6C8106831CE1DE87FCF3E3FE4F64DE8FF0E1F7F8
87069F1CFF4F714C83DEBFC064A24F528718FF96CB5FA34E9ACBFCA24E64A44E64A54E64
B3B3B3AFBC027FBB6C013FBB12C0AC02C0C8000306E0C8000106F0C9FC>250
130 116 257 269 I[<932607FF8093383FFFF0010FB70407B612C0B9043F15FC51B87E
090717E0091F17F8097F17FE50BAFC080785508550DA003F81087F01E001078197B5C700
01814F01F86E814F01E06F80D800074D496F80D9007F4C90C9FC6EDC1FFC70816E4C5A50
866E4C4882DFFF8086068190CAFC7981F083FEF087FC61DE8FF087A2DE9FE0836118BF4F
8718FF96CBFCA360A260A460A560B3B3B3AFBC023FBB12C0AC02C0C8000306F0C9FC>
162 130 117 257 179 I[<0707B57E0603B7FC063F16F00503B9FC051F18E094BA12FC
040319FF041F1AE0047F1AF893BC7E0303DC000315FF030F03F0D9003F15C04B03800207
81037F02FCC915F892B600F0043F804A03C0040F804A4B7080020F92CA6C15C04A02FC05
00814A4A72804A4A728091B6884D84494B7280494B7280498C4992CC6C81A2494A738149
8C4C85498CA290B68A4C86488DA2488D4C86482280A34822C0A34822E04C86A24822F0A4
4822F8A7B71FFCB26C22F8A66C22F07062A36C22E0A36C22C0A270626C2280A36C220070
97B7FC6C69A26C6970616D686D6E4F5DA26D6F4E5D6D6871606D686D6F4E92C7FC6D6F4E
5C6D6F4E5C6E6E95B65A6E6E4D5D6E6E4D5D6E6F4C5D6E03E0041F5D6E6F4C92C8FC6E03
FC93B65A6E6CDAFF80020715F86F03F0023F5D6F03FF0103B75A030793B91280030151C9
FC6F6C1AF8041F1AE004071A8004014FCAFCDC003F18F005071880DD007F04F8CBFC0603
93CCFCDE00071480>142 133 119 258 161 I[<932603FFE0923807FFFC0107B74BB612
F0B9031F15FF98B812F0080717FE081F717E97BA12E0070319F8070F19FE4F737E077F1A
E096B6D8C0038206E302F8C7003F8106E70280020F15FE06EF49C8000381D8000793B500
F8030082D9007F05E070816E0580041F816E4CCA6C814F71816E04F071814F71814F7181
4F8896CC7E4E73814E894E854E897A81A27A81A27A81A2A17E8CA11380A28CA113C0A2A1
13E08DA3A113F08DA3A113F8A58DA113FCB3A113F8A269A4A113F0A369A113E0A49EB712
C0A2A1138068A2A1130068A15AA2565DA2565DA15AA2724F5D565D84724F5DA1C7FC7296
B65A735F734D5D734D5D734D5D07FC4D5D734D5D734D5D08C04BB7C8FC744B15FC06F701
F8030F5D06F301FF033F5D06F102C049B712C006F002FE011F5E073F90B948C9FC7319F8
070719E007011980736C05FCCAFC081F17E0080794CBFC080016F8090F92CCFCE1007F13
C099CFFCB3B3A5BCFCAC02C0C81203>158 186 119 257 179 I[<DC0FFF923803FFC001
0FB7033F13FCB94AB67E080715F0081F15FC5081506F7E4FB87E4F834F834FD9FC03804F
D9C00780E1000F80DF3FFC5B4F484980D800074D5AD9007F05C04915806E4B5B6E4B90C7
16C04F91B7FC6E1507614E5AA24E5AA24E5AA24F6E1580187F4F6E1500A24EC86C5C765C
765C4E6F5C765C765C0B3F90C7FC4EEE07F89AC9FCA360A560A760B3B3B3A8BC12F0AC02
C0C9FC>114 130 119 257 132 114 D[<94B500F0157C047FDAFFC0EB01FE0307B700FC
EB07FF033F9338FF800F4AB9EAE03F020706F8B5FC021F95B6FC147F49BDFC4992388000
1F4902E0C8FC011F91C9120F4901FC16034901F0160003C08390B548171F4891CB7E4849
844A844886484984A24887A2484985A34887A46E85B5FCA280A280806F725A03E0725A6F
95C8FC15FC15FF16E06C15FCEEFFE017FF18FC6CEFFFE0F1FF806C19F81AFF6C1AE01BF8
6C1AFE6C747E1CE06C876C1BFC6D866D866D1BC06D876D876D870100876E86141F6E8602
031B8002001BC0151F03071AE01500040F19F0DC007F18F81703EF000FDE003F16FC1901
DF003F15FE1A071A01747E7514FFD83FC0190F486C85486C8587876D8688A2887FA27F88
1EFE7FA280A26E1BFCA26E611EF880805213F0806E1BE06E616F1AC06F95B512806F5F03
F84D14006F050F5B03FF4D5B04C0047F5B04F04BB55A04FF031F5C05F80103B65A02F791
B95A02C34FC7FC02806149486C18F049011F18C049010395C8FC01E0010017F849021F16
C06CC8000103FCC9FC003EDB000F49CAFC>104 133 117 258 127
I[<EF1FFEA9173FA6177FA517FFA35EA35EA25EA35EA25EA25E5EA293B5FC5DA25D5D5D
5DA25D92B6FC5C5C5C141F147F91B7FC010793B9FC133F0003BEFCBFFCAAC700014BCBFC
B3B3B3AAF57FF8B3A51DFF6E1BF084A36F4E13E0A2856F4E13C0A26F6F4A1380A26F6F4A
13006F60735D6F6FEC7FFC6F03FE14FF6F6F01035B70DBE00F5B7092B65A706070607095
C7FC04015F706C5E051F16F005075EDD007F1580060F02FCC8FCDE001F13C0>101
184 122 309 126 I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 1200dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 495 199 a Fr(CS)108 b(373:)144 b(Com)-9 b(binatorial)108
b(Algorithms,)f(Spring)h(2001)1624 503 y Fq
(http://www-courses.cs.uiuc.edu/~cs373)588 831 y Fp(Homew)-7
b(ork)89 b(4)h(\(due)g(Th)-7 b(u.)120 b(Marc)-7 b(h)89
b(29,)h(2001)i(at)d(11:59:59)j(pm\))p 821 1214 6159 7
v 818 1579 7 366 v 921 1469 a Fo(Name:)p 6976 1579 V
821 1586 6159 7 v 818 1951 7 366 v 921 1841 a(Net)85
b(ID:)p 3417 1951 V 1727 w(Alias:)p 6016 1951 V 1949
w(U)6405 1737 y Fn(3)6463 1841 y Fm(=)6555 1884 y Fn(4)6748
1841 y Fo(1)p 6976 1951 V 821 1958 6159 7 v 821 2351
V 818 2717 7 366 v 921 2607 a(Name:)p 6976 2717 V 821
2723 6159 7 v 818 3089 7 366 v 921 2979 a(Net)g(ID:)p
3417 3089 V 1727 w(Alias:)p 6016 3089 V 1949 w(U)6405
2875 y Fn(3)6463 2979 y Fm(=)6555 3022 y Fn(4)6748 2979
y Fo(1)p 6976 3089 V 821 3095 6159 7 v 821 3489 V 818
3854 7 366 v 921 3745 a(Name:)p 6976 3854 V 821 3861
6159 7 v 818 4226 7 366 v 921 4117 a(Net)g(ID:)p 3417
4226 V 1727 w(Alias:)p 6016 4226 V 1949 w(U)6405 4013
y Fn(3)6463 4117 y Fm(=)6555 4160 y Fn(4)6748 4117 y
Fo(1)p 6976 4226 V 821 4233 6159 7 v 0 4636 7800 7 v
0 4960 a Fl(Homew)-5 b(orks)54 b(ma)-5 b(y)54 b(b)5 b(e)54
b(done)g(in)g(teams)f(of)g(up)i(to)f(three)f(p)5 b(eople.)78
b(Eac)-5 b(h)53 b(team)h(turns)g(in)f(just)h(one)g(solution,)f(and)0
5186 y(ev)-5 b(ery)59 b(mem)-5 b(b)5 b(er)59 b(of)g(a)g(team)f(gets)h
(the)g(same)g(grade.)79 b(Since)59 b(1-unit)f(graduate)h(studen)-5
b(ts)59 b(are)g(required)g(to)g(solv)-5 b(e)0 5412 y(problems)61
b(that)h(are)g(w)-5 b(orth)63 b(extra)f(credit)f(for)h(other)g(studen)
-5 b(ts,)61 b Fk(1-unit)71 b(grad)g(studen)-6 b(ts)72
b(ma)-6 b(y)72 b(not)g(b)6 b(e)71 b(on)0 5638 y(the)f(same)f(team)h(as)
e(3/4-unit)g(grad)h(studen)-6 b(ts)70 b(or)f(undergraduates.)0
5963 y Fl(Neatly)46 b(prin)-5 b(t)46 b(y)-5 b(our)47
b(name\(s\),)g(NetID\(s\),)h(and)f(the)f(alias\(es\))e(y)-5
b(ou)47 b(used)f(for)h(Homew)-5 b(ork)46 b(0)h(in)f(the)h(b)5
b(o)-5 b(xes)46 b(ab)5 b(o)-5 b(v)g(e.)0 6189 y(Please)50
b(also)h(tell)f(us)i(whether)f(y)-5 b(ou)52 b(are)f(an)h
(undergraduate,)g(3/4-unit)f(grad)g(studen)-5 b(t,)52
b(or)g(1-unit)e(grad)i(studen)-5 b(t)0 6415 y(b)g(y)61
b(circling)d(U,)1137 6349 y Fj(3)1185 6415 y Fi(=)1246
6442 y Fj(4)1325 6415 y Fl(,)i(or)h(1,)f(resp)5 b(ectiv)-5
b(ely)-15 b(.)78 b(Staple)59 b(this)h(sheet)g(to)g(the)g(top)g(of)g(y)
-5 b(our)61 b(homew)-5 b(ork.)p 0 6665 V 0 7303 a Fp(Required)90
b(Problems)222 7709 y Fl(1.)h(Supp)5 b(ose)86 b(w)-5
b(e)88 b(ha)-5 b(v)g(e)87 b Fi(n)g Fl(p)5 b(oin)-5 b(ts)87
b(scattered)f(inside)g(a)h(t)-5 b(w)g(o-dimensional)84
b(b)5 b(o)-5 b(x.)160 b(A)88 b Fh(kd-tr)-9 b(e)g(e)100
b Fl(recursiv)-5 b(ely)455 7935 y(sub)5 b(divides)79
b(the)i(rectangle)e(as)i(follo)-5 b(ws.)140 b(First)80
b(w)-5 b(e)81 b(split)f(the)h(b)5 b(o)-5 b(x)81 b(in)-5
b(to)80 b(t)-5 b(w)g(o)81 b(smaller)e(b)5 b(o)-5 b(xes)80
b(with)h(a)455 8161 y Fh(vertic)-9 b(al)108 b Fl(line,)96
b(then)90 b(w)-5 b(e)91 b(split)d(eac)-5 b(h)90 b(of)g(those)g(b)5
b(o)-5 b(xes)90 b(with)g Fh(horizontal)110 b Fl(lines,)96
b(and)90 b(so)g(on,)98 b(alw)-5 b(a)g(ys)455 8386 y(alternating)51
b(b)5 b(et)-5 b(w)g(een)53 b(horizon)-5 b(tal)52 b(and)i(v)-5
b(ertical)52 b(splits.)76 b(Eac)-5 b(h)53 b(time)f(w)-5
b(e)54 b(split)e(a)h(b)5 b(o)-5 b(x,)55 b(the)e(splitting)e(line)455
8612 y(partitions)68 b(the)i(rest)g(of)g(the)g(in)-5
b(terior)70 b(p)5 b(oin)-5 b(ts)69 b Fh(as)74 b(evenly)g(as)h(p)-9
b(ossible)84 b Fl(b)-5 b(y)70 b(passing)g(through)g(a)g(median)455
8838 y(p)5 b(oin)-5 b(t)69 b(inside)h(the)g(b)5 b(o)-5
b(x)71 b(\()p Fh(not)88 b Fl(on)71 b(the)f(b)5 b(oundary\).)110
b(If)70 b(a)h(b)5 b(o)-5 b(x)71 b(do)5 b(esn't)69 b(con)-5
b(tain)70 b(an)-5 b(y)70 b(p)5 b(oin)-5 b(ts,)72 b(w)-5
b(e)71 b(don't)455 9064 y(split)59 b(it)g(an)-5 b(y)61
b(more;)e(these)h(\014nal)g(empt)-5 b(y)60 b(b)5 b(o)-5
b(xes)60 b(are)g(called)f Fh(c)-9 b(el)9 b(ls)p Fl(.)897
10588 y @beginspecial 9 @llx 187 @lly 597 @urx 724 @ury
720 @rhi @setspecial
%%BeginDocument: kd-tree5.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts:
%%Pages: 1
%%BoundingBox: 9 187 597 724
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 9 def
/arrowWidth 5 def

/IdrawDict 50 dict def
IdrawDict begin

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.796472 0 0 0.796472 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg gray90
0.894545 0.875013 0.87892 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 2 0 0 2 -241 -386 ] concat
%I
133 313 493 641 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -249 -378 ] concat
%I
133 313 493 641 Rect
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
399 529 399 313 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
351 641 351 529 Line
%I 1
End

Begin %I Line
%I b 65535
4 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
319 529 439 529 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
143 433 143 313 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
183 641 183 433 Line
%I 1
End

Begin %I Line
%I b 65535
4 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
87 433 319 433 Line
%I 1
End

Begin %I Line
%I b 65535
6 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
319 641 319 313 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
319 641 319 313 Line
%I 1
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 97.9999 54.9999 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -158 135 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -126 -9.00006 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 17.9999 183 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 274 135 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 226 199 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -46.0001 311 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 258 295 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -30.0001 -105 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 386 6.99994 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 434 70.9999 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -190 -121 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 290 375 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 354 407 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 306 247 ] concat
%I
255 433 8 8 Elli
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -249 -378 ] concat
%I
133 313 493 641 Rect
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 1366 w Fg(=)-26 b Ff(\))51 b @beginspecial
9 @llx 187 @lly 597 @urx 724 @ury 720 @rhi @setspecial
%%BeginDocument: kd-tree4.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts:
%%Pages: 1
%%BoundingBox: 9 187 597 724
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 9 def
/arrowWidth 5 def

/IdrawDict 50 dict def
IdrawDict begin

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.796472 0 0 0.796472 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg gray90
0.894545 0.875013 0.87892 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 2 0 0 2 -241 -386 ] concat
%I
133 313 493 641 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -249 -378 ] concat
%I
133 313 493 641 Rect
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
399 529 399 313 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
351 641 351 529 Line
%I 1
End

Begin %I Line
%I b 65535
4 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
319 529 439 529 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -99.0001 -378 ] concat
%I
290 529 418 529 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
143 433 143 313 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
183 641 183 433 Line
%I 1
End

Begin %I Line
%I b 65535
4 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
87 433 319 433 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
87 433 319 433 Line
%I 1
End

Begin %I Line
%I b 65535
6 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
319 641 319 313 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
319 641 319 313 Line
%I 1
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 97.9999 54.9999 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -158 135 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -126 -9.00006 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 17.9999 183 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 274 135 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 226 199 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -46.0001 311 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 258 295 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -30.0001 -105 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 386 6.99994 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 434 70.9999 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -190 -121 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 290 375 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 354 407 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 306 247 ] concat
%I
255 433 8 8 Elli
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -249 -378 ] concat
%I
133 313 493 641 Rect
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 1365 w Fg(=)-26 b Ff(\))52 b @beginspecial
9 @llx 187 @lly 597 @urx 724 @ury 720 @rhi @setspecial
%%BeginDocument: kd-tree3.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts:
%%Pages: 1
%%BoundingBox: 9 187 597 724
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 9 def
/arrowWidth 5 def

/IdrawDict 50 dict def
IdrawDict begin

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.796472 0 0 0.796472 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg gray90
0.894545 0.875013 0.87892 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 2 0 0 2 -241 -386 ] concat
%I
133 313 493 641 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -249 -378 ] concat
%I
133 313 493 641 Rect
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
399 529 399 313 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
399 529 399 313 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
351 641 351 529 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
351 641 351 529 Line
%I 1
End

Begin %I Line
%I b 65535
4 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
319 529 439 529 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -99.0001 -378 ] concat
%I
290 529 418 529 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
143 433 143 313 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
183 641 183 433 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
143 433 143 313 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
183 641 183 433 Line
%I 1
End

Begin %I Line
%I b 65535
4 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
87 433 319 433 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
87 433 319 433 Line
%I 1
End

Begin %I Line
%I b 65535
6 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
319 641 319 313 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
319 641 319 313 Line
%I 1
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 97.9999 54.9999 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -158 135 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -126 -9.00006 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 17.9999 183 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 274 135 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 226 199 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -46.0001 311 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 258 295 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -30.0001 -105 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 386 6.99994 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 434 70.9999 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -190 -121 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 290 375 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 354 407 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 306 247 ] concat
%I
255 433 8 8 Elli
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -249 -378 ] concat
%I
133 313 493 641 Rect
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 1365 w Fg(=)-26 b Ff(\))52 b @beginspecial
-28 @llx 187 @lly 629 @urx 724 @ury 720 @rhi @setspecial
%%BeginDocument: kd-tree2.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts:
%%Pages: 1
%%BoundingBox: -28 187 629 724
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 50 dict def
IdrawDict begin

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.796472 0 0 0.796472 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg gray90
0.898039 0.898039 0.898039 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 2 0 0 2 -241 -386 ] concat
%I
133 313 493 641 Rect
End

Begin %I Rect
%I b 65535
0 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -249 -378 ] concat
%I
133 313 493 641 Rect
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -99.0001 -538 ] concat
%I
370 521 418 521 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -410 ] concat
%I
319 489 399 489 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
399 529 399 313 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
399 529 399 313 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
319 553 351 553 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
351 641 351 529 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
351 641 351 529 Line
%I 1
End

Begin %I Line
%I b 65535
4 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
319 529 439 529 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -99.0001 -378 ] concat
%I
290 529 418 529 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -99.0001 -378 ] concat
%I
322 609 418 609 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
183 497 319 497 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
87 473 183 473 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
143 353 319 353 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
143 345 87 345 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
143 433 143 313 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
183 641 183 433 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
143 433 143 313 Line
%I 1
End

Begin %I Line
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
183 641 183 433 Line
%I 1
End

Begin %I Line
%I b 65535
4 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
87 433 319 433 Line
%I 1
End

Begin %I Line
%I b 65535
2 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
87 433 319 433 Line
%I 1
End

Begin %I Line
%I b 65535
6 0 0 [] 0 SetB
%I cfg white
1 1 1 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
319 641 319 313 Line
%I 1
End

Begin %I Line
%I b 65535
3 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -157 -378 ] concat
%I
319 641 319 313 Line
%I 1
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 97.9999 54.9999 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -158 135 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -126 -9.00006 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 17.9999 183 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 274 135 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 226 199 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -46.0001 311 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 258 295 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -30.0001 -105 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 386 6.99994 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 434 70.9999 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 -190 -121 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 290 375 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 354 407 ] concat
%I
255 433 8 8 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 0 0 1 306 247 ] concat
%I
255 433 8 8 Elli
End

Begin %I Line
%I b 65280
1 1 1 [8 8] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 2 0 0 2 -249 -378 ] concat
%I
109 577 517 577 Line
%I 1
End

Begin %I Rect
%I b 65535
2 0 0 [] 0 SetB
%I cfg black
0 0 0 SetCFg
%I cbg white
1 1 1 SetCBg
none SetP %I p n
%I t
[ 2 0 0 2 -249 -378 ] concat
%I
133 313 493 641 Rect
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 1523 10771 a Fe(Successive)i(divisions)f(of)e(a)g(kd-tree)
i(fo)l(r)e(15)g(p)t(oints.)69 b(The)52 b(dashed)g(line)h(crosses)f
(four)g(cells.)p eop
%%Page: 2 2
2 1 bop 0 -360 a Fk(CS)70 b(373)2043 b(Homew)-6 b(ork)69
b(4)g(\(due)h(3/29/01\))1497 b(Spring)69 b(2001)p 0 -285
7800 8 v 2100 3917 a @beginspecial 213 @llx 327 @lly
429 @urx 562 @ury 2160 @rwi @setspecial
%%BeginDocument: starcase.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts:
%%Pages: 1
%%BoundingBox: 213 327 429 562
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 50 dict def
IdrawDict begin

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.796717 0 0 0.796717 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Line
%I b 65535
0 1 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
97 416 97 184 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 1 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
none SetP %I p n
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
97 184 337 184 Line
%I 1
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.22029 -0 -0 0.22029 292.722 499.678 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0 -0 -0 0 337 577 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.195813 -0 -0 0.195813 364.642 450.27 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.22029 -0 -0 0.22029 384.722 473.678 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.22029 -0 -0 0.22029 363.722 521.678 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.22029 -0 -0 0.22029 443.722 466.678 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.22029 -0 -0 0.22029 326.722 415.678 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.22029 -0 -0 0.22029 419.722 499.678 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.22029 -0 -0 0.22029 405.722 429.678 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.22029 -0 -0 0.22029 307.722 537.678 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.22029 -0 -0 0.22029 460.722 394.678 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.22029 -0 -0 0.22029 367.722 370.678 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0 -0 -0 0 361 577 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0 -0 -0 0 306 547 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0 -0 -0 0 313 613 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0 -0 -0 0 311 624 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0 -0 -0 0 372 634 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0 -0 -0 0 328 650 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0 -0 -0 0 392 617 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0 -0 -0 0 391 627 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0 -0 -0 0 386 630 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0 -0 -0 0 434 648 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0 -0 -0 0 392 639 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0 -0 -0 0 373 633 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0 -0 -0 0 340 624 ] concat
%I
201 351 13 14 Elli
End

Begin %I Elli
%I b 65535
2 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0 -0 -0 0 347 623 ] concat
%I
201 351 13 14 Elli
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
177 384 177 472 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
177 384 361 384 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1.18182 -0 -0 1.18182 132.636 165.091 ] concat
%I
233 368 233 456 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
233 368 361 368 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
289 344 289 472 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
289 344 361 344 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
313 312 361 312 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
329 240 361 240 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
313 312 313 472 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
329 240 329 472 Line
%I 1
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 2383 4142 a Fl(An)61 b(example)e(staircase)g(as)h(in)g
(problem)g(3.)531 4859 y(\(a\))91 b(Ho)-5 b(w)61 b(man)-5
b(y)60 b(cells)f(are)h(there,)g(as)g(a)h(function)e(of)h
Fi(n)p Fl(?)81 b(Pro)-5 b(v)g(e)60 b(y)-5 b(our)60 b(answ)-5
b(er)61 b(is)f(correct.)521 5151 y(\(b\))91 b(In)56 b(the)h(w)-5
b(orst)57 b(case,)f Fh(exactly)i Fl(ho)-5 b(w)57 b(man)-5
b(y)56 b(cells)g(can)h(a)f(horizon)-5 b(tal)56 b(line)g(cross,)g(as)h
(a)g(function)f(of)g Fi(n)p Fl(?)855 5377 y(Pro)-5 b(v)g(e)60
b(y)-5 b(our)60 b(answ)-5 b(er)61 b(is)f(correct.)79
b(Assume)60 b(that)g Fi(n)51 b Fl(=)g(2)4756 5311 y Fd(k)4881
5377 y Fc(\000)41 b Fl(1)61 b(for)f(some)g(in)-5 b(teger)59
b Fi(k)6 b Fl(.)541 5669 y(\(c\))91 b(Supp)5 b(ose)71
b(w)-5 b(e)73 b(ha)-5 b(v)g(e)71 b Fi(n)i Fl(p)5 b(oin)-5
b(ts)71 b(stored)g(in)h(a)g(kd-tree.)114 b(Describ)5
b(e)71 b(an)h(algorithm)f(that)g(coun)-5 b(ts)71 b(the)855
5895 y(n)-5 b(um)g(b)5 b(er)50 b(of)g(p)5 b(oin)-5 b(ts)49
b(ab)5 b(o)-5 b(v)g(e)50 b(a)g(horizon)-5 b(tal)49 b(line)h(\(suc)-5
b(h)49 b(as)i(the)f(dashed)g(line)f(in)h(the)g(\014gure\))g(in)g
Fi(O)5 b Fl(\()7469 5764 y Fc(p)p 7620 5764 110 8 v 7620
5895 a Fi(n)p Fl(\))855 6121 y(time.)442 6347 y Fd(?)521
6413 y Fl(\(d\))91 b Fh([Optional:)f(5)69 b(pts)g(extr)-9
b(a)68 b(cr)-9 b(e)g(dit])81 b Fl(Find)63 b(an)i(algorithm)d(that)h
(coun)-5 b(ts)64 b(the)f(n)-5 b(um)g(b)5 b(er)64 b(of)g(p)5
b(oin)-5 b(ts)63 b(that)855 6639 y(lie)g(inside)h(a)h(rectangle)e
Fi(R)k Fl(and)d(sho)-5 b(w)65 b(that)g(it)f(tak)-5 b(es)64
b Fi(O)5 b Fl(\()4847 6508 y Fc(p)p 4998 6508 V 4998
6639 a Fi(n)p Fl(\))64 b(time.)92 b(Y)-15 b(ou)65 b(ma)-5
b(y)65 b(assume)e(that)h(the)855 6864 y(sides)59 b(of)h(the)g
(rectangle)f(are)i(parallel)e(to)h(the)g(sides)g(of)g(the)g(b)5
b(o)-5 b(x.)222 7290 y(2.)91 b(Circle)59 b(In)-5 b(tersection)59
b Fh([This)65 b(pr)-9 b(oblem)63 b(is)j(worth)e(20)h(p)-9
b(oints])455 7515 y Fl(Describ)5 b(e)88 b(an)h(algorithm)f(to)h
(decide,)95 b(giv)-5 b(en)89 b Fi(n)g Fl(circles)f(in)h(the)g(plane,)95
b(whether)90 b(an)-5 b(y)89 b(t)-5 b(w)g(o)89 b(of)g(them)455
7741 y(in)-5 b(tersect,)58 b(in)j Fi(O)5 b Fl(\()p Fi(n)30
b Fl(log)i Fi(n)p Fl(\))61 b(time.)80 b(Eac)-5 b(h)60
b(circle)g(is)g(sp)5 b(eci\014ed)60 b(b)-5 b(y)61 b(three)f(n)-5
b(um)g(b)5 b(ers:)81 b(its)60 b(radius)g(and)h(the)f
Fi(x)p Fl(-)455 7967 y(and)g Fi(y)7 b Fl(-co)e(ordinates)59
b(of)h(its)f(cen)-5 b(ter.)737 8268 y(W)-15 b(e)88 b(only)f(care)h(ab)5
b(out)88 b(in)-5 b(tersections)86 b(b)5 b(et)-5 b(w)g(een)88
b(circle)f(b)5 b(oundaries;)101 b(concen)-5 b(tric)86
b(circles)h(do)h(not)455 8493 y(in)-5 b(tersect.)119
b(What)74 b(general)f(p)5 b(osition)73 b(assumptions)f(do)5
b(es)74 b(y)-5 b(our)74 b(algorithm)e(require?)122 b
Fb([Hin)-5 b(t:)106 b(Mo)5 b(dify)455 8719 y(an)73 b(algorithm)f(for)h
(detecting)f(line)g(segmen)-5 b(t)72 b(in)-5 b(tersections,)74
b(but)f(describ)5 b(e)72 b(y)-5 b(our)74 b(mo)5 b(di\014cations)71
b(v)-5 b(ery)455 8945 y(carefully!)78 b(There)61 b(are)f(at)h(least)e
(t)-5 b(w)g(o)60 b(v)-5 b(ery)61 b(di\013eren)-5 b(t)60
b(solutions.])222 9405 y Fl(3.)91 b(Staircases)455 9631
y(Y)-15 b(ou)58 b(are)g(giv)-5 b(en)58 b(a)g(set)g(of)g(p)5
b(oin)-5 b(ts)57 b(in)h(the)g(\014rst)g(quadran)-5 b(t.)79
b(A)59 b Fh(left-up)f Fl(p)5 b(oin)-5 b(t)58 b(of)f(this)h(set)f(is)h
(de\014ned)g(to)g(b)5 b(e)455 9857 y(a)63 b(p)5 b(oin)-5
b(t)63 b(that)g(has)h(no)g(p)5 b(oin)-5 b(ts)62 b(b)5
b(oth)64 b(greater)f(than)h(it)f(in)g(b)5 b(oth)64 b(co)5
b(ordinates.)88 b(The)64 b(left-up)e(subset)h(of)g(a)455
10083 y(set)c(of)h(p)5 b(oin)-5 b(ts)60 b(then)g(forms)g(a)g
Fh(stair)-9 b(c)g(ase)60 b Fl(\(see)f(\014gure\).)531
10508 y(\(a\))91 b(Pro)-5 b(v)g(e)60 b(that)g(left-up)e(p)5
b(oin)-5 b(ts)60 b(do)g(not)h(necessarily)d(lie)i(on)g(the)g(con)-5
b(v)g(ex)60 b(h)-5 b(ull.)521 10800 y(\(b\))91 b(Giv)-5
b(e)59 b(an)i Fi(O)5 b Fl(\()p Fi(n)30 b Fl(log)i Fi(n)p
Fl(\))60 b(algorithm)f(to)h(\014nd)h(the)f(staircase)f(of)h(a)g(set)g
(of)g(p)5 b(oin)-5 b(ts.)3855 11160 y(2)p eop
%%Page: 3 3
3 2 bop 0 -360 a Fk(CS)70 b(373)2043 b(Homew)-6 b(ork)69
b(4)g(\(due)h(3/29/01\))1497 b(Spring)69 b(2001)p 0 -285
7800 8 v 541 183 a Fl(\(c\))91 b(Assume)74 b(that)g(p)5
b(oin)-5 b(ts)74 b(are)h(c)-5 b(hosen)74 b(uniformly)f(at)i(random)g
(within)f(a)h(rectangle.)122 b(What)74 b(is)g(the)855
408 y(a)-5 b(v)g(erage)56 b(n)-5 b(um)g(b)5 b(er)56 b(of)g(p)5
b(oin)-5 b(ts)55 b(in)h(a)g(staircase?)78 b(Justify)-15
b(.)78 b(Hin)-5 b(t:)78 b(y)-5 b(ou)56 b(will)f(b)5 b(e)57
b(able)f(to)g(giv)-5 b(e)55 b(an)i(exact)855 634 y(answ)-5
b(er)60 b(rather)h(than)f(just)f(asymptotics.)78 b(Y)-15
b(ou)61 b(ha)-5 b(v)g(e)60 b(seen)g(the)g(same)g(analysis)f(b)5
b(efore.)222 1059 y(4.)91 b(Con)-5 b(v)g(ex)60 b(La)-5
b(y)g(ers)455 1285 y(Giv)g(en)51 b(a)g(set)h Fi(Q)g Fl(of)f(p)5
b(oin)-5 b(ts)51 b(in)h(the)f(plane,)i(de\014ne)e(the)h
Fh(c)-9 b(onvex)56 b(layers)68 b Fl(of)51 b Fi(Q)h Fl(inductiv)-5
b(ely)50 b(as)h(follo)-5 b(ws:)75 b(The)455 1511 y(\014rst)62
b(con)-5 b(v)g(ex)63 b(la)-5 b(y)g(er)62 b(of)h Fi(Q)g
Fl(is)f(just)g(the)h(con)-5 b(v)g(ex)63 b(h)-5 b(ull)62
b(of)g Fi(Q)p Fl(.)88 b(F)-15 b(or)63 b(all)f Fi(i)54
b(>)i Fl(1,)63 b(the)g Fi(i)p Fl(th)f(con)-5 b(v)g(ex)63
b(la)-5 b(y)g(er)62 b(is)g(the)455 1737 y(con)-5 b(v)g(ex)60
b(h)-5 b(ull)59 b(of)h Fi(Q)h Fl(after)e(the)h(v)-5 b(ertices)60
b(of)g(the)g(\014rst)g Fi(i)40 b Fc(\000)h Fl(1)60 b(la)-5
b(y)g(ers)60 b(ha)-5 b(v)g(e)60 b(b)5 b(een)60 b(remo)-5
b(v)g(ed.)737 2037 y(Giv)g(e)59 b(an)i Fi(O)5 b Fl(\()p
Fi(n)1739 1971 y Fj(2)1817 2037 y Fl(\)-time)59 b(algorithm)g(to)h
(\014nd)g(all)g(con)-5 b(v)g(ex)60 b(la)-5 b(y)g(ers)60
b(of)g(a)g(giv)-5 b(en)60 b(set)g(of)g Fi(n)g Fl(p)5
b(oin)-5 b(ts.)1946 4173 y @beginspecial 181 @llx 313
@lly 395 @urx 528 @ury 1080 @rhi @setspecial
%%BeginDocument: convexlayers.ps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts:
%%Pages: 1
%%BoundingBox: 181 313 395 528
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 50 dict def
IdrawDict begin

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.796717 0 0 0.796717 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I 6
93 393
185 424
314 338
290 207
136 168
58 281
6 Poly
End

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I 5
150 367
215 368
239 352
207 206
97 291
5 Poly
End

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I 5
148 332
213 336
216 300
178 257
136 295
5 Poly
End

Begin %I Poly
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I 3
176 316
166 286
203 312
3 Poly
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 252 263 ] concat
%I
59 137 5 5 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 175 375 ] concat
%I
59 137 5 5 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 210 489 ] concat
%I
59 137 5 5 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 302 520 ] concat
%I
59 137 5 5 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 431 433 ] concat
%I
59 137 5 5 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 406 302 ] concat
%I
59 137 5 5 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 323 301 ] concat
%I
59 137 5 5 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 355 444 ] concat
%I
59 137 5 5 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 332 462 ] concat
%I
59 137 5 5 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 266 462 ] concat
%I
59 137 5 5 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 214 387 ] concat
%I
59 137 5 5 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 253 391 ] concat
%I
59 137 5 5 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 265 427 ] concat
%I
59 137 5 5 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 327 432 ] concat
%I
59 137 5 5 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 333 398 ] concat
%I
59 137 5 5 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 295 353 ] concat
%I
59 137 5 5 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 283 383 ] concat
%I
59 137 5 5 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 294 410 ] concat
%I
59 137 5 5 Elli
End

Begin %I Elli
%I b 65535
1 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
1 SetP
%I t
[ 1 -0 -0 1 317 407 ] concat
%I
59 137 5 5 Elli
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 1843 w Fe(A)51 b(set)h(of)f(p)t(oints)i(with)f(four)g
(convex)f(la)l(y)l(ers.)222 4673 y Fl(5.)91 b Fh([This)57
b(pr)-9 b(oblem)56 b(is)h(r)-9 b(e)g(quir)g(e)g(d)54
b(only)k(for)f(gr)-9 b(aduate)55 b(students)j(taking)f(CS)h(373)f(for)g
(a)g(ful)9 b(l)58 b(unit;)h(anyone)f(else)455 4899 y(c)-9
b(an)73 b(submit)g(a)g(solution)i(for)e(extr)-9 b(a)73
b(cr)-9 b(e)g(dit.])126 b Fl(Solv)-5 b(e)69 b(the)g(tra)-5
b(v)g(elling)68 b(salesman)g(problem)h(for)h(p)5 b(oin)-5
b(ts)68 b(in)455 5125 y(con)-5 b(v)g(ex)63 b(p)5 b(osition)63
b(\(ie,)g(the)h(v)-5 b(ertices)63 b(of)g(a)h(con)-5 b(v)g(ex)64
b(p)5 b(olygon\).)90 b(Finding)63 b(the)g(shortest)g(cycle)g(that)h
(visits)455 5351 y(ev)-5 b(ery)52 b(p)5 b(oin)-5 b(t)51
b(is)g(easy)h({)g(it's)f(just)g(the)h(con)-5 b(v)g(ex)52
b(h)-5 b(ull.)76 b(Finding)51 b(the)h(shortest)f(path)h(that)g(visits)e
(ev)-5 b(ey)52 b(p)5 b(oin)-5 b(t)455 5576 y(is)59 b(a)i(little)d
(harder,)j(b)5 b(ecause)59 b(the)h(path)h(can)f(cross)g(through)g(the)g
(in)-5 b(terior.)531 6002 y(\(a\))91 b(Sho)-5 b(w)60
b(that)g(the)g(optimal)f(path)h(cannot)g(b)5 b(e)61 b(one)f(that)g
(crosses)g(itself.)521 6294 y(\(b\))91 b(Describ)5 b(e)59
b(an)h Fi(O)5 b Fl(\()p Fi(n)2172 6228 y Fj(2)2251 6294
y Fl(\))60 b(time)f(dynamic)h(programming)f(algorithm)g(to)h(solv)-5
b(e)59 b(the)i(problem.)3855 11160 y(3)p eop
%%Page: 4 4
4 3 bop 0 -360 a Fk(CS)70 b(373)2043 b(Homew)-6 b(ork)69
b(4)g(\(due)h(3/29/01\))1497 b(Spring)69 b(2001)p 0 -285
7800 8 v 1500 2450 a @beginspecial 189 @llx 339 @lly
327 @urx 486 @ury 1380 @rwi @setspecial
%%BeginDocument: extdiag2.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts:
%%Pages: 1
%%BoundingBox: 189 339 327 486
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 50 dict def
IdrawDict begin

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.796717 0 0 0.796717 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Poly
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 0.664093 -0 -0 0.693587 194.689 348.792 ] concat
%I 8
119 373
128 331
243 307
245 202
66 263
148 129
323 114
285 363
8 Poly
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.677165 -0 -0 0.707241 195.626 342.74 ] concat
%I
67 263 118 371 Line
%I 1
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.677165 -0 -0 0.707241 204.315 467.799 ] concat
%I
57 87 3 4 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.677165 -0 -0 0.707241 237.315 544.799 ] concat
%I
57 87 3 4 Elli
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 2500 w @beginspecial 189 @llx 339 @lly 327
@urx 485 @ury 1380 @rwi @setspecial
%%BeginDocument: mouth2.eps
%!PS-Adobe-2.0 EPSF-1.2
%%Creator: idraw
%%DocumentFonts:
%%Pages: 1
%%BoundingBox: 189 339 327 485
%%EndComments

%%BeginIdrawPrologue
/arrowhead {
0 begin
transform originalCTM itransform
/taily exch def
/tailx exch def
transform originalCTM itransform
/tipy exch def
/tipx exch def
/dy tipy taily sub def
/dx tipx tailx sub def
/angle dx 0 ne dy 0 ne or { dy dx atan } { 90 } ifelse def
gsave
originalCTM setmatrix
tipx tipy translate
angle rotate
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
patternNone not {
originalCTM setmatrix
/padtip arrowHeight 2 exp 0.25 arrowWidth 2 exp mul add sqrt brushWidth mul
arrowWidth div def
/padtail brushWidth 2 div def
tipx tipy translate
angle rotate
padtip 0 translate
arrowHeight padtip add padtail add arrowHeight div dup scale
arrowheadpath
ifill
} if
brushNone not {
originalCTM setmatrix
tipx tipy translate
angle rotate
arrowheadpath
istroke
} if
grestore
end
} dup 0 9 dict put def

/arrowheadpath {
newpath
arrowHeight neg arrowWidth 2 div moveto
0 0 lineto
arrowHeight neg arrowWidth 2 div neg lineto
} def

/leftarrow {
0 begin
y exch get /taily exch def
x exch get /tailx exch def
y exch get /tipy exch def
x exch get /tipx exch def
brushLeftArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

/rightarrow {
0 begin
y exch get /tipy exch def
x exch get /tipx exch def
y exch get /taily exch def
x exch get /tailx exch def
brushRightArrow { tipx tipy tailx taily arrowhead } if
end
} dup 0 4 dict put def

%%EndIdrawPrologue

/arrowHeight 10 def
/arrowWidth 5 def

/IdrawDict 50 dict def
IdrawDict begin

/none null def
/numGraphicParameters 17 def
/stringLimit 65535 def

/Begin {
save
numGraphicParameters dict begin
} def

/End {
end
restore
} def

/SetB {
dup type /nulltype eq {
pop
false /brushRightArrow idef
false /brushLeftArrow idef
true /brushNone idef
} {
/brushDashOffset idef
/brushDashArray idef
0 ne /brushRightArrow idef
0 ne /brushLeftArrow idef
/brushWidth idef
false /brushNone idef
} ifelse
} def

/SetCFg {
/fgblue idef
/fggreen idef
/fgred idef
} def

/SetCBg {
/bgblue idef
/bggreen idef
/bgred idef
} def

/SetF {
/printSize idef
/printFont idef
} def

/SetP {
dup type /nulltype eq {
pop true /patternNone idef
} {
dup -1 eq {
/patternGrayLevel idef
/patternString idef
} {
/patternGrayLevel idef
} ifelse
false /patternNone idef
} ifelse
} def

/BSpl {
0 begin
storexyn
newpath
n 1 gt {
0 0 0 0 0 0 1 1 true subspline
n 2 gt {
0 0 0 0 1 1 2 2 false subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 2 copy false subspline
} if
n 2 sub dup n 1 sub dup 2 copy 2 copy false subspline
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Circ {
newpath
0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
} def

/CBSpl {
0 begin
dup 2 gt {
storexyn
newpath
n 1 sub dup 0 0 1 1 2 2 true subspline
1 1 n 3 sub {
/i exch def
i 1 sub dup i dup i 1 add dup i 2 add dup false subspline
} for
n 3 sub dup n 2 sub dup n 1 sub dup 0 0 false subspline
n 2 sub dup n 1 sub dup 0 0 1 1 false subspline
patternNone not { ifill } if
brushNone not { istroke } if
} {
Poly
} ifelse
end
} dup 0 4 dict put def

/Elli {
0 begin
newpath
4 2 roll
translate
scale
0 0 1 0 360 arc
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 1 dict put def

/Line {
0 begin
2 storexyn
newpath
x 0 get y 0 get moveto
x 1 get y 1 get lineto
brushNone not { istroke } if
0 0 1 1 leftarrow
0 0 1 1 rightarrow
end
} dup 0 4 dict put def

/MLine {
0 begin
storexyn
newpath
n 1 gt {
x 0 get y 0 get moveto
1 1 n 1 sub {
/i exch def
x i get y i get lineto
} for
patternNone not brushLeftArrow not brushRightArrow not and and { ifill } if
brushNone not { istroke } if
0 0 1 1 leftarrow
n 2 sub dup n 1 sub dup rightarrow
} if
end
} dup 0 4 dict put def

/Poly {
3 1 roll
newpath
moveto
-1 add
{ lineto } repeat
closepath
patternNone not { ifill } if
brushNone not { istroke } if
} def

/Rect {
0 begin
/t exch def
/r exch def
/b exch def
/l exch def
newpath
l b moveto
l t lineto
r t lineto
r b lineto
closepath
patternNone not { ifill } if
brushNone not { istroke } if
end
} dup 0 4 dict put def

/Text {
ishow
} def

/idef {
dup where { pop pop pop } { exch def } ifelse
} def

/ifill {
0 begin
gsave
patternGrayLevel -1 ne {
fgred bgred fgred sub patternGrayLevel mul add
fggreen bggreen fggreen sub patternGrayLevel mul add
fgblue bgblue fgblue sub patternGrayLevel mul add setrgbcolor
eofill
} {
eoclip
originalCTM setmatrix
pathbbox /t exch def /r exch def /b exch def /l exch def
/w r l sub ceiling cvi def
/h t b sub ceiling cvi def
/imageByteWidth w 8 div ceiling cvi def
/imageHeight h def
bgred bggreen bgblue setrgbcolor
eofill
fgred fggreen fgblue setrgbcolor
w 0 gt h 0 gt and {
l w add b translate w neg h scale
w h true [w 0 0 h neg 0 h] { patternproc } imagemask
} if
} ifelse
grestore
end
} dup 0 8 dict put def

/istroke {
gsave
brushDashOffset -1 eq {
[] 0 setdash
1 setgray
} {
brushDashArray brushDashOffset setdash
fgred fggreen fgblue setrgbcolor
} ifelse
brushWidth setlinewidth
originalCTM setmatrix
stroke
grestore
} def

/ishow {
0 begin
gsave
fgred fggreen fgblue setrgbcolor
/fontDict printFont printSize scalefont dup setfont def
/descender fontDict begin 0 [FontBBox] 1 get FontMatrix end
transform exch pop def
/vertoffset 1 printSize sub descender sub def {
0 vertoffset moveto show
/vertoffset vertoffset printSize sub def
} forall
grestore
end
} dup 0 3 dict put def
/patternproc {
0 begin
/patternByteLength patternString length def
/patternHeight patternByteLength 8 mul sqrt cvi def
/patternWidth patternHeight def
/patternByteWidth patternWidth 8 idiv def
/imageByteMaxLength imageByteWidth imageHeight mul
stringLimit patternByteWidth sub min def
/imageMaxHeight imageByteMaxLength imageByteWidth idiv patternHeight idiv
patternHeight mul patternHeight max def
/imageHeight imageHeight imageMaxHeight sub store
/imageString imageByteWidth imageMaxHeight mul patternByteWidth add string def
0 1 imageMaxHeight 1 sub {
/y exch def
/patternRow y patternByteWidth mul patternByteLength mod def
/patternRowString patternString patternRow patternByteWidth getinterval def
/imageRow y imageByteWidth mul def
0 patternByteWidth imageByteWidth 1 sub {
/x exch def
imageString imageRow x add patternRowString putinterval
} for
} for
imageString
end
} dup 0 12 dict put def

/min {
dup 3 2 roll dup 4 3 roll lt { exch } if pop
} def

/max {
dup 3 2 roll dup 4 3 roll gt { exch } if pop
} def

/midpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 x1 add 2 div
y0 y1 add 2 div
end
} dup 0 4 dict put def

/thirdpoint {
0 begin
/y1 exch def
/x1 exch def
/y0 exch def
/x0 exch def
x0 2 mul x1 add 3 div
y0 2 mul y1 add 3 div
end
} dup 0 4 dict put def

/subspline {
0 begin
/movetoNeeded exch def
y exch get /y3 exch def
x exch get /x3 exch def
y exch get /y2 exch def
x exch get /x2 exch def
y exch get /y1 exch def
x exch get /x1 exch def
y exch get /y0 exch def
x exch get /x0 exch def
x1 y1 x2 y2 thirdpoint
/p1y exch def
/p1x exch def
x2 y2 x1 y1 thirdpoint
/p2y exch def
/p2x exch def
x1 y1 x0 y0 thirdpoint
p1x p1y midpoint
/p0y exch def
/p0x exch def
x2 y2 x3 y3 thirdpoint
p2x p2y midpoint
/p3y exch def
/p3x exch def
movetoNeeded { p0x p0y moveto } if
p1x p1y p2x p2y p3x p3y curveto
end
} dup 0 17 dict put def

/storexyn {
/n exch def
/y n array def
/x n array def
n 1 sub -1 0 {
/i exch def
y i 3 2 roll put
x i 3 2 roll put
} for
} def

/SSten {
fgred fggreen fgblue setrgbcolor
dup true exch 1 0 0 -1 0 6 -1 roll matrix astore
} def

/FSten {
dup 3 -1 roll dup 4 1 roll exch
newpath
0 0 moveto
dup 0 exch lineto
exch dup 3 1 roll exch lineto
0 lineto
closepath
bgred bggreen bgblue setrgbcolor
eofill
SSten
} def

/Rast {
exch dup 3 1 roll 1 0 0 -1 0 6 -1 roll matrix astore
} def

%%EndProlog

%I Idraw 10 Grid 8 8 

%%Page: 1 1

Begin
%I b u
%I cfg u
%I cbg u
%I f u
%I p u
%I t
[ 0.796717 0 0 0.796717 0 0 ] concat
/originalCTM matrix currentmatrix def

Begin %I Poly
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0.75 SetP
%I t
[ 0.664093 -0 -0 0.693587 194.689 348.792 ] concat
%I 8
119 373
128 331
243 307
245 202
66 263
148 129
323 114
285 363
8 Poly
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.677165 -0 -0 0.707241 242.315 516.799 ] concat
%I
57 87 3 4 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.677165 -0 -0 0.707241 317.315 499.799 ] concat
%I
57 87 3 4 Elli
End

Begin %I Elli
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 0.677165 -0 -0 0.707241 317.315 429.799 ] concat
%I
57 87 3 4 Elli
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
107 345 180 259 Line
%I 1
End

Begin %I Line
%I b 65535
0 0 0 [] 0 SetB
%I cfg Black
0 0 0 SetCFg
%I cbg White
1 1 1 SetCBg
%I p
0 SetP
%I t
[ 1 -0 -0 1 175 232 ] concat
%I
224 272 224 271 Line
%I 1
End

End %I eop

showpage

%%Trailer

end

%%EndDocument
 @endspecial 1817 2676 a Fl(An)61 b(external)e(diagonal)1309
b(A)61 b(mouth)0 3416 y Fp(Practice)88 b(Problems)222
3822 y Fl(1.)j(Basic)59 b(Computation)g(\(assume)g(t)-5
b(w)g(o)60 b(dimensions)f(and)h Fh(exact)h Fl(arithmetic\))531
4192 y(\(a\))91 b(In)-5 b(tersection:)82 b(Extend)62
b(the)g(basic)f(algorithm)g(to)i(determine)e(if)g(t)-5
b(w)g(o)63 b(line)e(segmen)-5 b(ts)61 b(in)-5 b(tersect)61
b(b)-5 b(y)855 4418 y(taking)59 b(care)h(of)h Fh(al)9
b(l)61 b Fl(degenerate)f(cases.)521 4706 y(\(b\))91 b(Simplicit)-5
b(y:)93 b(Giv)-5 b(e)68 b(an)h Fi(O)5 b Fl(\()p Fi(n)30
b Fl(log)i Fi(n)p Fl(\))69 b(algorithm)e(to)h(determine)f(whether)i(an)
g Fi(n)p Fl(-v)-5 b(ertex)68 b(p)5 b(olygon)68 b(is)855
4932 y(simple.)541 5220 y(\(c\))91 b(Area:)114 b(Giv)-5
b(e)77 b(an)g(algorithm)f(to)i(compute)e(the)h(area)h(of)f(a)h(simple)d
Fi(n)p Fl(-p)5 b(olygon)77 b(\(not)g(necessarily)855
5446 y(con)-5 b(v)g(ex\))59 b(in)h Fi(O)5 b Fl(\()p Fi(n)p
Fl(\))60 b(time.)521 5734 y(\(d\))91 b(Inside:)104 b(Giv)-5
b(e)72 b(an)i(algorithm)d(to)i(determine)f(whether)h(a)h(p)5
b(oin)-5 b(t)72 b(is)h(within)f(a)i(simple)d Fi(n)p Fl(-p)5
b(olygon)855 5959 y(\(not)59 b(necessarily)g(con)-5 b(v)g(ex\))60
b(in)g Fi(O)5 b Fl(\()p Fi(n)p Fl(\))60 b(time.)222 6336
y(2.)91 b(External)59 b(Diagonals)g(and)h(Mouths)531
6707 y(\(a\))91 b(A)54 b(pair)f(of)h(p)5 b(olygon)53
b(v)-5 b(ertices)52 b(de\014nes)h(an)h Fh(external)59
b(diagonal)72 b Fl(if)53 b(the)h(line)e(segmen)-5 b(t)53
b(b)5 b(et)-5 b(w)g(een)53 b(them)855 6933 y(is)k(completely)g(outside)
g(the)h(p)5 b(olygon.)79 b(Sho)-5 b(w)59 b(that)f(ev)-5
b(ery)58 b(noncon)-5 b(v)g(ex)58 b(p)5 b(olygon)58 b(has)h(at)f(least)f
(one)855 7159 y(external)i(diagonal.)521 7447 y(\(b\))91
b(Three)84 b(consectiv)-5 b(e)83 b(p)5 b(olygon)84 b(v)-5
b(ertices)84 b Fi(p;)30 b(q)7 b(;)30 b(r)88 b Fl(form)c(a)h
Fh(mouth)98 b Fl(if)84 b Fi(p)g Fl(and)h Fi(r)90 b Fl(de\014ne)84
b(an)h(external)855 7672 y(diagonal.)79 b(Sho)-5 b(w)60
b(that)g(ev)-5 b(ery)61 b(noncon)-5 b(v)g(ex)59 b(p)5
b(olygon)60 b(has)h(at)f(least)f(one)h(mouth.)222 8122
y(3.)91 b(On-Line)59 b(Con)-5 b(v)g(ex)61 b(Hull)455
8347 y(W)-15 b(e)81 b(are)g(giv)-5 b(en)81 b(the)h(set)f(of)g(p)5
b(oin)-5 b(ts)80 b(one)i(p)5 b(oin)-5 b(t)81 b(at)g(a)h(time.)142
b(After)81 b(receiving)f(eac)-5 b(h)82 b(p)5 b(oin)-5
b(t,)85 b(w)-5 b(e)82 b(m)-5 b(ust)455 8573 y(compute)53
b(the)h(con)-5 b(v)g(ex)53 b(h)-5 b(ull)54 b(of)g(all)f(those)g(p)5
b(oin)-5 b(ts)54 b(so)g(far.)77 b(Giv)-5 b(e)54 b(an)g(algorithm)f(to)h
(solv)-5 b(e)53 b(this)g(problem)g(in)455 8799 y Fi(O)5
b Fl(\()p Fi(n)779 8733 y Fj(2)857 8799 y Fl(\))66 b(\(W)-15
b(e)66 b(could)g(ob)-5 b(viously)65 b(use)h(Graham's)f(scan)h
Fi(n)h Fl(times)e(for)h(an)g Fi(O)5 b Fl(\()p Fi(n)5787
8733 y Fj(2)5896 8799 y Fl(log)32 b Fi(n)p Fl(\))67 b(algorithm\).)96
b(Hin)-5 b(t:)455 9025 y(Ho)g(w)61 b(do)f(y)-5 b(ou)61
b(main)-5 b(tain)58 b(the)i(con)-5 b(v)g(ex)60 b(h)-5
b(ull?)222 9402 y(4.)91 b(Another)60 b(On-Line)g(Con)-5
b(v)g(ex)60 b(Hull)g(Algorithm)531 9773 y(\(a\))91 b(Giv)-5
b(en)46 b(an)i Fi(n)p Fl(-p)5 b(olygon)46 b(and)i(a)f(p)5
b(oin)-5 b(t)47 b(outside)g(the)g(p)5 b(olygon,)49 b(giv)-5
b(e)47 b(an)g(algorithm)f(to)h(\014nd)h(a)f(tangen)-5
b(t.)442 9994 y Fd(?)521 10060 y Fl(\(b\))91 b(Supp)5
b(ose)69 b(y)-5 b(ou)71 b(ha)-5 b(v)g(e)70 b(found)g(b)5
b(oth)70 b(tangen)-5 b(ts.)108 b(Giv)-5 b(e)69 b(an)i(algorithm)d(to)i
(remo)-5 b(v)g(e)70 b(the)g(p)5 b(oin)-5 b(ts)69 b(from)855
10286 y(the)h(p)5 b(olygon)71 b(that)f(are)h(within)f(the)h(angle)f
(formed)g(b)-5 b(y)71 b(the)g(tangen)-5 b(ts)69 b(\(as)i(segmen)-5
b(ts!\))109 b(and)71 b(the)855 10512 y(opp)5 b(osite)59
b(side)g(of)h(the)h(p)5 b(olygon.)541 10800 y(\(c\))91
b(Use)60 b(the)g(ab)5 b(o)-5 b(v)g(e)60 b(to)h(giv)-5
b(e)59 b(an)i(algorithm)e(to)h(compute)f(the)h(con)-5
b(v)g(ex)60 b(h)-5 b(ull)60 b(on-line)f(in)h Fi(O)5 b
Fl(\()p Fi(n)30 b Fl(log)i Fi(n)p Fl(\))3855 11160 y(4)p
eop
%%Page: 5 5
5 4 bop 0 -360 a Fk(CS)70 b(373)2043 b(Homew)-6 b(ork)69
b(4)g(\(due)h(3/29/01\))1497 b(Spring)69 b(2001)p 0 -285
7800 8 v 222 183 a Fl(5.)91 b(Order)61 b(of)f(the)g(size)f(of)i(the)f
(con)-5 b(v)g(ex)60 b(h)-5 b(ull)455 408 y(The)70 b(con)-5
b(v)g(ex)70 b(h)-5 b(ull)70 b(on)g Fi(n)e Fc(\025)f Fl(3)k(p)5
b(oin)-5 b(ts)69 b(can)i(ha)-5 b(v)g(e)70 b(an)-5 b(ywhere)70
b(from)g(3)h(to)f Fi(n)h Fl(p)5 b(oin)-5 b(ts.)109 b(The)71
b(a)-5 b(v)g(erage)70 b(case)455 634 y(dep)5 b(ends)60
b(on)g(the)g(distribution.)531 1010 y(\(a\))91 b(Pro)-5
b(v)g(e)48 b(that)h(if)f(a)h(set)f(of)h(p)5 b(oin)-5
b(ts)48 b(is)g(c)-5 b(hosen)48 b(randomly)g(within)g(a)h(giv)-5
b(en)49 b(rectangle)e(then)i(the)g(a)-5 b(v)g(erage)855
1235 y(size)59 b(of)h(the)g(con)-5 b(v)g(ex)60 b(h)-5
b(ull)60 b(is)g Fi(O)5 b Fl(\(log)31 b Fi(n)p Fl(\).)387
1462 y Fa(F)521 1528 y Fl(\(b\))91 b(Pro)-5 b(v)g(e)67
b(that)g(if)h(a)f(set)h(of)f(p)5 b(oin)-5 b(ts)67 b(is)g(c)-5
b(hosen)68 b(randomly)f(within)g(a)h(giv)-5 b(en)67 b(circle)f(then)i
(the)g(a)-5 b(v)g(erage)855 1753 y(size)59 b(of)h(the)g(con)-5
b(v)g(ex)60 b(h)-5 b(ull)60 b(is)g Fi(O)5 b Fl(\()p Fi(n)3181
1687 y Fj(1)p Fd(=)p Fj(3)3400 1753 y Fl(\).)222 4845
y(6.)91 b(Ghostbusters)58 b(and)j(Ghosts)455 5071 y(A)66
b(group)h(of)e Fi(n)i Fl(ghostbusters)e(is)g(battling)g
Fi(n)h Fl(ghosts.)97 b(Eac)-5 b(h)66 b(ghostbuster)f(can)h(sho)5
b(ot)65 b(a)i(single)d(energy)455 5297 y(b)5 b(eam)58
b(at)g(a)h(ghost,)f(eradicating)g(it.)79 b(A)59 b(stream)f(go)5
b(es)58 b(in)h(a)g(straigh)-5 b(t)57 b(line)h(and)h(terminates)e(when)i
(it)f(hits)455 5523 y(a)d(ghost.)78 b(The)55 b(ghostbusters)f(m)-5
b(ust)54 b(all)h(\014re)g(at)g(the)g(same)f(time)g(and)i(no)f(t)-5
b(w)g(o)55 b(energy)g(b)5 b(eams)55 b(ma)-5 b(y)55 b(cross)455
5749 y(\(it)f(w)-5 b(ould)56 b(b)5 b(e)55 b(bad\).)79
b(The)56 b(p)5 b(ositions)53 b(of)j(the)f(ghosts)g(and)g(ghostbusters)g
(is)f(\014xed)i(in)f(the)h(plane)f(\(assume)455 5974
y(that)k(no)i(three)f(p)5 b(oin)-5 b(ts)60 b(are)g(collinear\).)531
6400 y(\(a\))91 b(Pro)-5 b(v)g(e)80 b(that)g(for)g(an)-5
b(y)81 b(con\014guration)e(of)h(ghosts)g(and)g(ghostbusters)f(there)i
(exists)e(suc)-5 b(h)80 b(a)g(non-)855 6625 y(crossing)59
b(matc)-5 b(hing.)521 6918 y(\(b\))91 b(Sho)-5 b(w)64
b(that)g(there)g(exists)e(a)j(line)e(passing)g(through)h(one)g
(ghostbuster)f(and)h(one)g(ghost)g(suc)-5 b(h)64 b(that)855
7143 y(the)i(n)-5 b(um)g(b)5 b(er)66 b(of)g(ghostbusters)g(on)g(one)h
(side)f(of)g(the)g(line)g(equals)f(the)i(n)-5 b(um)g(b)5
b(er)66 b(of)g(ghosts)g(on)g(the)855 7369 y(same)59 b(side.)79
b(Giv)-5 b(e)60 b(an)g(e\016cien)-5 b(t)59 b(algorithm)g(to)h(\014nd)h
(suc)-5 b(h)60 b(a)g(line.)541 7661 y(\(c\))91 b(Giv)-5
b(e)65 b(an)h(e\016cien)-5 b(t)64 b(divide)h(and)h(conquer)g(algorithm)
e(to)i(pair)g(ghostbusters)f(and)h(ghosts)f(so)h(that)855
7887 y(no)60 b(t)-5 b(w)g(o)61 b(streams)e(cross.)3855
11160 y(5)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
